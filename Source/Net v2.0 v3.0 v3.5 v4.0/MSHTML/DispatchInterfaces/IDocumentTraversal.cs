//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using LateBindingApi.Core;
namespace LateBindingApi.MSHTMLApi
{
	///<summary>
	/// DispatchInterface IDocumentTraversal SupportByLibrary MSHTML, 4
	///</summary>
	[SupportByLibrary("MSHTML", 4)]
	[EntityTypeAttribute(EntityType.IsDispatchInterface)]
	public class IDocumentTraversal : COMObject
	{
		#pragma warning disable
		#region Type Information

        private static Type _type;

		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public static Type LateBindingApiWrapperType
        {
            get
            {
                if (null == _type)
                    _type = typeof(IDocumentTraversal);
                    
                return _type;
            }
        }
        
        #endregion
        
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDocumentTraversal(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDocumentTraversal(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDocumentTraversal(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDocumentTraversal() : base()
		{
		}
		
		/// <param name="progId">registered ProgID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDocumentTraversal(string progId) : base(progId)
		{
		}
		
		#endregion
		
		#region Properties

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="pRootNode">object pRootNode</param>
		/// <param name="ulWhatToShow">Int32 ulWhatToShow</param>
		/// <param name="pFilter">object pFilter</param>
		/// <param name="fEntityReferenceExpansion">bool fEntityReferenceExpansion</param>
		[SupportByLibrary("MSHTML", 4)]
		public LateBindingApi.MSHTMLApi.IDOMNodeIterator createNodeIterator(object pRootNode, Int32 ulWhatToShow, object pFilter, bool fEntityReferenceExpansion)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(pRootNode, ulWhatToShow, pFilter, fEntityReferenceExpansion);
			object returnItem = Invoker.MethodReturn(this, "createNodeIterator", paramsArray);
			LateBindingApi.MSHTMLApi.IDOMNodeIterator newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as LateBindingApi.MSHTMLApi.IDOMNodeIterator;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="pRootNode">object pRootNode</param>
		/// <param name="ulWhatToShow">Int32 ulWhatToShow</param>
		/// <param name="pFilter">object pFilter</param>
		/// <param name="fEntityReferenceExpansion">bool fEntityReferenceExpansion</param>
		[SupportByLibrary("MSHTML", 4)]
		public LateBindingApi.MSHTMLApi.IDOMTreeWalker createTreeWalker(object pRootNode, Int32 ulWhatToShow, object pFilter, bool fEntityReferenceExpansion)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(pRootNode, ulWhatToShow, pFilter, fEntityReferenceExpansion);
			object returnItem = Invoker.MethodReturn(this, "createTreeWalker", paramsArray);
			LateBindingApi.MSHTMLApi.IDOMTreeWalker newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as LateBindingApi.MSHTMLApi.IDOMTreeWalker;
			return newObject;
		}

		#endregion
		#pragma warning restore
	}
}