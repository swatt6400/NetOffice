//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Reflection;
using LateBindingApi.Core;
namespace LateBindingApi.MSHTMLApi
{
	///<summary>
	/// Interface IHTMLPaintSite SupportByLibraryAttribute MSHTML, 4
	///</summary>
	[SupportByLibraryAttribute("MSHTML", 4)]
	[EntityTypeAttribute(EntityType.IsInterface)]
	public class IHTMLPaintSite : COMObject
	{
		#pragma warning disable
		#region Type Information

        private static Type _type;

		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public static Type LateBindingApiWrapperType
        {
            get
            {
                if (null == _type)
                    _type = typeof(IHTMLPaintSite);
                    
                return _type;
            }
        }
        
        #endregion
        
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IHTMLPaintSite(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IHTMLPaintSite(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IHTMLPaintSite(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IHTMLPaintSite() : base()
		{
		}
		
		/// <param name="progId">registered ProgID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IHTMLPaintSite(string progId) : base(progId)
		{
		}
		
		#endregion
		
		#region Properties

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		[SupportByLibraryAttribute("MSHTML", 4)]
		public Int32 InvalidatePainterInfo()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InvalidatePainterInfo", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="prcInvalid">tagRECT prcInvalid</param>
		[SupportByLibraryAttribute("MSHTML", 4)]
		public Int32 InvalidateRect(tagRECT prcInvalid)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(prcInvalid);
			object returnItem = Invoker.MethodReturn(this, "InvalidateRect", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="rgnInvalid">_RemotableHandle rgnInvalid</param>
		[SupportByLibraryAttribute("MSHTML", 4)]
		public Int32 InvalidateRegion(_RemotableHandle rgnInvalid)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(rgnInvalid);
			object returnItem = Invoker.MethodReturn(this, "InvalidateRegion", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="lFlags">Int32 lFlags</param>
		/// <param name="pDrawInfo">_HTML_PAINT_DRAW_INFO pDrawInfo</param>
		[SupportByLibraryAttribute("MSHTML", 4)]
		public Int32 GetDrawInfo(Int32 lFlags, _HTML_PAINT_DRAW_INFO pDrawInfo)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(lFlags, pDrawInfo);
			object returnItem = Invoker.MethodReturn(this, "GetDrawInfo", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="ptGlobal">tagPOINT ptGlobal</param>
		/// <param name="pptLocal">tagPOINT pptLocal</param>
		[SupportByLibraryAttribute("MSHTML", 4)]
		public Int32 TransformGlobalToLocal(tagPOINT ptGlobal, tagPOINT pptLocal)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(ptGlobal, pptLocal);
			object returnItem = Invoker.MethodReturn(this, "TransformGlobalToLocal", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="ptLocal">tagPOINT ptLocal</param>
		/// <param name="pptGlobal">tagPOINT pptGlobal</param>
		[SupportByLibraryAttribute("MSHTML", 4)]
		public Int32 TransformLocalToGlobal(tagPOINT ptLocal, tagPOINT pptGlobal)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(ptLocal, pptGlobal);
			object returnItem = Invoker.MethodReturn(this, "TransformLocalToGlobal", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSHTML 4
		/// </summary>
		/// <param name="plCookie">Int32 plCookie</param>
		[SupportByLibraryAttribute("MSHTML", 4)]
		public Int32 GetHitTestCookie(Int32 plCookie)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(plCookie);
			object returnItem = Invoker.MethodReturn(this, "GetHitTestCookie", paramsArray);
			return (Int32)returnItem;
		}

		#endregion
		#pragma warning restore
	}
}