//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using LateBindingApi.Core;
namespace LateBindingApi.MSProjectApi
{
	///<summary>
	/// DispatchInterface _Global SupportByLibrary MSProject, 12,14
	///</summary>
	[SupportByLibrary("MSProject", 12,14)]
	[EntityTypeAttribute(EntityType.IsDispatchInterface)]
	public class _Global : COMObject
	{
		#pragma warning disable
		#region Type Information

        private static Type _type;

		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public static Type LateBindingApiWrapperType
        {
            get
            {
                if (null == _type)
                    _type = typeof(_Global);
                    
                return _type;
            }
        }
        
        #endregion
        
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Global(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Global(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Global(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Global() : base()
		{
		}
		
		/// <param name="progId">registered ProgID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Global(string progId) : base(progId)
		{
		}
		
		#endregion
		
		#region Properties

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Application Application
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Application", paramsArray);
				LateBindingApi.MSProjectApi.Application newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Application.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Application;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Application", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Application Parent
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Parent", paramsArray);
				LateBindingApi.MSProjectApi.Application newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Application.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Application;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Parent", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Selection ActiveSelection
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveSelection", paramsArray);
				LateBindingApi.MSProjectApi.Selection newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Selection.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Selection;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ActiveSelection", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Cell ActiveCell
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveCell", paramsArray);
				LateBindingApi.MSProjectApi.Cell newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Cell.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Cell;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ActiveCell", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Project ActiveProject
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveProject", paramsArray);
				LateBindingApi.MSProjectApi.Project newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Project.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Project;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ActiveProject", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Window ActiveWindow
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveWindow", paramsArray);
				LateBindingApi.MSProjectApi.Window newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Window.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Window;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ActiveWindow", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SupportsMultipleDocuments
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SupportsMultipleDocuments", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "SupportsMultipleDocuments", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SupportsMultipleWindows
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SupportsMultipleWindows", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "SupportsMultipleWindows", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Visible
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Visible", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Visible", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string PathSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PathSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "PathSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string Caption
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Caption", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Caption", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string Name
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Name", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Name", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string Path
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Path", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Path", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string Version
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Version", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Version", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjWindowState WindowState
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "WindowState", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjWindowState)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "WindowState", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.ReportTemplates VisualReportTemplateList
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "VisualReportTemplateList", paramsArray);
				LateBindingApi.MSProjectApi.ReportTemplates newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.ReportTemplates.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.ReportTemplates;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "VisualReportTemplateList", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjDateOrder DateOrder
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DateOrder", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjDateOrder)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DateOrder", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string DateSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DateSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DateSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string ThousandSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ThousandSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ThousandSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string DecimalSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DecimalSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DecimalSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string ListSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ListSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ListSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string TimeSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TimeSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "TimeSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TwelveHourTimeFormat
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TwelveHourTimeFormat", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "TwelveHourTimeFormat", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string AMText
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AMText", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "AMText", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string PMText
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PMText", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "PMText", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string DefaultView
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultView", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultView", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayStatusBar
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayStatusBar", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayStatusBar", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayAlerts
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayAlerts", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayAlerts", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayEntryBar
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayEntryBar", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayEntryBar", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayScrollBars
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayScrollBars", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayScrollBars", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayWindowsInTaskbar
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayWindowsInTaskbar", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayWindowsInTaskbar", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjCalculation Calculation
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Calculation", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjCalculation)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Calculation", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AutoLevel
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AutoLevel", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "AutoLevel", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AutoClearLeveling
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AutoClearLeveling", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "AutoClearLeveling", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelWithinSlack
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LevelWithinSlack", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LevelWithinSlack", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjLevelOrder LevelOrder
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LevelOrder", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjLevelOrder)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LevelOrder", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjLevelPeriodBasis LevelPeriodBasis
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LevelPeriodBasis", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjLevelPeriodBasis)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LevelPeriodBasis", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelIndividualAssignments
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LevelIndividualAssignments", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LevelIndividualAssignments", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelProposedBookings
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LevelProposedBookings", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LevelProposedBookings", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelingCanSplit
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LevelingCanSplit", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LevelingCanSplit", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MoveAfterReturn
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MoveAfterReturn", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "MoveAfterReturn", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayScheduleMessages
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayScheduleMessages", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayScheduleMessages", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjWeekday StartWeekOn
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "StartWeekOn", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjWeekday)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "StartWeekOn", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjMonth StartYearIn
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "StartYearIn", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjMonth)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "StartYearIn", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CellDragAndDrop
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CellDragAndDrop", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "CellDragAndDrop", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string UserName
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UserName", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UserName", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayNotesIndicator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayNotesIndicator", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayNotesIndicator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AskToUpdateLinks
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AskToUpdateLinks", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "AskToUpdateLinks", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayPlanningWizard
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayPlanningWizard", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayPlanningWizard", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayWizardUsage
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayWizardUsage", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayWizardUsage", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayWizardErrors
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayWizardErrors", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayWizardErrors", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayWizardScheduling
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayWizardScheduling", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayWizardScheduling", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ShowTipOfDay
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowTipOfDay", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowTipOfDay", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ShowToolTips
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowToolTips", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowToolTips", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ShowWelcome
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowWelcome", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowWelcome", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LoadLastFile
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LoadLastFile", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LoadLastFile", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PromptForSummaryInfo
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PromptForSummaryInfo", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "PromptForSummaryInfo", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayOLEIndicator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayOLEIndicator", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayOLEIndicator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjDateFormat DefaultDateFormat
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultDateFormat", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjDateFormat)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultDateFormat", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DayLeadingZero
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DayLeadingZero", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DayLeadingZero", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MonthLeadingZero
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MonthLeadingZero", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "MonthLeadingZero", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TimeLeadingZero
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TimeLeadingZero", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "TimeLeadingZero", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CopyResourceUsageHeader
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CopyResourceUsageHeader", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "CopyResourceUsageHeader", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 RecentFilesMaximum
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "RecentFilesMaximum", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "RecentFilesMaximum", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayRecentFiles
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayRecentFiles", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayRecentFiles", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MacroVirusProtection
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MacroVirusProtection", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "MacroVirusProtection", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjAssignmentUnits ShowAssignmentUnitsAs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowAssignmentUnitsAs", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjAssignmentUnits)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowAssignmentUnitsAs", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AutomaticallyFillPhoneticFields
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AutomaticallyFillPhoneticFields", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "AutomaticallyFillPhoneticFields", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DefaultAutoFilter
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultAutoFilter", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultAutoFilter", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ShowEstimatedDuration
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowEstimatedDuration", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowEstimatedDuration", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool NewTasksEstimated
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "NewTasksEstimated", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "NewTasksEstimated", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public NetOffice.OfficeApi.Assistant Assistant
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Assistant", paramsArray);
				NetOffice.OfficeApi.Assistant newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,NetOffice.OfficeApi.Assistant.LateBindingApiWrapperType) as NetOffice.OfficeApi.Assistant;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Assistant", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayViewBar
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayViewBar", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayViewBar", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public NetOffice.VBIDEApi.VBE VBE
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "VBE", paramsArray);
				NetOffice.VBIDEApi.VBE newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,NetOffice.VBIDEApi.VBE.LateBindingApiWrapperType) as NetOffice.VBIDEApi.VBE;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "VBE", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjEnableCancelKey EnableCancelKey
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EnableCancelKey", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjEnableCancelKey)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "EnableCancelKey", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UserControl
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UserControl", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UserControl", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Double UsableWidth
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UsableWidth", paramsArray);
				return (Double)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UsableWidth", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Double UsableHeight
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UsableHeight", paramsArray);
				return (Double)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UsableHeight", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ScreenUpdating
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ScreenUpdating", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ScreenUpdating", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplayProjectGuide
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayProjectGuide", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayProjectGuide", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseAllowLocalBaseCalendars
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EnterpriseAllowLocalBaseCalendars", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "EnterpriseAllowLocalBaseCalendars", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjEditionType Edition
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Edition", paramsArray);
				return (LateBindingApi.MSProjectApi.Enums.PjEditionType)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Edition", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Profiles Profiles
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Profiles", paramsArray);
				LateBindingApi.MSProjectApi.Profiles newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Profiles.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Profiles;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Profiles", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Calendars GlobalBaseCalendars
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalBaseCalendars", paramsArray);
				LateBindingApi.MSProjectApi.Calendars newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Calendars.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Calendars;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalBaseCalendars", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Views GlobalViews
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalViews", paramsArray);
				LateBindingApi.MSProjectApi.Views newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as LateBindingApi.MSProjectApi.Views;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalViews", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.ViewsSingle GlobalViewsSingle
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalViewsSingle", paramsArray);
				LateBindingApi.MSProjectApi.ViewsSingle newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.ViewsSingle.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.ViewsSingle;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalViewsSingle", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.ViewsCombination GlobalViewsCombination
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalViewsCombination", paramsArray);
				LateBindingApi.MSProjectApi.ViewsCombination newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.ViewsCombination.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.ViewsCombination;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalViewsCombination", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Tables GlobalTaskTables
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalTaskTables", paramsArray);
				LateBindingApi.MSProjectApi.Tables newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Tables.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Tables;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalTaskTables", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Tables GlobalResourceTables
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalResourceTables", paramsArray);
				LateBindingApi.MSProjectApi.Tables newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Tables.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Tables;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalResourceTables", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Filters GlobalTaskFilters
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalTaskFilters", paramsArray);
				LateBindingApi.MSProjectApi.Filters newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Filters.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Filters;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalTaskFilters", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Filters GlobalResourceFilters
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalResourceFilters", paramsArray);
				LateBindingApi.MSProjectApi.Filters newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Filters.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Filters;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalResourceFilters", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.OutlineCodes GlobalOutlineCodes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GlobalOutlineCodes", paramsArray);
				LateBindingApi.MSProjectApi.OutlineCodes newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.OutlineCodes.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.OutlineCodes;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GlobalOutlineCodes", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string EnterpriseListSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EnterpriseListSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "EnterpriseListSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseProtectActuals
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EnterpriseProtectActuals", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "EnterpriseProtectActuals", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Use3DLook
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Use3DLook", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Use3DLook", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UseOMIDs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UseOMIDs", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UseOMIDs", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 UndoLevels
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UndoLevels", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UndoLevels", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnableChangeHighlighting
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EnableChangeHighlighting", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "EnableChangeHighlighting", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string VisualReportsAdditionalTemplatePath
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "VisualReportsAdditionalTemplatePath", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "VisualReportsAdditionalTemplatePath", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TrustProjectServerAndWSSPages
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TrustProjectServerAndWSSPages", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "TrustProjectServerAndWSSPages", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Windows Windows
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Windows", paramsArray);
				LateBindingApi.MSProjectApi.Windows newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Windows.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Windows;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public NetOffice.OfficeApi.CommandBars CommandBars
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CommandBars", paramsArray);
				NetOffice.OfficeApi.CommandBars newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,NetOffice.OfficeApi.CommandBars.LateBindingApiWrapperType) as NetOffice.OfficeApi.CommandBars;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public NetOffice.OfficeApi.AnswerWizard AnswerWizard
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AnswerWizard", paramsArray);
				NetOffice.OfficeApi.AnswerWizard newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,NetOffice.OfficeApi.AnswerWizard.LateBindingApiWrapperType) as NetOffice.OfficeApi.AnswerWizard;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Projects Projects
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Projects", paramsArray);
				LateBindingApi.MSProjectApi.Projects newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Projects.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Projects;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string OperatingSystem
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "OperatingSystem", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="UserID">optional object UserID</param>
		/// <param name="DatabasePassWord">optional object DatabasePassWord</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string get_FileFormatID(string name, object userID, object databasePassWord)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, userID, databasePassWord);
			object returnItem = Invoker.PropertyGet(this, "FileFormatID", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string get_FileFormatID(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.PropertyGet(this, "FileFormatID", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="UserID">optional object UserID</param>
		/// <param name="DatabasePassWord">optional object DatabasePassWord</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string get_FileBuildID(string name, object userID, object databasePassWord)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, userID, databasePassWord);
			object returnItem = Invoker.PropertyGet(this, "FileBuildID", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string get_FileBuildID(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.PropertyGet(this, "FileBuildID", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public NetOffice.OfficeApi.COMAddIns COMAddIns
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "COMAddIns", paramsArray);
				NetOffice.OfficeApi.COMAddIns newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,NetOffice.OfficeApi.COMAddIns.LateBindingApiWrapperType) as NetOffice.OfficeApi.COMAddIns;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Windows2 Windows2
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Windows2", paramsArray);
				LateBindingApi.MSProjectApi.Windows2 newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,LateBindingApi.MSProjectApi.Windows2.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Windows2;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// Get
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public NetOffice.OfficeApi.IAssistance Assistance
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Assistance", paramsArray);
				NetOffice.OfficeApi.IAssistance newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,NetOffice.OfficeApi.IAssistance.LateBindingApiWrapperType) as NetOffice.OfficeApi.IAssistance;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public object TimescaleStart
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TimescaleStart", paramsArray);
				if((null != returnItem) && (returnItem is MarshalByRefObject))
				{
					COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
					return newObject;
				}
				else
				{
					return  returnItem;
				}
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "TimescaleStart", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public object TimescaleFinish
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TimescaleFinish", paramsArray);
				if((null != returnItem) && (returnItem is MarshalByRefObject))
				{
					COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
					return newObject;
				}
				else
				{
					return  returnItem;
				}
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "TimescaleFinish", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public object PanZoomStart
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PanZoomStart", paramsArray);
				if((null != returnItem) && (returnItem is MarshalByRefObject))
				{
					COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
					return newObject;
				}
				else
				{
					return  returnItem;
				}
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "PanZoomStart", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public object PanZoomFinish
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PanZoomFinish", paramsArray);
				if((null != returnItem) && (returnItem is MarshalByRefObject))
				{
					COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
					return newObject;
				}
				else
				{
					return  returnItem;
				}
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "PanZoomFinish", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public string Build
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Build", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Build", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public string CompareProjectsCurrentVersionName
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CompareProjectsCurrentVersionName", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "CompareProjectsCurrentVersionName", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public string CompareProjectsPreviousVersionName
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CompareProjectsPreviousVersionName", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "CompareProjectsPreviousVersionName", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// Get/Set
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool LevelFreeformTasks
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LevelFreeformTasks", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LevelFreeformTasks", paramsArray);
			}
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="SaveChanges">LateBindingApi.MSProjectApi.Enums.PjSaveType SaveChanges</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void Quit(LateBindingApi.MSProjectApi.Enums.PjSaveType saveChanges)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(saveChanges);
			Invoker.Method(this, "Quit", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FinishDate">object FinishDate</param>
		/// <param name="Duration">object Duration</param>
		/// <param name="Calendar">optional object Calendar</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object DateSubtract(object finishDate, object duration, object calendar)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(finishDate, duration, calendar);
			object returnItem = Invoker.MethodReturn(this, "DateSubtract", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FinishDate">object FinishDate</param>
		/// <param name="Duration">object Duration</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object DateSubtract(object finishDate, object duration)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(finishDate, duration);
			object returnItem = Invoker.MethodReturn(this, "DateSubtract", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Duration">object Duration</param>
		/// <param name="Units">optional object Units</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string DurationFormat(object duration, object units)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(duration, units);
			object returnItem = Invoker.MethodReturn(this, "DurationFormat", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Duration">object Duration</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string DurationFormat(object duration)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(duration);
			object returnItem = Invoker.MethodReturn(this, "DurationFormat", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Duration">string Duration</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object DurationValue(string duration)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(duration);
			object returnItem = Invoker.MethodReturn(this, "DurationValue", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Date">object Date</param>
		/// <param name="Format">optional object Format</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object DateFormat(object date, object format)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(date, format);
			object returnItem = Invoker.MethodReturn(this, "DateFormat", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Date">object Date</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object DateFormat(object date)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(date);
			object returnItem = Invoker.MethodReturn(this, "DateFormat", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Password">optional object Password</param>
		/// <param name="DownloadNewMail">optional object DownloadNewMail</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void MailLogon(object name, object password, object downloadNewMail)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, password, downloadNewMail);
			Invoker.Method(this, "MailLogon", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void MailLogon()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "MailLogon", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void MailLogoff()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "MailLogoff", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public object MailSession()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailSession", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public object MailSystem()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailSystem", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		/// <param name="ResourceID">Int32 ResourceID</param>
		/// <param name="StartDate">object StartDate</param>
		/// <param name="EndDate">object EndDate</param>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjTimescaledData Type</param>
		/// <param name="TimeScaleUnit">LateBindingApi.MSProjectApi.Enums.PjTimescaleUnit TimeScaleUnit</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object TimescaledData(Int32 taskID, Int32 resourceID, object startDate, object endDate, LateBindingApi.MSProjectApi.Enums.PjTimescaledData type, LateBindingApi.MSProjectApi.Enums.PjTimescaleUnit timeScaleUnit, object count)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID, resourceID, startDate, endDate, type, timeScaleUnit, count);
			object returnItem = Invoker.MethodReturn(this, "TimescaledData", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		/// <param name="ResourceID">Int32 ResourceID</param>
		/// <param name="StartDate">object StartDate</param>
		/// <param name="EndDate">object EndDate</param>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjTimescaledData Type</param>
		/// <param name="TimeScaleUnit">LateBindingApi.MSProjectApi.Enums.PjTimescaleUnit TimeScaleUnit</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object TimescaledData(Int32 taskID, Int32 resourceID, object startDate, object endDate, LateBindingApi.MSProjectApi.Enums.PjTimescaledData type, LateBindingApi.MSProjectApi.Enums.PjTimescaleUnit timeScaleUnit)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID, resourceID, startDate, endDate, type, timeScaleUnit);
			object returnItem = Invoker.MethodReturn(this, "TimescaledData", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string CustomFieldGetName(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldGetName", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="Arg1">optional object Arg1</param>
		/// <param name="Arg2">optional object Arg2</param>
		/// <param name="Arg3">optional object Arg3</param>
		/// <param name="Arg4">optional object Arg4</param>
		/// <param name="Arg5">optional object Arg5</param>
		/// <param name="Arg6">optional object Arg6</param>
		/// <param name="Arg7">optional object Arg7</param>
		/// <param name="Arg8">optional object Arg8</param>
		/// <param name="Arg9">optional object Arg9</param>
		/// <param name="Arg10">optional object Arg10</param>
		/// <param name="Arg11">optional object Arg11</param>
		/// <param name="Arg12">optional object Arg12</param>
		/// <param name="Arg13">optional object Arg13</param>
		/// <param name="Arg14">optional object Arg14</param>
		/// <param name="Arg15">optional object Arg15</param>
		/// <param name="Arg16">optional object Arg16</param>
		/// <param name="Arg17">optional object Arg17</param>
		/// <param name="Arg18">optional object Arg18</param>
		/// <param name="Arg19">optional object Arg19</param>
		/// <param name="Arg20">optional object Arg20</param>
		/// <param name="Arg21">optional object Arg21</param>
		/// <param name="Arg22">optional object Arg22</param>
		/// <param name="Arg23">optional object Arg23</param>
		/// <param name="Arg24">optional object Arg24</param>
		/// <param name="Arg25">optional object Arg25</param>
		/// <param name="Arg26">optional object Arg26</param>
		/// <param name="Arg27">optional object Arg27</param>
		/// <param name="Arg28">optional object Arg28</param>
		/// <param name="Arg29">optional object Arg29</param>
		/// <param name="Arg30">optional object Arg30</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30);
			Invoker.Method(this, "Run", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void Run(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			Invoker.Method(this, "Run", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 BoxGetXPosition(Int32 taskID, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID, projectName);
			object returnItem = Invoker.MethodReturn(this, "BoxGetXPosition", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 BoxGetXPosition(Int32 taskID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID);
			object returnItem = Invoker.MethodReturn(this, "BoxGetXPosition", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 BoxGetYPosition(Int32 taskID, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID, projectName);
			object returnItem = Invoker.MethodReturn(this, "BoxGetYPosition", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 BoxGetYPosition(Int32 taskID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID);
			object returnItem = Invoker.MethodReturn(this, "BoxGetYPosition", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string CustomFieldGetFormula(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldGetFormula", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjValueListItem Item</param>
		/// <param name="Index">Int32 Index</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string CustomFieldValueListGetItem(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, LateBindingApi.MSProjectApi.Enums.PjValueListItem item, Int32 index)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, item, index);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldValueListGetItem", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="goalArea">Int32 goalArea</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void GoalAreaHighlight(Int32 goalArea)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(goalArea);
			Invoker.Method(this, "GoalAreaHighlight", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="DisplayState">bool DisplayState</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void SetSidepaneStateButton(bool displayState)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(displayState);
			Invoker.Method(this, "SetSidepaneStateButton", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void GoalAreaTaskHighlight(Int32 taskID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID);
			Invoker.Method(this, "GoalAreaTaskHighlight", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldName">string FieldName</param>
		/// <param name="FieldType">LateBindingApi.MSProjectApi.Enums.PjFieldType FieldType</param>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjField FieldNameToFieldConstant(string fieldName, LateBindingApi.MSProjectApi.Enums.PjFieldType fieldType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldName, fieldType);
			object returnItem = Invoker.MethodReturn(this, "FieldNameToFieldConstant", paramsArray);
			return (LateBindingApi.MSProjectApi.Enums.PjField)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">LateBindingApi.MSProjectApi.Enums.PjField Field</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string FieldConstantToFieldName(LateBindingApi.MSProjectApi.Enums.PjField field)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field);
			object returnItem = Invoker.MethodReturn(this, "FieldConstantToFieldName", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="RequestXML">string RequestXML</param>
		/// <param name="Project">optional object Project</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string GetProjectServerSettings(string requestXML, object project)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(requestXML, project);
			object returnItem = Invoker.MethodReturn(this, "GetProjectServerSettings", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="RequestXML">string RequestXML</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string GetProjectServerSettings(string requestXML)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(requestXML);
			object returnItem = Invoker.MethodReturn(this, "GetProjectServerSettings", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Window">optional object Window</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void UnloadWebBrowserControl(object window)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(window);
			Invoker.Method(this, "UnloadWebBrowserControl", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void UnloadWebBrowserControl()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "UnloadWebBrowserControl", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ServerURL">string ServerURL</param>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Enums.PjServerVersionInfo GetProjectServerVersion(string serverURL)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(serverURL);
			object returnItem = Invoker.MethodReturn(this, "GetProjectServerVersion", paramsArray);
			return (LateBindingApi.MSProjectApi.Enums.PjServerVersionInfo)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="DataFile">string DataFile</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object UpdateFromProjectServer(string dataFile)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dataFile);
			object returnItem = Invoker.MethodReturn(this, "UpdateFromProjectServer", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 LocaleID()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LocaleID", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void EnterpriseMakeServerURLTrusted()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "EnterpriseMakeServerURLTrusted", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="URL">string URL</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool IsURLTrusted(string uRL)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(uRL);
			object returnItem = Invoker.MethodReturn(this, "IsURLTrusted", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowDialog">bool ShowDialog</param>
		/// <param name="ItemsScope">LateBindingApi.MSProjectApi.Enums.PjPublishScope ItemsScope</param>
		/// <param name="NotifyResources">bool NotifyResources</param>
		/// <param name="NotificationText">optional object NotificationText</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void PublishNewAndChangedAssignments(bool showDialog, LateBindingApi.MSProjectApi.Enums.PjPublishScope itemsScope, bool notifyResources, object notificationText)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showDialog, itemsScope, notifyResources, notificationText);
			Invoker.Method(this, "PublishNewAndChangedAssignments", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowDialog">bool ShowDialog</param>
		/// <param name="ItemsScope">LateBindingApi.MSProjectApi.Enums.PjPublishScope ItemsScope</param>
		/// <param name="NotifyResources">bool NotifyResources</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void PublishNewAndChangedAssignments(bool showDialog, LateBindingApi.MSProjectApi.Enums.PjPublishScope itemsScope, bool notifyResources)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showDialog, itemsScope, notifyResources);
			Invoker.Method(this, "PublishNewAndChangedAssignments", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowDialog">bool ShowDialog</param>
		/// <param name="PublishFullPlan">bool PublishFullPlan</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void PublishProjectPlan(bool showDialog, bool publishFullPlan)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showDialog, publishFullPlan);
			Invoker.Method(this, "PublishProjectPlan", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void PublishAllInformation()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PublishAllInformation", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowDialog">bool ShowDialog</param>
		/// <param name="ItemsScope">LateBindingApi.MSProjectApi.Enums.PjPublishScope ItemsScope</param>
		/// <param name="NotifyTaskLead">bool NotifyTaskLead</param>
		/// <param name="NotificationText">optional object NotificationText</param>
		/// <param name="ReportingPeriodFrom">optional object ReportingPeriodFrom</param>
		/// <param name="ReportingPeriodTo">optional object ReportingPeriodTo</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void RequestProgressInformation(bool showDialog, LateBindingApi.MSProjectApi.Enums.PjPublishScope itemsScope, bool notifyTaskLead, object notificationText, object reportingPeriodFrom, object reportingPeriodTo)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showDialog, itemsScope, notifyTaskLead, notificationText, reportingPeriodFrom, reportingPeriodTo);
			Invoker.Method(this, "RequestProgressInformation", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowDialog">bool ShowDialog</param>
		/// <param name="ItemsScope">LateBindingApi.MSProjectApi.Enums.PjPublishScope ItemsScope</param>
		/// <param name="NotifyTaskLead">bool NotifyTaskLead</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void RequestProgressInformation(bool showDialog, LateBindingApi.MSProjectApi.Enums.PjPublishScope itemsScope, bool notifyTaskLead)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showDialog, itemsScope, notifyTaskLead);
			Invoker.Method(this, "RequestProgressInformation", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowDialog">bool ShowDialog</param>
		/// <param name="ItemsScope">LateBindingApi.MSProjectApi.Enums.PjPublishScope ItemsScope</param>
		/// <param name="NotifyResources">bool NotifyResources</param>
		/// <param name="OverwriteActuals">bool OverwriteActuals</param>
		/// <param name="BecomeManager">bool BecomeManager</param>
		/// <param name="NotificationText">optional object NotificationText</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void RepublishAssignments(bool showDialog, LateBindingApi.MSProjectApi.Enums.PjPublishScope itemsScope, bool notifyResources, bool overwriteActuals, bool becomeManager, object notificationText)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showDialog, itemsScope, notifyResources, overwriteActuals, becomeManager, notificationText);
			Invoker.Method(this, "RepublishAssignments", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowDialog">bool ShowDialog</param>
		/// <param name="ItemsScope">LateBindingApi.MSProjectApi.Enums.PjPublishScope ItemsScope</param>
		/// <param name="NotifyResources">bool NotifyResources</param>
		/// <param name="OverwriteActuals">bool OverwriteActuals</param>
		/// <param name="BecomeManager">bool BecomeManager</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void RepublishAssignments(bool showDialog, LateBindingApi.MSProjectApi.Enums.PjPublishScope itemsScope, bool notifyResources, bool overwriteActuals, bool becomeManager)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showDialog, itemsScope, notifyResources, overwriteActuals, becomeManager);
			Invoker.Method(this, "RepublishAssignments", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="WaitForCompletion">bool WaitForCompletion</param>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 RegisterProject(bool waitForCompletion)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(waitForCompletion);
			object returnItem = Invoker.MethodReturn(this, "RegisterProject", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="AlertText">string AlertText</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SaveProjectIfDirty(string alertText)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(alertText);
			object returnItem = Invoker.MethodReturn(this, "SaveProjectIfDirty", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool IsOfficeTaskPaneVisible()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "IsOfficeTaskPaneVisible", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void OfficeTaskPaneHide()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "OfficeTaskPaneHide", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 GetCurrentTheme()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GetCurrentTheme", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Message">string Message</param>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjMessageType Type</param>
		/// <param name="YesText">optional object YesText</param>
		/// <param name="NoText">optional object NoText</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Message(string message, LateBindingApi.MSProjectApi.Enums.PjMessageType type, object yesText, object noText)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(message, type, yesText, noText);
			object returnItem = Invoker.MethodReturn(this, "Message", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Message">string Message</param>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjMessageType Type</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Message(string message, LateBindingApi.MSProjectApi.Enums.PjMessageType type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(message, type);
			object returnItem = Invoker.MethodReturn(this, "Message", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Alerts(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "Alerts", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Alerts()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Alerts", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="SummaryInfo">optional object SummaryInfo</param>
		/// <param name="Template">optional object Template</param>
		/// <param name="FileNewDialog">optional object FileNewDialog</param>
		/// <param name="FileNewWorkpane">optional object FileNewWorkpane</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileNew(object summaryInfo, object template, object fileNewDialog, object fileNewWorkpane)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(summaryInfo, template, fileNewDialog, fileNewWorkpane);
			object returnItem = Invoker.MethodReturn(this, "FileNew", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileNew()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FileNew", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileProperties()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FileProperties", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="ReadOnly">object ReadOnly</param>
		/// <param name="Merge">object Merge</param>
		/// <param name="TaskInformation">object TaskInformation</param>
		/// <param name="Table">object Table</param>
		/// <param name="Sheet">object Sheet</param>
		/// <param name="NoAuto">object NoAuto</param>
		/// <param name="UserID">object UserID</param>
		/// <param name="DatabasePassWord">object DatabasePassWord</param>
		/// <param name="FormatID">object FormatID</param>
		/// <param name="Map">object Map</param>
		/// <param name="openPool">LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool</param>
		/// <param name="Password">optional object Password</param>
		/// <param name="WriteResPassword">optional object WriteResPassword</param>
		/// <param name="IgnoreReadOnlyRecommended">optional object IgnoreReadOnlyRecommended</param>
		/// <param name="XMLName">optional object XMLName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool, object password, object writeResPassword, object ignoreReadOnlyRecommended, object xMLName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword, ignoreReadOnlyRecommended, xMLName);
			object returnItem = Invoker.MethodReturn(this, "FileOpen", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="ReadOnly">object ReadOnly</param>
		/// <param name="Merge">object Merge</param>
		/// <param name="TaskInformation">object TaskInformation</param>
		/// <param name="Table">object Table</param>
		/// <param name="Sheet">object Sheet</param>
		/// <param name="NoAuto">object NoAuto</param>
		/// <param name="UserID">object UserID</param>
		/// <param name="DatabasePassWord">object DatabasePassWord</param>
		/// <param name="FormatID">object FormatID</param>
		/// <param name="Map">object Map</param>
		/// <param name="openPool">LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool);
			object returnItem = Invoker.MethodReturn(this, "FileOpen", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Zoom()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Zoom", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Duration">optional object Duration</param>
		/// <param name="Entire">optional object Entire</param>
		/// <param name="Selection">optional object Selection</param>
		/// <param name="Reset">optional object Reset</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ZoomTimescale(object duration, object entire, object selection, object reset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(duration, entire, selection, reset);
			object returnItem = Invoker.MethodReturn(this, "ZoomTimescale", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ZoomTimescale()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ZoomTimescale", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Percent">optional object Percent</param>
		/// <param name="Entire">optional object Entire</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxZoom(object percent, object entire)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(percent, entire);
			object returnItem = Invoker.MethodReturn(this, "BoxZoom", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxZoom()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BoxZoom", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		/// <param name="NoAuto">optional object NoAuto</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileClose(LateBindingApi.MSProjectApi.Enums.PjSaveType save, object noAuto)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save, noAuto);
			object returnItem = Invoker.MethodReturn(this, "FileClose", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileClose(LateBindingApi.MSProjectApi.Enums.PjSaveType save)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save);
			object returnItem = Invoker.MethodReturn(this, "FileClose", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileCloseAll(LateBindingApi.MSProjectApi.Enums.PjSaveType save)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save);
			object returnItem = Invoker.MethodReturn(this, "FileCloseAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Share">optional object Share</param>
		/// <param name="Name">optional object Name</param>
		/// <param name="Pool">optional object Pool</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceSharing(object share, object name, object pool)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(share, name, pool);
			object returnItem = Invoker.MethodReturn(this, "ResourceSharing", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceSharing()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceSharing", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileSave()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FileSave", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Format">LateBindingApi.MSProjectApi.Enums.PjFileFormat Format</param>
		/// <param name="Backup">optional object Backup</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="TaskInformation">optional object TaskInformation</param>
		/// <param name="Filtered">optional object Filtered</param>
		/// <param name="Table">optional object Table</param>
		/// <param name="UserID">optional object UserID</param>
		/// <param name="DatabasePassWord">optional object DatabasePassWord</param>
		/// <param name="FormatID">optional object FormatID</param>
		/// <param name="Map">optional object Map</param>
		/// <param name="Password">optional object Password</param>
		/// <param name="WriteResPassword">optional object WriteResPassword</param>
		/// <param name="ClearBaseline">optional object ClearBaseline</param>
		/// <param name="ClearActuals">optional object ClearActuals</param>
		/// <param name="ClearResourceRates">optional object ClearResourceRates</param>
		/// <param name="ClearFixedCosts">optional object ClearFixedCosts</param>
		/// <param name="XMLName">optional object XMLName</param>
		/// <param name="ClearConfirmed">optional object ClearConfirmed</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileSaveAs(object name, LateBindingApi.MSProjectApi.Enums.PjFileFormat format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword, object clearBaseline, object clearActuals, object clearResourceRates, object clearFixedCosts, object xMLName, object clearConfirmed)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword, clearBaseline, clearActuals, clearResourceRates, clearFixedCosts, xMLName, clearConfirmed);
			object returnItem = Invoker.MethodReturn(this, "FileSaveAs", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Format">LateBindingApi.MSProjectApi.Enums.PjFileFormat Format</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileSaveAs(object name, LateBindingApi.MSProjectApi.Enums.PjFileFormat format)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, format);
			object returnItem = Invoker.MethodReturn(this, "FileSaveAs", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileSaveWorkspace(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "FileSaveWorkspace", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileSaveWorkspace()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FileSaveWorkspace", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FromPage">optional object FromPage</param>
		/// <param name="ToPage">optional object ToPage</param>
		/// <param name="PageBreaks">optional object PageBreaks</param>
		/// <param name="Draft">optional object Draft</param>
		/// <param name="Copies">optional object Copies</param>
		/// <param name="FromDate">optional object FromDate</param>
		/// <param name="ToDate">optional object ToDate</param>
		/// <param name="OnePageWide">optional object OnePageWide</param>
		/// <param name="Preview">optional object Preview</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="ShowIEPrintDialog">optional object ShowIEPrintDialog</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object onePageWide, object preview, object color, object showIEPrintDialog)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, onePageWide, preview, color, showIEPrintDialog);
			object returnItem = Invoker.MethodReturn(this, "FilePrint", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePrint()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePrint", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="FromPage">optional object FromPage</param>
		/// <param name="ToPage">optional object ToPage</param>
		/// <param name="PageBreaks">optional object PageBreaks</param>
		/// <param name="Draft">optional object Draft</param>
		/// <param name="Copies">optional object Copies</param>
		/// <param name="FromDate">optional object FromDate</param>
		/// <param name="ToDate">optional object ToDate</param>
		/// <param name="Preview">optional object Preview</param>
		/// <param name="Color">optional object Color</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object preview, object color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, preview, color);
			object returnItem = Invoker.MethodReturn(this, "ReportPrint", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ReportPrint()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ReportPrint", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePrintPreview()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePrintPreview", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ReportPrintPreview(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "ReportPrintPreview", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ReportPrintPreview()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ReportPrintPreview", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Printer">optional object Printer</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePrintSetup(object printer)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(printer);
			object returnItem = Invoker.MethodReturn(this, "FilePrintSetup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePrintSetup()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePrintSetup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetup(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetup()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePageSetup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Portrait">object Portrait</param>
		/// <param name="PercentScale">object PercentScale</param>
		/// <param name="PagesTall">object PagesTall</param>
		/// <param name="PagesWide">object PagesWide</param>
		/// <param name="PaperSize">LateBindingApi.MSProjectApi.Enums.PjPaperSize PaperSize</param>
		/// <param name="FirstPageNumber">optional object FirstPageNumber</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupPage(object name, object portrait, object percentScale, object pagesTall, object pagesWide, LateBindingApi.MSProjectApi.Enums.PjPaperSize paperSize, object firstPageNumber)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, portrait, percentScale, pagesTall, pagesWide, paperSize, firstPageNumber);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Portrait">object Portrait</param>
		/// <param name="PercentScale">object PercentScale</param>
		/// <param name="PagesTall">object PagesTall</param>
		/// <param name="PagesWide">object PagesWide</param>
		/// <param name="PaperSize">LateBindingApi.MSProjectApi.Enums.PjPaperSize PaperSize</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupPage(object name, object portrait, object percentScale, object pagesTall, object pagesWide, LateBindingApi.MSProjectApi.Enums.PjPaperSize paperSize)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, portrait, percentScale, pagesTall, pagesWide, paperSize);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Top">optional object Top</param>
		/// <param name="Bottom">optional object Bottom</param>
		/// <param name="Left">optional object Left</param>
		/// <param name="Right">optional object Right</param>
		/// <param name="Borders">optional object Borders</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupMargins(object name, object top, object bottom, object left, object right, object borders)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, top, bottom, left, right, borders);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupMargins", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupMargins()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupMargins", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlignment Alignment</param>
		/// <param name="Text">optional object Text</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupHeader(object name, LateBindingApi.MSProjectApi.Enums.PjAlignment alignment, object text)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, alignment, text);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupHeader", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlignment Alignment</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupHeader(object name, LateBindingApi.MSProjectApi.Enums.PjAlignment alignment)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, alignment);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupHeader", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlignment Alignment</param>
		/// <param name="Text">optional object Text</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupFooter(object name, LateBindingApi.MSProjectApi.Enums.PjAlignment alignment, object text)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, alignment, text);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupFooter", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlignment Alignment</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupFooter(object name, LateBindingApi.MSProjectApi.Enums.PjAlignment alignment)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, alignment);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupFooter", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="TextWidth">object TextWidth</param>
		/// <param name="LegendOn">object LegendOn</param>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlignment Alignment</param>
		/// <param name="Text">object Text</param>
		/// <param name="LabelFontName">object LabelFontName</param>
		/// <param name="LabelFontSize">object LabelFontSize</param>
		/// <param name="LabelFontBold">object LabelFontBold</param>
		/// <param name="LabelFontItalic">object LabelFontItalic</param>
		/// <param name="LabelFontUnderline">object LabelFontUnderline</param>
		/// <param name="LabelFontColor">LateBindingApi.MSProjectApi.Enums.PjColor LabelFontColor</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupLegend(object name, object textWidth, object legendOn, LateBindingApi.MSProjectApi.Enums.PjAlignment alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic, object labelFontUnderline, LateBindingApi.MSProjectApi.Enums.PjColor labelFontColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic, labelFontUnderline, labelFontColor);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupLegend", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="AllSheetColumns">optional object AllSheetColumns</param>
		/// <param name="RepeatColumns">optional object RepeatColumns</param>
		/// <param name="PrintNotes">optional object PrintNotes</param>
		/// <param name="PrintBlankPages">optional object PrintBlankPages</param>
		/// <param name="BestPageFitTimescale">optional object BestPageFitTimescale</param>
		/// <param name="PrintColumnTotals">optional object PrintColumnTotals</param>
		/// <param name="PrintRowTotals">optional object PrintRowTotals</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupView(object name, object allSheetColumns, object repeatColumns, object printNotes, object printBlankPages, object bestPageFitTimescale, object printColumnTotals, object printRowTotals)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, allSheetColumns, repeatColumns, printNotes, printBlankPages, bestPageFitTimescale, printColumnTotals, printRowTotals);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupView", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupView()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupView", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="MonthsPerPage">optional object MonthsPerPage</param>
		/// <param name="WeeksPerPage">optional object WeeksPerPage</param>
		/// <param name="ScreenWeekHeight">optional object ScreenWeekHeight</param>
		/// <param name="OnlyDaysInMonth">optional object OnlyDaysInMonth</param>
		/// <param name="OnlyWeeksInMonth">optional object OnlyWeeksInMonth</param>
		/// <param name="MonthPreviews">optional object MonthPreviews</param>
		/// <param name="MonthTitle">optional object MonthTitle</param>
		/// <param name="AdditionalTasks">optional object AdditionalTasks</param>
		/// <param name="GroupAdditionalTasks">optional object GroupAdditionalTasks</param>
		/// <param name="PrintNotes">optional object PrintNotes</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth, object onlyWeeksInMonth, object monthPreviews, object monthTitle, object additionalTasks, object groupAdditionalTasks, object printNotes)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth, onlyWeeksInMonth, monthPreviews, monthTitle, additionalTasks, groupAdditionalTasks, printNotes);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupCalendar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Item">optional object Item</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupCalendarText(object name, object item, object font, object size, object bold, object italic, object underline, object color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, item, font, size, bold, italic, underline, color);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupCalendarText", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilePageSetupCalendarText()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupCalendarText", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Any">optional object Any</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailOpen(object any)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(any);
			object returnItem = Invoker.MethodReturn(this, "MailOpen", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailOpen()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailOpen", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="To">optional object To</param>
		/// <param name="Cc">optional object Cc</param>
		/// <param name="Subject">optional object Subject</param>
		/// <param name="Body">optional object Body</param>
		/// <param name="Enclosures">optional object Enclosures</param>
		/// <param name="IncludeDocument">optional object IncludeDocument</param>
		/// <param name="ReturnReceipt">optional object ReturnReceipt</param>
		/// <param name="Bcc">optional object Bcc</param>
		/// <param name="Urgent">optional object Urgent</param>
		/// <param name="SaveCopy">optional object SaveCopy</param>
		/// <param name="AddRecipient">optional object AddRecipient</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailSend(object to, object cc, object subject, object body, object enclosures, object includeDocument, object returnReceipt, object bcc, object urgent, object saveCopy, object addRecipient)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(to, cc, subject, body, enclosures, includeDocument, returnReceipt, bcc, urgent, saveCopy, addRecipient);
			object returnItem = Invoker.MethodReturn(this, "MailSend", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailSend()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailSend", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Manager">optional object Manager</param>
		/// <param name="Resources">optional object Resources</param>
		/// <param name="TaskContacts">optional object TaskContacts</param>
		/// <param name="Selection">optional object Selection</param>
		/// <param name="IncludeDocument">optional object IncludeDocument</param>
		/// <param name="IncludePicture">optional object IncludePicture</param>
		/// <param name="Body">optional object Body</param>
		/// <param name="Subject">optional object Subject</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailSendScheduleNote(object manager, object resources, object taskContacts, object selection, object includeDocument, object includePicture, object body, object subject)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(manager, resources, taskContacts, selection, includeDocument, includePicture, body, subject);
			object returnItem = Invoker.MethodReturn(this, "MailSendScheduleNote", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailSendScheduleNote()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailSendScheduleNote", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailPostDocument()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailPostDocument", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ODBCManageDataSources()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ODBCManageDataSources", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ODBCCreateDataSource()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ODBCCreateDataSource", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="To">optional object To</param>
		/// <param name="Subject">optional object Subject</param>
		/// <param name="Body">optional object Body</param>
		/// <param name="AllAtOnce">optional object AllAtOnce</param>
		/// <param name="ReturnWhenDone">optional object ReturnWhenDone</param>
		/// <param name="TrackStatus">optional object TrackStatus</param>
		/// <param name="Clear">optional object Clear</param>
		/// <param name="SendNow">optional object SendNow</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailRoutingSlip(object to, object subject, object body, object allAtOnce, object returnWhenDone, object trackStatus, object clear, object sendNow)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(to, subject, body, allAtOnce, returnWhenDone, trackStatus, clear, sendNow);
			object returnItem = Invoker.MethodReturn(this, "MailRoutingSlip", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailRoutingSlip()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailRoutingSlip", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Number">optional object Number</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileLoadLast(object number)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(number);
			object returnItem = Invoker.MethodReturn(this, "FileLoadLast", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileLoadLast()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FileLoadLast", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileExit(LateBindingApi.MSProjectApi.Enums.PjSaveType save)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save);
			object returnItem = Invoker.MethodReturn(this, "FileExit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MenuBars()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MenuBars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Copy">optional object Copy</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="Name">optional object Name</param>
		/// <param name="NewName">optional object NewName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MenuBarEdit(object copy, object create, object name, object newName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(copy, create, name, newName);
			object returnItem = Invoker.MethodReturn(this, "MenuBarEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MenuBarEdit()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MenuBarEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="Default">optional object Default</param>
		/// <param name="NoFiles">optional object NoFiles</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MenuBarApply(string name, object _default, object noFiles)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, _default, noFiles);
			object returnItem = Invoker.MethodReturn(this, "MenuBarApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MenuBarApply(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "MenuBarApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditUndo()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditUndo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditCut()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditCut", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditCopy()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditCopy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Object">object Object</param>
		/// <param name="ForPrinter">object ForPrinter</param>
		/// <param name="SelectedRows">object SelectedRows</param>
		/// <param name="FromDate">object FromDate</param>
		/// <param name="ToDate">object ToDate</param>
		/// <param name="FileName">object FileName</param>
		/// <param name="ScaleOption">LateBindingApi.MSProjectApi.Enums.PjCopyPictureScaleOption ScaleOption</param>
		/// <param name="MaxImageHeight">optional object MaxImageHeight</param>
		/// <param name="MaxImageWidth">optional object MaxImageWidth</param>
		/// <param name="MeasurementUnits">optional object MeasurementUnits</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditCopyPicture(object _object, object forPrinter, object selectedRows, object fromDate, object toDate, object fileName, LateBindingApi.MSProjectApi.Enums.PjCopyPictureScaleOption scaleOption, object maxImageHeight, object maxImageWidth, object measurementUnits)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(_object, forPrinter, selectedRows, fromDate, toDate, fileName, scaleOption, maxImageHeight, maxImageWidth, measurementUnits);
			object returnItem = Invoker.MethodReturn(this, "EditCopyPicture", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Object">object Object</param>
		/// <param name="ForPrinter">object ForPrinter</param>
		/// <param name="SelectedRows">object SelectedRows</param>
		/// <param name="FromDate">object FromDate</param>
		/// <param name="ToDate">object ToDate</param>
		/// <param name="FileName">object FileName</param>
		/// <param name="ScaleOption">LateBindingApi.MSProjectApi.Enums.PjCopyPictureScaleOption ScaleOption</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditCopyPicture(object _object, object forPrinter, object selectedRows, object fromDate, object toDate, object fileName, LateBindingApi.MSProjectApi.Enums.PjCopyPictureScaleOption scaleOption)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(_object, forPrinter, selectedRows, fromDate, toDate, fileName, scaleOption);
			object returnItem = Invoker.MethodReturn(this, "EditCopyPicture", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditPaste()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditPaste", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Link">optional object Link</param>
		/// <param name="Type">optional object Type</param>
		/// <param name="DisplayAsIcon">optional object DisplayAsIcon</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditPasteSpecial(object link, object type, object displayAsIcon)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(link, type, displayAsIcon);
			object returnItem = Invoker.MethodReturn(this, "EditPasteSpecial", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditPasteSpecial()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditPasteSpecial", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditClearFormats()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditClearFormats", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Contents">optional object Contents</param>
		/// <param name="Formats">optional object Formats</param>
		/// <param name="Notes">optional object Notes</param>
		/// <param name="Hyperlinks">optional object Hyperlinks</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditClear(object contents, object formats, object notes, object hyperlinks)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(contents, formats, notes, hyperlinks);
			object returnItem = Invoker.MethodReturn(this, "EditClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditClear()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool RowClear()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "RowClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DDEPasteLink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DDEPasteLink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditDelete()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ColumnDelete()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ColumnDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool RowDelete()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "RowDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Verb">optional object Verb</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ObjectVerb(object verb)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(verb);
			object returnItem = Invoker.MethodReturn(this, "ObjectVerb", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ObjectVerb()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ObjectVerb", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ObjectLinks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ObjectLinks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ObjectChangeIcon()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ObjectChangeIcon", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ObjectConvert()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ObjectConvert", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditInsert()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditInsert", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ColumnInsert()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ColumnInsert", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool RowInsert()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "RowInsert", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LinkTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LinkTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="From">Int32 From</param>
		/// <param name="To">Int32 To</param>
		/// <param name="Delete">optional object Delete</param>
		/// <param name="Type">optional object Type</param>
		/// <param name="Lag">optional object Lag</param>
		/// <param name="PredecessorProjectName">optional object PredecessorProjectName</param>
		/// <param name="SuccessorProjectName">optional object SuccessorProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LinkTasksEdit(Int32 from, Int32 to, object delete, object type, object lag, object predecessorProjectName, object successorProjectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(from, to, delete, type, lag, predecessorProjectName, successorProjectName);
			object returnItem = Invoker.MethodReturn(this, "LinkTasksEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="From">Int32 From</param>
		/// <param name="To">Int32 To</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LinkTasksEdit(Int32 from, Int32 to)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(from, to);
			object returnItem = Invoker.MethodReturn(this, "LinkTasksEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UnlinkTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "UnlinkTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Resources">object Resources</param>
		/// <param name="Operation">LateBindingApi.MSProjectApi.Enums.PjResAssignOperation Operation</param>
		/// <param name="With">optional object With</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceAssignment(object resources, LateBindingApi.MSProjectApi.Enums.PjResAssignOperation operation, object with)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(resources, operation, with);
			object returnItem = Invoker.MethodReturn(this, "ResourceAssignment", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Resources">object Resources</param>
		/// <param name="Operation">LateBindingApi.MSProjectApi.Enums.PjResAssignOperation Operation</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceAssignment(object resources, LateBindingApi.MSProjectApi.Enums.PjResAssignOperation operation)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(resources, operation);
			object returnItem = Invoker.MethodReturn(this, "ResourceAssignment", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ID">optional object ID</param>
		/// <param name="Date">optional object Date</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditGoTo(object iD, object date)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(iD, date);
			object returnItem = Invoker.MethodReturn(this, "EditGoTo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditGoTo()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditGoTo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GotoNextOverAllocation()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GotoNextOverAllocation", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool InsertNotes()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertNotes", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">optional object Field</param>
		/// <param name="Test">optional object Test</param>
		/// <param name="Value">optional object Value</param>
		/// <param name="Next">optional object Next</param>
		/// <param name="MatchCase">optional object MatchCase</param>
		/// <param name="FieldID">optional object FieldID</param>
		/// <param name="TestID">optional object TestID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Find(object field, object test, object value, object next, object matchCase, object fieldID, object testID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, test, value, next, matchCase, fieldID, testID);
			object returnItem = Invoker.MethodReturn(this, "Find", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Find()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Find", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">optional object Field</param>
		/// <param name="Test">optional object Test</param>
		/// <param name="Value">optional object Value</param>
		/// <param name="Replacement">optional object Replacement</param>
		/// <param name="ReplaceAll">optional object ReplaceAll</param>
		/// <param name="Next">optional object Next</param>
		/// <param name="MatchCase">optional object MatchCase</param>
		/// <param name="FieldID">optional object FieldID</param>
		/// <param name="TestID">optional object TestID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Replace(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase, object fieldID, object testID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, test, value, replacement, replaceAll, next, matchCase, fieldID, testID);
			object returnItem = Invoker.MethodReturn(this, "Replace", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Replace()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Replace", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectAll()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ObjectInsert()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ObjectInsert", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Edition">object Edition</param>
		/// <param name="Format">LateBindingApi.MSProjectApi.Enums.PjSubscribeFormat Format</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SubscribeTo(object edition, LateBindingApi.MSProjectApi.Enums.PjSubscribeFormat format)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(edition, format);
			object returnItem = Invoker.MethodReturn(this, "SubscribeTo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="IsTask">optional object IsTask</param>
		/// <param name="UniqueID">optional object UniqueID</param>
		/// <param name="Field">optional object Field</param>
		/// <param name="Automatically">optional object Automatically</param>
		/// <param name="Action">optional object Action</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SubscriberOptions(object name, object isTask, object uniqueID, object field, object automatically, object action)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, isTask, uniqueID, field, automatically, action);
			object returnItem = Invoker.MethodReturn(this, "SubscriberOptions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SubscriberOptions()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SubscriberOptions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Edition">optional object Edition</param>
		/// <param name="Contains">optional object Contains</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CreatePublisher(object edition, object contains)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(edition, contains);
			object returnItem = Invoker.MethodReturn(this, "CreatePublisher", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CreatePublisher()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CreatePublisher", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="View">optional object View</param>
		/// <param name="IsTask">optional object IsTask</param>
		/// <param name="UniqueID">optional object UniqueID</param>
		/// <param name="Field">optional object Field</param>
		/// <param name="OnSave">optional object OnSave</param>
		/// <param name="Action">optional object Action</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PublisherOptions(object name, object view, object isTask, object uniqueID, object field, object onSave, object action)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, view, isTask, uniqueID, field, onSave, action);
			object returnItem = Invoker.MethodReturn(this, "PublisherOptions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PublisherOptions()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PublisherOptions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Stop">optional object Stop</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditionStopAll(object stop)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(stop);
			object returnItem = Invoker.MethodReturn(this, "EditionStopAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditionStopAll()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditionStopAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ClipboardShow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ClipboardShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="SinglePane">optional object SinglePane</param>
		/// <param name="Toggle">optional object Toggle</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewApply(object name, object singlePane, object toggle)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, singlePane, toggle);
			object returnItem = Invoker.MethodReturn(this, "ViewApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewApply()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="Screen">optional object Screen</param>
		/// <param name="ShowInMenu">optional object ShowInMenu</param>
		/// <param name="HighlightFilter">optional object HighlightFilter</param>
		/// <param name="Table">optional object Table</param>
		/// <param name="Filter">optional object Filter</param>
		/// <param name="Group">optional object Group</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewEditSingle(object name, object create, object newName, object screen, object showInMenu, object highlightFilter, object table, object filter, object group)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, create, newName, screen, showInMenu, highlightFilter, table, filter, group);
			object returnItem = Invoker.MethodReturn(this, "ViewEditSingle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewEditSingle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewEditSingle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="TopView">optional object TopView</param>
		/// <param name="BottomView">optional object BottomView</param>
		/// <param name="ShowInMenu">optional object ShowInMenu</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewEditCombination(object name, object create, object newName, object topView, object bottomView, object showInMenu)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, create, newName, topView, bottomView, showInMenu);
			object returnItem = Invoker.MethodReturn(this, "ViewEditCombination", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewEditCombination()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewEditCombination", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TableApply(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "TableApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TableApply()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TableApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="TaskTable">bool TaskTable</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="OverwriteExisting">optional object OverwriteExisting</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="FieldName">optional object FieldName</param>
		/// <param name="NewFieldName">optional object NewFieldName</param>
		/// <param name="Title">optional object Title</param>
		/// <param name="Width">optional object Width</param>
		/// <param name="Align">optional object Align</param>
		/// <param name="ShowInMenu">optional object ShowInMenu</param>
		/// <param name="LockFirstColumn">optional object LockFirstColumn</param>
		/// <param name="DateFormat">optional object DateFormat</param>
		/// <param name="RowHeight">optional object RowHeight</param>
		/// <param name="ColumnPosition">optional object ColumnPosition</param>
		/// <param name="AlignTitle">optional object AlignTitle</param>
		/// <param name="HeaderAutoRowHeightAdjustment">optional object HeaderAutoRowHeightAdjustment</param>
		/// <param name="HeaderTextWrap">optional object HeaderTextWrap</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment, object headerTextWrap)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment, headerTextWrap);
			object returnItem = Invoker.MethodReturn(this, "TableEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="TaskTable">bool TaskTable</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TableEdit(string name, bool taskTable)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, taskTable);
			object returnItem = Invoker.MethodReturn(this, "TableEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Highlight">optional object Highlight</param>
		/// <param name="Value1">optional object Value1</param>
		/// <param name="Value2">optional object Value2</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilterApply(object name, object highlight, object value1, object value2)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, highlight, value1, value2);
			object returnItem = Invoker.MethodReturn(this, "FilterApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilterApply()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilterApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="TaskFilter">bool TaskFilter</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="OverwriteExisting">optional object OverwriteExisting</param>
		/// <param name="Parenthesis">optional object Parenthesis</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="FieldName">optional object FieldName</param>
		/// <param name="NewFieldName">optional object NewFieldName</param>
		/// <param name="Test">optional object Test</param>
		/// <param name="Value">optional object Value</param>
		/// <param name="Operation">optional object Operation</param>
		/// <param name="ShowInMenu">optional object ShowInMenu</param>
		/// <param name="ShowSummaryTasks">optional object ShowSummaryTasks</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName, object newFieldName, object test, object value, object operation, object showInMenu, object showSummaryTasks)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName, newFieldName, test, value, operation, showInMenu, showSummaryTasks);
			object returnItem = Invoker.MethodReturn(this, "FilterEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="TaskFilter">bool TaskFilter</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FilterEdit(string name, bool taskFilter)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, taskFilter);
			object returnItem = Invoker.MethodReturn(this, "FilterEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Project">optional object Project</param>
		/// <param name="Title">optional object Title</param>
		/// <param name="Subject">optional object Subject</param>
		/// <param name="Author">optional object Author</param>
		/// <param name="Company">optional object Company</param>
		/// <param name="Manager">optional object Manager</param>
		/// <param name="Keywords">optional object Keywords</param>
		/// <param name="Comments">optional object Comments</param>
		/// <param name="Start">optional object Start</param>
		/// <param name="Finish">optional object Finish</param>
		/// <param name="ScheduleFrom">optional object ScheduleFrom</param>
		/// <param name="CurrentDate">optional object CurrentDate</param>
		/// <param name="Calendar">optional object Calendar</param>
		/// <param name="StatusDate">optional object StatusDate</param>
		/// <param name="Priority">optional object Priority</param>
		/// <param name="PartiallyDisabled">optional object PartiallyDisabled</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish, object scheduleFrom, object currentDate, object calendar, object statusDate, object priority, object partiallyDisabled)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(project, title, subject, author, company, manager, keywords, comments, start, finish, scheduleFrom, currentDate, calendar, statusDate, priority, partiallyDisabled);
			object returnItem = Invoker.MethodReturn(this, "ProjectSummaryInfo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ProjectSummaryInfo()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ProjectSummaryInfo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Project">optional object Project</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ProjectStatistics(object project)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(project);
			object returnItem = Invoker.MethodReturn(this, "ProjectStatistics", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ProjectStatistics()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ProjectStatistics", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="StartWeekOnMonday">optional object StartWeekOnMonday</param>
		/// <param name="StartYearIn">optional object StartYearIn</param>
		/// <param name="StartTime">optional object StartTime</param>
		/// <param name="FinishTime">optional object FinishTime</param>
		/// <param name="HoursPerDay">optional object HoursPerDay</param>
		/// <param name="HoursPerWeek">optional object HoursPerWeek</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="StartWeekOn">optional object StartWeekOn</param>
		/// <param name="UseFYStartYear">optional object UseFYStartYear</param>
		/// <param name="DaysPerMonth">optional object DaysPerMonth</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime, object hoursPerDay, object hoursPerWeek, object setDefaults, object startWeekOn, object useFYStartYear, object daysPerMonth)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(startWeekOnMonday, startYearIn, startTime, finishTime, hoursPerDay, hoursPerWeek, setDefaults, startWeekOn, useFYStartYear, daysPerMonth);
			object returnItem = Invoker.MethodReturn(this, "OptionsCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsCalendar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="MoveAfterReturn">optional object MoveAfterReturn</param>
		/// <param name="DragAndDrop">optional object DragAndDrop</param>
		/// <param name="UpdateLinks">optional object UpdateLinks</param>
		/// <param name="CopyResourceUsageHeader">optional object CopyResourceUsageHeader</param>
		/// <param name="PhoneticInfo">optional object PhoneticInfo</param>
		/// <param name="PhoneticType">optional object PhoneticType</param>
		/// <param name="MinuteLabelDisplay">optional object MinuteLabelDisplay</param>
		/// <param name="HourLabelDisplay">optional object HourLabelDisplay</param>
		/// <param name="DayLabelDisplay">optional object DayLabelDisplay</param>
		/// <param name="WeekLabelDisplay">optional object WeekLabelDisplay</param>
		/// <param name="YearLabelDisplay">optional object YearLabelDisplay</param>
		/// <param name="SpaceBeforeTimeLabel">optional object SpaceBeforeTimeLabel</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="MonthLabelDisplay">optional object MonthLabelDisplay</param>
		/// <param name="SetDefaultsTimeUnits">optional object SetDefaultsTimeUnits</param>
		/// <param name="HyperlinkColor">optional object HyperlinkColor</param>
		/// <param name="FollowedHyperlinkColor">optional object FollowedHyperlinkColor</param>
		/// <param name="UnderlineHyperlinks">optional object UnderlineHyperlinks</param>
		/// <param name="SetDefaultsHyperlink">optional object SetDefaultsHyperlink</param>
		/// <param name="InCellEditing">optional object InCellEditing</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaultsHyperlink, object inCellEditing)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaultsHyperlink, inCellEditing);
			object returnItem = Invoker.MethodReturn(this, "OptionsEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsEdit()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="PlanningWizard">optional object PlanningWizard</param>
		/// <param name="WizardUsage">optional object WizardUsage</param>
		/// <param name="WizardErrors">optional object WizardErrors</param>
		/// <param name="WizardScheduling">optional object WizardScheduling</param>
		/// <param name="ShowTipOfDay">optional object ShowTipOfDay</param>
		/// <param name="AutoAddResources">optional object AutoAddResources</param>
		/// <param name="StandardRate">optional object StandardRate</param>
		/// <param name="OvertimeRate">optional object OvertimeRate</param>
		/// <param name="LastFile">optional object LastFile</param>
		/// <param name="SummaryInfo">optional object SummaryInfo</param>
		/// <param name="UserName">optional object UserName</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="ShowWelcome">optional object ShowWelcome</param>
		/// <param name="AutoFilter">optional object AutoFilter</param>
		/// <param name="MacroVirusProtection">optional object MacroVirusProtection</param>
		/// <param name="DisplayRecentFiles">optional object DisplayRecentFiles</param>
		/// <param name="RecentFilesMaximum">optional object RecentFilesMaximum</param>
		/// <param name="FontConversion">optional object FontConversion</param>
		/// <param name="ShowStartupWorkpane">optional object ShowStartupWorkpane</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum, object fontConversion, object showStartupWorkpane)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum, fontConversion, showStartupWorkpane);
			object returnItem = Invoker.MethodReturn(this, "OptionsGeneral", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsGeneral()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsGeneral", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ScheduleMessages">optional object ScheduleMessages</param>
		/// <param name="StartOnCurrentDate">optional object StartOnCurrentDate</param>
		/// <param name="AutoLink">optional object AutoLink</param>
		/// <param name="AutoSplit">optional object AutoSplit</param>
		/// <param name="CriticalSlack">optional object CriticalSlack</param>
		/// <param name="TaskType">optional object TaskType</param>
		/// <param name="DurationUnits">optional object DurationUnits</param>
		/// <param name="WorkUnits">optional object WorkUnits</param>
		/// <param name="AutoTrack">optional object AutoTrack</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="AssignmentUnits">optional object AssignmentUnits</param>
		/// <param name="EffortDriven">optional object EffortDriven</param>
		/// <param name="HonorConstraints">optional object HonorConstraints</param>
		/// <param name="ShowEstimated">optional object ShowEstimated</param>
		/// <param name="NewTasksEstimated">optional object NewTasksEstimated</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack, object setDefaults, object assignmentUnits, object effortDriven, object honorConstraints, object showEstimated, object newTasksEstimated)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack, setDefaults, assignmentUnits, effortDriven, honorConstraints, showEstimated, newTasksEstimated);
			object returnItem = Invoker.MethodReturn(this, "OptionsSchedule", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSchedule()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsSchedule", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="DefaultView">optional object DefaultView</param>
		/// <param name="DateFormat">optional object DateFormat</param>
		/// <param name="ProjectSummary">optional object ProjectSummary</param>
		/// <param name="DisplayStatusBar">optional object DisplayStatusBar</param>
		/// <param name="DisplayEntryBar">optional object DisplayEntryBar</param>
		/// <param name="DisplayScrollBars">optional object DisplayScrollBars</param>
		/// <param name="CurrencySymbol">optional object CurrencySymbol</param>
		/// <param name="SymbolPlacement">optional object SymbolPlacement</param>
		/// <param name="CurrencyDigits">optional object CurrencyDigits</param>
		/// <param name="ProjectCurrency">optional object ProjectCurrency</param>
		/// <param name="DisplayOutlineNumber">optional object DisplayOutlineNumber</param>
		/// <param name="DisplayOutlineSymbols">optional object DisplayOutlineSymbols</param>
		/// <param name="DisplayNameIndent">optional object DisplayNameIndent</param>
		/// <param name="DisplaySummaryTasks">optional object DisplaySummaryTasks</param>
		/// <param name="DisplayOLEIndicator">optional object DisplayOLEIndicator</param>
		/// <param name="DisplayExternalSuccessors">optional object DisplayExternalSuccessors</param>
		/// <param name="DisplayExternalPredecessors">optional object DisplayExternalPredecessors</param>
		/// <param name="CrossProjectLinksInfo">optional object CrossProjectLinksInfo</param>
		/// <param name="AcceptNewExternalData">optional object AcceptNewExternalData</param>
		/// <param name="DisplayWindowsInTaskbar">optional object DisplayWindowsInTaskbar</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar);
			object returnItem = Invoker.MethodReturn(this, "OptionsView", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsView()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsView", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="WorkgroupMessages">optional object WorkgroupMessages</param>
		/// <param name="ServerURL">optional object ServerURL</param>
		/// <param name="ServerPath">optional object ServerPath</param>
		/// <param name="ReceiveNotifications">optional object ReceiveNotifications</param>
		/// <param name="SendHyperlinkNote">optional object SendHyperlinkNote</param>
		/// <param name="HyperlinkColor">optional object HyperlinkColor</param>
		/// <param name="FollowedHyperlinkColor">optional object FollowedHyperlinkColor</param>
		/// <param name="UnderlineHyperlinks">optional object UnderlineHyperlinks</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="ServerIdentification">optional object ServerIdentification</param>
		/// <param name="AllowTaskDelegation">optional object AllowTaskDelegation</param>
		/// <param name="UpdateProjectToWeb">optional object UpdateProjectToWeb</param>
		/// <param name="PublishInformationOnSave">optional object PublishInformationOnSave</param>
		/// <param name="SetDefaultsMessaging">optional object SetDefaultsMessaging</param>
		/// <param name="SetDefaultsWebServer">optional object SetDefaultsWebServer</param>
		/// <param name="ManagerEmail">optional object ManagerEmail</param>
		/// <param name="ConfirmationDialog">optional object ConfirmationDialog</param>
		/// <param name="ChangesMarkAssnDirty">optional object ChangesMarkAssnDirty</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb, object publishInformationOnSave, object setDefaultsMessaging, object setDefaultsWebServer, object managerEmail, object confirmationDialog, object changesMarkAssnDirty)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb, publishInformationOnSave, setDefaultsMessaging, setDefaultsWebServer, managerEmail, confirmationDialog, changesMarkAssnDirty);
			object returnItem = Invoker.MethodReturn(this, "OptionsWorkgroup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsWorkgroup()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsWorkgroup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Automatic">optional object Automatic</param>
		/// <param name="AutoTrack">optional object AutoTrack</param>
		/// <param name="SpreadPercentToStatusDate">optional object SpreadPercentToStatusDate</param>
		/// <param name="SpreadCostsToStatusDate">optional object SpreadCostsToStatusDate</param>
		/// <param name="AutoCalcCosts">optional object AutoCalcCosts</param>
		/// <param name="FixedCostAccrual">optional object FixedCostAccrual</param>
		/// <param name="CalcMultipleCriticalPaths">optional object CalcMultipleCriticalPaths</param>
		/// <param name="CriticalSlack">optional object CriticalSlack</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="CalcInsProjLikeSummTask">optional object CalcInsProjLikeSummTask</param>
		/// <param name="MoveCompleted">optional object MoveCompleted</param>
		/// <param name="AndMoveRemaining">optional object AndMoveRemaining</param>
		/// <param name="MoveRemaining">optional object MoveRemaining</param>
		/// <param name="AndMoveCompleted">optional object AndMoveCompleted</param>
		/// <param name="EVMethod">optional object EVMethod</param>
		/// <param name="EVBaseline">optional object EVBaseline</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask, object moveCompleted, object andMoveRemaining, object moveRemaining, object andMoveCompleted, object eVMethod, object eVBaseline)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask, moveCompleted, andMoveRemaining, moveRemaining, andMoveCompleted, eVMethod, eVBaseline);
			object returnItem = Invoker.MethodReturn(this, "OptionsCalculation", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsCalculation()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsCalculation", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalculateAll()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalculateAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsPreferences()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsPreferences", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CalendarName">optional object CalendarName</param>
		/// <param name="Locked">optional object Locked</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ChangeWorkingTime(object calendarName, object locked)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(calendarName, locked);
			object returnItem = Invoker.MethodReturn(this, "ChangeWorkingTime", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ChangeWorkingTime()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ChangeWorkingTime", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Index">optional object Index</param>
		/// <param name="Locked">optional object Locked</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendars(object index, object locked)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(index, locked);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendars()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BaseCalendars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="FromName">optional object FromName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendarCreate(string name, object fromName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, fromName);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendarCreate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendarCreate(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendarCreate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FromName">string FromName</param>
		/// <param name="ToName">string ToName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendarRename(string fromName, string toName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fromName, toName);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendarRename", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendarDelete(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendarDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="StartDate">optional object StartDate</param>
		/// <param name="EndDate">optional object EndDate</param>
		/// <param name="WeekDay">optional object WeekDay</param>
		/// <param name="Working">optional object Working</param>
		/// <param name="From1">optional object From1</param>
		/// <param name="To1">optional object To1</param>
		/// <param name="From2">optional object From2</param>
		/// <param name="To2">optional object To2</param>
		/// <param name="From3">optional object From3</param>
		/// <param name="To3">optional object To3</param>
		/// <param name="Default">optional object Default</param>
		/// <param name="From4">optional object From4</param>
		/// <param name="To4">optional object To4</param>
		/// <param name="From5">optional object From5</param>
		/// <param name="To5">optional object To5</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3, object to3, object _default, object from4, object to4, object from5, object to5)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3, to3, _default, from4, to4, from5, to5);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendarEditDays", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendarEditDays(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendarEditDays", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectName">string ProjectName</param>
		/// <param name="ResourceName">string ResourceName</param>
		/// <param name="StartDate">optional object StartDate</param>
		/// <param name="EndDate">optional object EndDate</param>
		/// <param name="WeekDay">optional object WeekDay</param>
		/// <param name="Working">optional object Working</param>
		/// <param name="Default">optional object Default</param>
		/// <param name="From1">optional object From1</param>
		/// <param name="To1">optional object To1</param>
		/// <param name="From2">optional object From2</param>
		/// <param name="To2">optional object To2</param>
		/// <param name="From3">optional object From3</param>
		/// <param name="To3">optional object To3</param>
		/// <param name="From4">optional object From4</param>
		/// <param name="To4">optional object To4</param>
		/// <param name="From5">optional object From5</param>
		/// <param name="To5">optional object To5</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2, object from3, object to3, object from4, object to4, object from5, object to5)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2, from3, to3, from4, to4, from5, to5);
			object returnItem = Invoker.MethodReturn(this, "ResourceCalendarEditDays", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectName">string ProjectName</param>
		/// <param name="ResourceName">string ResourceName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceCalendarEditDays(string projectName, string resourceName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, resourceName);
			object returnItem = Invoker.MethodReturn(this, "ResourceCalendarEditDays", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaseCalendarReset(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "BaseCalendarReset", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectName">string ProjectName</param>
		/// <param name="ResourceName">string ResourceName</param>
		/// <param name="BaseCalendar">optional object BaseCalendar</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceCalendarReset(string projectName, string resourceName, object baseCalendar)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, resourceName, baseCalendar);
			object returnItem = Invoker.MethodReturn(this, "ResourceCalendarReset", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectName">string ProjectName</param>
		/// <param name="ResourceName">string ResourceName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceCalendarReset(string projectName, string resourceName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, resourceName);
			object returnItem = Invoker.MethodReturn(this, "ResourceCalendarReset", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Index">optional object Index</param>
		/// <param name="Locked">optional object Locked</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceCalendars(object index, object locked)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(index, locked);
			object returnItem = Invoker.MethodReturn(this, "ResourceCalendars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceCalendars()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceCalendars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Automatic">optional object Automatic</param>
		/// <param name="DelayInSlack">optional object DelayInSlack</param>
		/// <param name="AutoClearLeveling">optional object AutoClearLeveling</param>
		/// <param name="Order">optional object Order</param>
		/// <param name="LevelEntireProject">optional object LevelEntireProject</param>
		/// <param name="FromDate">optional object FromDate</param>
		/// <param name="ToDate">optional object ToDate</param>
		/// <param name="PeriodBasis">optional object PeriodBasis</param>
		/// <param name="LevelIndividualAssignments">optional object LevelIndividualAssignments</param>
		/// <param name="LevelingCanSplit">optional object LevelingCanSplit</param>
		/// <param name="LevelProposedBookings">optional object LevelProposedBookings</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments, object levelingCanSplit, object levelProposedBookings)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments, levelingCanSplit, levelProposedBookings);
			object returnItem = Invoker.MethodReturn(this, "LevelingOptions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelingOptions()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LevelingOptions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="All">optional object All</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelNow(object all)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(all);
			object returnItem = Invoker.MethodReturn(this, "LevelNow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelNow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LevelNow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="All">optional object All</param>
		/// <param name="Copy">optional object Copy</param>
		/// <param name="Into">optional object Into</param>
		/// <param name="RollupToSummaryTasks">optional object RollupToSummaryTasks</param>
		/// <param name="RollupFromSubtasks">optional object RollupFromSubtasks</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaselineSave(object all, object copy, object into, object rollupToSummaryTasks, object rollupFromSubtasks, object setDefaults)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(all, copy, into, rollupToSummaryTasks, rollupFromSubtasks, setDefaults);
			object returnItem = Invoker.MethodReturn(this, "BaselineSave", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaselineSave()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BaselineSave", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="All">optional object All</param>
		/// <param name="UpdateDate">optional object UpdateDate</param>
		/// <param name="Action">optional object Action</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UpdateProject(object all, object updateDate, object action)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(all, updateDate, action);
			object returnItem = Invoker.MethodReturn(this, "UpdateProject", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UpdateProject()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "UpdateProject", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="PercentComplete">optional object PercentComplete</param>
		/// <param name="ActualDuration">optional object ActualDuration</param>
		/// <param name="RemainingDuration">optional object RemainingDuration</param>
		/// <param name="ActualStart">optional object ActualStart</param>
		/// <param name="ActualFinish">optional object ActualFinish</param>
		/// <param name="Notes">optional object Notes</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UpdateTasks(object percentComplete, object actualDuration, object remainingDuration, object actualStart, object actualFinish, object notes)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(percentComplete, actualDuration, remainingDuration, actualStart, actualFinish, notes);
			object returnItem = Invoker.MethodReturn(this, "UpdateTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UpdateTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "UpdateTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Projects">optional object Projects</param>
		/// <param name="View">optional object View</param>
		/// <param name="AllProjects">optional object AllProjects</param>
		/// <param name="ShowDialog">optional object ShowDialog</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowNewWindow(object projects, object view, object allProjects, object showDialog)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projects, view, allProjects, showDialog);
			object returnItem = Invoker.MethodReturn(this, "WindowNewWindow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowNewWindow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowNewWindow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowArrangeAll()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowArrangeAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowHide(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "WindowHide", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowHide()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowHide", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowUnhide(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "WindowUnhide", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowUnhide()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowUnhide", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="WindowName">optional object WindowName</param>
		/// <param name="DialogID">optional object DialogID</param>
		/// <param name="TopPane">optional object TopPane</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowActivate(object windowName, object dialogID, object topPane)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(windowName, dialogID, topPane);
			object returnItem = Invoker.MethodReturn(this, "WindowActivate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowActivate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowActivate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PageBreakSet()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PageBreakSet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PageBreakRemove()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PageBreakRemove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PageBreaksRemoveAll()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PageBreaksRemoveAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowResourcesPredecessors()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowResourcesPredecessors", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowResourcesSuccessors()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowResourcesSuccessors", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowPredecessorsSuccessors()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowPredecessorsSuccessors", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowNotes()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowNotes", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowObjects()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowObjects", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowOverallocation()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowOverallocation", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowPercentAllocation()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowPercentAllocation", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowWork()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowWork", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowCost()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowCost", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowSchedule()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowSchedule", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowPeakUnits()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowPeakUnits", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowAvailability()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowAvailability", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowRemainingAvailability()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowRemainingAvailability", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowCumulativeWork()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowCumulativeWork", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowCumulativeCost()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowCumulativeCost", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PaneNext()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PaneNext", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PaneCreate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PaneCreate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FormViewShow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FormViewShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PaneClose()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PaneClose", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowSplit()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowSplit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="NoWrap">optional object NoWrap</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowNext(object noWrap)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(noWrap);
			object returnItem = Invoker.MethodReturn(this, "WindowNext", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowNext()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowNext", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="NoWrap">optional object NoWrap</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowPrev(object noWrap)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(noWrap);
			object returnItem = Invoker.MethodReturn(this, "WindowPrev", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowPrev()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowPrev", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocClose()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DocClose", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppMaximize()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AppMaximize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppMinimize()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AppMinimize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="XPosition">optional object XPosition</param>
		/// <param name="YPosition">optional object YPosition</param>
		/// <param name="Points">optional object Points</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppMove(object xPosition, object yPosition, object points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(xPosition, yPosition, points);
			object returnItem = Invoker.MethodReturn(this, "AppMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppMove()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AppMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppRestore()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AppRestore", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Width">optional object Width</param>
		/// <param name="Height">optional object Height</param>
		/// <param name="Points">optional object Points</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppSize(object width, object height, object points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(width, height, points);
			object returnItem = Invoker.MethodReturn(this, "AppSize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppSize()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AppSize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocMaximize()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DocMaximize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="XPosition">optional object XPosition</param>
		/// <param name="YPosition">optional object YPosition</param>
		/// <param name="Points">optional object Points</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocMove(object xPosition, object yPosition, object points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(xPosition, yPosition, points);
			object returnItem = Invoker.MethodReturn(this, "DocMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocMove()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DocMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocRestore()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DocRestore", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Width">optional object Width</param>
		/// <param name="Height">optional object Height</param>
		/// <param name="Points">optional object Points</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocSize(object width, object height, object points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(width, height, points);
			object returnItem = Invoker.MethodReturn(this, "DocSize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocSize()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DocSize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Levels">optional object Levels</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineOutdent(object levels)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(levels);
			object returnItem = Invoker.MethodReturn(this, "OutlineOutdent", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineOutdent()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OutlineOutdent", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="OutlineNumber">LateBindingApi.MSProjectApi.Enums.PJTaskOutlineShowLevel OutlineNumber</param>
		/// <param name="ExpandInsertedProjects">optional object ExpandInsertedProjects</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineShowTasks(LateBindingApi.MSProjectApi.Enums.PJTaskOutlineShowLevel outlineNumber, object expandInsertedProjects)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(outlineNumber, expandInsertedProjects);
			object returnItem = Invoker.MethodReturn(this, "OutlineShowTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="OutlineNumber">LateBindingApi.MSProjectApi.Enums.PJTaskOutlineShowLevel OutlineNumber</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineShowTasks(LateBindingApi.MSProjectApi.Enums.PJTaskOutlineShowLevel outlineNumber)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(outlineNumber);
			object returnItem = Invoker.MethodReturn(this, "OutlineShowTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Levels">optional object Levels</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineIndent(object levels)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(levels);
			object returnItem = Invoker.MethodReturn(this, "OutlineIndent", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineIndent()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OutlineIndent", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineHideSubTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OutlineHideSubTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineShowSubTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OutlineShowSubTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineShowAllTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OutlineShowAllTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectBeginning(object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(extend);
			object returnItem = Invoker.MethodReturn(this, "SelectBeginning", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectBeginning()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectBeginning", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectEnd(object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(extend);
			object returnItem = Invoker.MethodReturn(this, "SelectEnd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectEnd()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectEnd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRowStart(object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(extend);
			object returnItem = Invoker.MethodReturn(this, "SelectRowStart", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRowStart()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectRowStart", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRowEnd(object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(extend);
			object returnItem = Invoker.MethodReturn(this, "SelectRowEnd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRowEnd()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectRowEnd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="NumCells">optional object NumCells</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellLeft(object numCells, object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numCells, extend);
			object returnItem = Invoker.MethodReturn(this, "SelectCellLeft", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellLeft()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectCellLeft", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="NumCells">optional object NumCells</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellRight(object numCells, object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numCells, extend);
			object returnItem = Invoker.MethodReturn(this, "SelectCellRight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellRight()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectCellRight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="NumCells">optional object NumCells</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellUp(object numCells, object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numCells, extend);
			object returnItem = Invoker.MethodReturn(this, "SelectCellUp", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellUp()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectCellUp", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="NumCells">optional object NumCells</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellDown(object numCells, object extend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numCells, extend);
			object returnItem = Invoker.MethodReturn(this, "SelectCellDown", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCellDown()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectCellDown", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectionExtend(object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectionExtend", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectionExtend()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectionExtend", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Column">optional object Column</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ColumnBestFit(object column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(column);
			object returnItem = Invoker.MethodReturn(this, "ColumnBestFit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ColumnBestFit()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ColumnBestFit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Column">optional object Column</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ColumnEdit(object column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(column);
			object returnItem = Invoker.MethodReturn(this, "ColumnEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ColumnEdit()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ColumnEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">Int32 Row</param>
		/// <param name="Column">Int16 Column</param>
		/// <param name="RowRelative">optional object RowRelative</param>
		/// <param name="Width">optional object Width</param>
		/// <param name="Height">optional object Height</param>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRange(Int32 row, Int16 column, object rowRelative, object width, object height, object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column, rowRelative, width, height, extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectRange", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">Int32 Row</param>
		/// <param name="Column">Int16 Column</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRange(Int32 row, Int16 column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column);
			object returnItem = Invoker.MethodReturn(this, "SelectRange", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">Int32 Row</param>
		/// <param name="StartTime">string StartTime</param>
		/// <param name="Width">Int16 Width</param>
		/// <param name="Height">Int32 Height</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectTimescaleRange(Int32 row, string startTime, Int16 width, Int32 height)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, startTime, width, height);
			object returnItem = Invoker.MethodReturn(this, "SelectTimescaleRange", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">Int32 Row</param>
		/// <param name="Column">string Column</param>
		/// <param name="RowRelative">optional object RowRelative</param>
		/// <param name="Width">optional object Width</param>
		/// <param name="Height">optional object Height</param>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectTaskField(Int32 row, string column, object rowRelative, object width, object height, object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column, rowRelative, width, height, extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectTaskField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">Int32 Row</param>
		/// <param name="Column">string Column</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectTaskField(Int32 row, string column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column);
			object returnItem = Invoker.MethodReturn(this, "SelectTaskField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">Int32 Row</param>
		/// <param name="Column">string Column</param>
		/// <param name="RowRelative">optional object RowRelative</param>
		/// <param name="Width">optional object Width</param>
		/// <param name="Height">optional object Height</param>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectResourceField(Int32 row, string column, object rowRelative, object width, object height, object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column, rowRelative, width, height, extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectResourceField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">Int32 Row</param>
		/// <param name="Column">string Column</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectResourceField(Int32 row, string column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column);
			object returnItem = Invoker.MethodReturn(this, "SelectResourceField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">optional object Row</param>
		/// <param name="RowRelative">optional object RowRelative</param>
		/// <param name="Height">optional object Height</param>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRow(object row, object rowRelative, object height, object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, rowRelative, height, extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectRow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectRow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectRow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Column">optional object Column</param>
		/// <param name="Additional">optional object Additional</param>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectColumn(object column, object additional, object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(column, additional, extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectColumn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Column">optional object Column</param>
		/// <param name="Additional">optional object Additional</param>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectTaskColumn(object column, object additional, object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(column, additional, extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectTaskColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectTaskColumn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectTaskColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Column">optional object Column</param>
		/// <param name="Additional">optional object Additional</param>
		/// <param name="Extend">optional object Extend</param>
		/// <param name="Add">optional object Add</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectResourceColumn(object column, object additional, object extend, object add)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(column, additional, extend, add);
			object returnItem = Invoker.MethodReturn(this, "SelectResourceColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectResourceColumn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectResourceColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">optional object Row</param>
		/// <param name="Column">optional object Column</param>
		/// <param name="RowRelative">optional object RowRelative</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectTaskCell(object row, object column, object rowRelative)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column, rowRelative);
			object returnItem = Invoker.MethodReturn(this, "SelectTaskCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectTaskCell()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectTaskCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">optional object Row</param>
		/// <param name="Column">optional object Column</param>
		/// <param name="RowRelative">optional object RowRelative</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectResourceCell(object row, object column, object rowRelative)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column, rowRelative);
			object returnItem = Invoker.MethodReturn(this, "SelectResourceCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectResourceCell()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectResourceCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Row">optional object Row</param>
		/// <param name="Column">optional object Column</param>
		/// <param name="RowRelative">optional object RowRelative</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCell(object row, object column, object rowRelative)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(row, column, rowRelative);
			object returnItem = Invoker.MethodReturn(this, "SelectCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectCell()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SelectSheet()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectSheet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="App">string App</param>
		/// <param name="Topic">string Topic</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DDEInitiate(string app, string topic)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(app, topic);
			object returnItem = Invoker.MethodReturn(this, "DDEInitiate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Command">string Command</param>
		/// <param name="TimeOut">optional object TimeOut</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DDEExecute(string command, object timeOut)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(command, timeOut);
			object returnItem = Invoker.MethodReturn(this, "DDEExecute", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Command">string Command</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DDEExecute(string command)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(command);
			object returnItem = Invoker.MethodReturn(this, "DDEExecute", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DDETerminate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DDETerminate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Tab">optional object Tab</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool InformationDialog(object tab)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(tab);
			object returnItem = Invoker.MethodReturn(this, "InformationDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool InformationDialog()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InformationDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Form(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "Form", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Form()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Form", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomForms()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CustomForms", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Tables()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Tables", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Filters()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Filters", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Macro(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "Macro", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Macro()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Macro", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Down">optional object Down</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FillDown(object down)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(down);
			object returnItem = Invoker.MethodReturn(this, "FillDown", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FillDown()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FillDown", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Views()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Views", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalculateProject()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalculateProject", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="All">optional object All</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelingClear(object all)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(all);
			object returnItem = Invoker.MethodReturn(this, "LevelingClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LevelingClear()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LevelingClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SpellingCheck()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SpellingCheck", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskName">optional object TaskName</param>
		/// <param name="TaskNotes">optional object TaskNotes</param>
		/// <param name="TaskText1">optional object TaskText1</param>
		/// <param name="TaskText2">optional object TaskText2</param>
		/// <param name="TaskText3">optional object TaskText3</param>
		/// <param name="TaskText4">optional object TaskText4</param>
		/// <param name="TaskText5">optional object TaskText5</param>
		/// <param name="TaskText6">optional object TaskText6</param>
		/// <param name="TaskText7">optional object TaskText7</param>
		/// <param name="TaskText8">optional object TaskText8</param>
		/// <param name="TaskText9">optional object TaskText9</param>
		/// <param name="TaskText10">optional object TaskText10</param>
		/// <param name="ResourceCode">optional object ResourceCode</param>
		/// <param name="ResourceName">optional object ResourceName</param>
		/// <param name="ResourceNotes">optional object ResourceNotes</param>
		/// <param name="ResourceGroup">optional object ResourceGroup</param>
		/// <param name="ResourceText1">optional object ResourceText1</param>
		/// <param name="ResourceText2">optional object ResourceText2</param>
		/// <param name="ResourceText3">optional object ResourceText3</param>
		/// <param name="ResourceText4">optional object ResourceText4</param>
		/// <param name="ResourceText5">optional object ResourceText5</param>
		/// <param name="AssignNotes">optional object AssignNotes</param>
		/// <param name="IgnoreUppercase">optional object IgnoreUppercase</param>
		/// <param name="IgnoreNumberWords">optional object IgnoreNumberWords</param>
		/// <param name="AlwaysSuggest">optional object AlwaysSuggest</param>
		/// <param name="UseCustomDictionary">optional object UseCustomDictionary</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4, object resourceText5, object assignNotes, object ignoreUppercase, object ignoreNumberWords, object alwaysSuggest, object useCustomDictionary)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4, resourceText5, assignNotes, ignoreUppercase, ignoreNumberWords, alwaysSuggest, useCustomDictionary);
			object returnItem = Invoker.MethodReturn(this, "OptionsSpelling", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSpelling()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsSpelling", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WindowMoreWindows()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WindowMoreWindows", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpContents()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpContents", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpSearch()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpSearch", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpOnlineIndex()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpOnlineIndex", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpAbout()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpAbout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FileName">optional object FileName</param>
		/// <param name="ContextNumber">optional object ContextNumber</param>
		/// <param name="Search">optional object Search</param>
		/// <param name="SearchKey">optional object SearchKey</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpLaunch(object fileName, object contextNumber, object search, object searchKey)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, contextNumber, search, searchKey);
			object returnItem = Invoker.MethodReturn(this, "HelpLaunch", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpLaunch()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpLaunch", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FileName">optional object FileName</param>
		/// <param name="ContextNumber">optional object ContextNumber</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpCueCards(object fileName, object contextNumber)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, contextNumber);
			object returnItem = Invoker.MethodReturn(this, "HelpCueCards", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpCueCards()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpCueCards", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpTopics()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpTopics", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpAnswerWizard()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpAnswerWizard", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpMSProjectFundamentals()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpMSProjectFundamentals", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AutoCorrect()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AutoCorrect", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpQuickPreview()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpQuickPreview", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpTechnicalSupport()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpTechnicalSupport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpCreateYourProject()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpCreateYourProject", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpContextHelp()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpContextHelp", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">optional object Item</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TextStyles(object item, object font, object size, object bold, object italic, object underline, object color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, font, size, bold, italic, underline, color);
			object returnItem = Invoker.MethodReturn(this, "TextStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TextStyles()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TextStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">optional object Item</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="CellColor">optional object CellColor</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="ShowInMenu">optional object ShowInMenu</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesFormat(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern, object showInMenu)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, font, size, bold, italic, underline, color, cellColor, pattern, showInMenu);
			object returnItem = Invoker.MethodReturn(this, "DetailStylesFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesFormat()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DetailStylesFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjTimescaledData Item</param>
		/// <param name="Position">optional object Position</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesAdd(LateBindingApi.MSProjectApi.Enums.PjTimescaledData item, object position)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, position);
			object returnItem = Invoker.MethodReturn(this, "DetailStylesAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjTimescaledData Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesAdd(LateBindingApi.MSProjectApi.Enums.PjTimescaledData item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "DetailStylesAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjTimescaledData Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesRemove(LateBindingApi.MSProjectApi.Enums.PjTimescaledData item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "DetailStylesRemove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesRemoveAll()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DetailStylesRemoveAll", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="Reset">optional object Reset</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Font(object name, object size, object bold, object italic, object underline, object color, object reset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, size, bold, italic, underline, color, reset);
			object returnItem = Invoker.MethodReturn(this, "Font", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Font()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Font", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Timescale()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Timescale", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="MajorUnits">optional object MajorUnits</param>
		/// <param name="MinorUnits">optional object MinorUnits</param>
		/// <param name="MajorLabel">optional object MajorLabel</param>
		/// <param name="MinorLabel">optional object MinorLabel</param>
		/// <param name="MajorAlign">optional object MajorAlign</param>
		/// <param name="MinorAlign">optional object MinorAlign</param>
		/// <param name="MajorCount">optional object MajorCount</param>
		/// <param name="MinorCount">optional object MinorCount</param>
		/// <param name="MajorTicks">optional object MajorTicks</param>
		/// <param name="MinorTicks">optional object MinorTicks</param>
		/// <param name="Enlarge">optional object Enlarge</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="MajorUseFY">optional object MajorUseFY</param>
		/// <param name="MinorUseFY">optional object MinorUseFY</param>
		/// <param name="TopUnits">optional object TopUnits</param>
		/// <param name="TopLabel">optional object TopLabel</param>
		/// <param name="TopAlign">optional object TopAlign</param>
		/// <param name="TopCount">optional object TopCount</param>
		/// <param name="TopTicks">optional object TopTicks</param>
		/// <param name="TopUseFY">optional object TopUseFY</param>
		/// <param name="TierCount">optional object TierCount</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits, object topLabel, object topAlign, object topCount, object topTicks, object topUseFY, object tierCount)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits, topLabel, topAlign, topCount, topTicks, topUseFY, tierCount);
			object returnItem = Invoker.MethodReturn(this, "TimescaleEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TimescaleEdit()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimescaleEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Key1">optional object Key1</param>
		/// <param name="Ascending1">optional object Ascending1</param>
		/// <param name="Key2">optional object Key2</param>
		/// <param name="Ascending2">optional object Ascending2</param>
		/// <param name="Key3">optional object Key3</param>
		/// <param name="Ascending3">optional object Ascending3</param>
		/// <param name="Renumber">optional object Renumber</param>
		/// <param name="Outline">optional object Outline</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Sort(object key1, object ascending1, object key2, object ascending2, object key3, object ascending3, object renumber, object outline)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(key1, ascending1, key2, ascending2, key3, ascending3, renumber, outline);
			object returnItem = Invoker.MethodReturn(this, "Sort", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Sort()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Sort", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BarBoxStyles()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BarBoxStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="GanttStyle">optional object GanttStyle</param>
		/// <param name="StartShape">optional object StartShape</param>
		/// <param name="StartType">optional object StartType</param>
		/// <param name="StartColor">optional object StartColor</param>
		/// <param name="MiddleShape">optional object MiddleShape</param>
		/// <param name="MiddlePattern">optional object MiddlePattern</param>
		/// <param name="MiddleColor">optional object MiddleColor</param>
		/// <param name="EndShape">optional object EndShape</param>
		/// <param name="EndType">optional object EndType</param>
		/// <param name="EndColor">optional object EndColor</param>
		/// <param name="LeftText">optional object LeftText</param>
		/// <param name="RightText">optional object RightText</param>
		/// <param name="TopText">optional object TopText</param>
		/// <param name="BottomText">optional object BottomText</param>
		/// <param name="InsideText">optional object InsideText</param>
		/// <param name="Reset">optional object Reset</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText, object reset, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText, reset, projectName);
			object returnItem = Invoker.MethodReturn(this, "GanttBarFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarFormat()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttBarFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Draw">optional object Draw</param>
		/// <param name="Calendar">optional object Calendar</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="Pattern">optional object Pattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TimescaleNonWorking(object draw, object calendar, object color, object pattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(draw, calendar, color, pattern);
			object returnItem = Invoker.MethodReturn(this, "TimescaleNonWorking", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TimescaleNonWorking()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimescaleNonWorking", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxShowHideFields(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "BoxShowHideFields", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxShowHideFields()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BoxShowHideFields", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Layout()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Layout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Straight">optional object Straight</param>
		/// <param name="DisplayArrows">optional object DisplayArrows</param>
		/// <param name="AdjustForPageBreaks">optional object AdjustForPageBreaks</param>
		/// <param name="DisplayPageBreaks">optional object DisplayPageBreaks</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTLayout(object straight, object displayArrows, object adjustForPageBreaks, object displayPageBreaks)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(straight, displayArrows, adjustForPageBreaks, displayPageBreaks);
			object returnItem = Invoker.MethodReturn(this, "PERTLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTLayout()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PERTLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LayoutNow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LayoutNow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CriticalStyle">optional object CriticalStyle</param>
		/// <param name="CriticalColor">optional object CriticalColor</param>
		/// <param name="NoncriticalStyle">optional object NoncriticalStyle</param>
		/// <param name="NoncriticalColor">optional object NoncriticalColor</param>
		/// <param name="CriticalMilestoneStyle">optional object CriticalMilestoneStyle</param>
		/// <param name="CriticalMilestoneColor">optional object CriticalMilestoneColor</param>
		/// <param name="NoncriticalMilestoneStyle">optional object NoncriticalMilestoneStyle</param>
		/// <param name="NoncriticalMilestoneColor">optional object NoncriticalMilestoneColor</param>
		/// <param name="CriticalSummaryStyle">optional object CriticalSummaryStyle</param>
		/// <param name="CriticalSummaryColor">optional object CriticalSummaryColor</param>
		/// <param name="NoncriticalSummaryStyle">optional object NoncriticalSummaryStyle</param>
		/// <param name="NoncriticalSummaryColor">optional object NoncriticalSummaryColor</param>
		/// <param name="CriticalSubprojectStyle">optional object CriticalSubprojectStyle</param>
		/// <param name="CriticalSubprojectColor">optional object CriticalSubprojectColor</param>
		/// <param name="NoncriticalSubprojectStyle">optional object NoncriticalSubprojectStyle</param>
		/// <param name="NoncriticalSubprojectColor">optional object NoncriticalSubprojectColor</param>
		/// <param name="CriticalMarkedStyle">optional object CriticalMarkedStyle</param>
		/// <param name="CriticalMarkedColor">optional object CriticalMarkedColor</param>
		/// <param name="NoncriticalMarkedStyle">optional object NoncriticalMarkedStyle</param>
		/// <param name="NoncriticalMarkedColor">optional object NoncriticalMarkedColor</param>
		/// <param name="CriticalExternalTaskStyle">optional object CriticalExternalTaskStyle</param>
		/// <param name="CriticalExternalTaskColor">optional object CriticalExternalTaskColor</param>
		/// <param name="NoncriticalExternalTaskStyle">optional object NoncriticalExternalTaskStyle</param>
		/// <param name="NoncriticalExternalTaskColor">optional object NoncriticalExternalTaskColor</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor, object noncriticalMarkedStyle, object noncriticalMarkedColor, object criticalExternalTaskStyle, object criticalExternalTaskColor, object noncriticalExternalTaskStyle, object noncriticalExternalTaskColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor, noncriticalMarkedStyle, noncriticalMarkedColor, criticalExternalTaskStyle, criticalExternalTaskColor, noncriticalExternalTaskStyle, noncriticalExternalTaskColor);
			object returnItem = Invoker.MethodReturn(this, "PERTBorders", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTBorders()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PERTBorders", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Gridlines()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Gridlines", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjGridline Item</param>
		/// <param name="NormalType">optional object NormalType</param>
		/// <param name="NormalColor">optional object NormalColor</param>
		/// <param name="Interval">optional object Interval</param>
		/// <param name="IntervalType">optional object IntervalType</param>
		/// <param name="IntervalColor">optional object IntervalColor</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GridlinesEdit(LateBindingApi.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval, object intervalType, object intervalColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, normalType, normalColor, interval, intervalType, intervalColor);
			object returnItem = Invoker.MethodReturn(this, "GridlinesEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjGridline Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GridlinesEdit(LateBindingApi.MSProjectApi.Enums.PjGridline item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "GridlinesEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowSelectedTasks(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "ViewShowSelectedTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowSelectedTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowSelectedTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PageBreaksShow(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "PageBreaksShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PageBreaksShow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PageBreaksShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FindNext()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FindNext", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FindPrevious()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FindPrevious", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ZoomOut()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ZoomOut", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ZoomIn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ZoomIn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		/// <param name="Create">optional object Create</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetField(string field, string value, object create)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value, create);
			object returnItem = Invoker.MethodReturn(this, "SetField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetField(string field, string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value);
			object returnItem = Invoker.MethodReturn(this, "SetField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		/// <param name="AllSelectedTasks">optional object AllSelectedTasks</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetTaskField(string field, string value, object allSelectedTasks, object create, object taskID, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value, allSelectedTasks, create, taskID, projectName);
			object returnItem = Invoker.MethodReturn(this, "SetTaskField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetTaskField(string field, string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value);
			object returnItem = Invoker.MethodReturn(this, "SetTaskField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		/// <param name="AllSelectedResources">optional object AllSelectedResources</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="ResourceID">optional object ResourceID</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetResourceField(string field, string value, object allSelectedResources, object create, object resourceID, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value, allSelectedResources, create, resourceID, projectName);
			object returnItem = Invoker.MethodReturn(this, "SetResourceField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetResourceField(string field, string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value);
			object returnItem = Invoker.MethodReturn(this, "SetResourceField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Value">string Value</param>
		/// <param name="Create">optional object Create</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetActiveCell(string value, object create)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(value, create);
			object returnItem = Invoker.MethodReturn(this, "SetActiveCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetActiveCell(string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(value);
			object returnItem = Invoker.MethodReturn(this, "SetActiveCell", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		/// <param name="Test">optional object Test</param>
		/// <param name="Op">optional object Op</param>
		/// <param name="Field2">optional object Field2</param>
		/// <param name="Value2">optional object Value2</param>
		/// <param name="Test2">optional object Test2</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object CheckField(string field, string value, object test, object op, object field2, object value2, object test2)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value, test, op, field2, value2, test2);
			object returnItem = Invoker.MethodReturn(this, "CheckField", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 12,14)]
		public object CheckField(string field, string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value);
			object returnItem = Invoker.MethodReturn(this, "CheckField", paramsArray);
			if((null != returnItem) && (returnItem is MarshalByRefObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		/// <param name="CheckField">string CheckField</param>
		/// <param name="CheckValue">string CheckValue</param>
		/// <param name="CheckTest">optional object CheckTest</param>
		/// <param name="CheckOperation">optional object CheckOperation</param>
		/// <param name="CheckField2">optional object CheckField2</param>
		/// <param name="CheckValue2">optional object CheckValue2</param>
		/// <param name="CheckTest2">optional object CheckTest2</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetMatchingField(string field, string value, string checkField, string checkValue, object checkTest, object checkOperation, object checkField2, object checkValue2, object checkTest2)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value, checkField, checkValue, checkTest, checkOperation, checkField2, checkValue2, checkTest2);
			object returnItem = Invoker.MethodReturn(this, "SetMatchingField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		/// <param name="CheckField">string CheckField</param>
		/// <param name="CheckValue">string CheckValue</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetMatchingField(string field, string value, string checkField, string checkValue)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value, checkField, checkValue);
			object returnItem = Invoker.MethodReturn(this, "SetMatchingField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Window">optional object Window</param>
		/// <param name="Command">optional object Command</param>
		/// <param name="Minimize">optional object Minimize</param>
		/// <param name="Activate">optional object Activate</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppExecute(object window, object command, object minimize, object activate)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(window, command, minimize, activate);
			object returnItem = Invoker.MethodReturn(this, "AppExecute", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppExecute()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AppExecute", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Application">string Application</param>
		/// <param name="Document">optional object Document</param>
		/// <param name="Activate">optional object Activate</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppLaunch(string application, object document, object activate)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(application, document, activate);
			object returnItem = Invoker.MethodReturn(this, "AppLaunch", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Application">string Application</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AppLaunch(string application)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(application);
			object returnItem = Invoker.MethodReturn(this, "AppLaunch", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DDELinksUpdate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DDELinksUpdate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GotoTaskDates()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GotoTaskDates", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Display">LateBindingApi.MSProjectApi.Enums.PjGanttBarLink Display</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarLinks(LateBindingApi.MSProjectApi.Enums.PjGanttBarLink display)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(display);
			object returnItem = Invoker.MethodReturn(this, "GanttBarLinks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Display">optional object Display</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttShowDrawings(object display)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(display);
			object returnItem = Invoker.MethodReturn(this, "GanttShowDrawings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttShowDrawings()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttShowDrawings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="On">optional object On</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BarRounding(object on)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(on);
			object returnItem = Invoker.MethodReturn(this, "BarRounding", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BarRounding()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BarRounding", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="AlwaysRollup">optional object AlwaysRollup</param>
		/// <param name="HideWhenSummaryExpanded">optional object HideWhenSummaryExpanded</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttRollup(object alwaysRollup, object hideWhenSummaryExpanded)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(alwaysRollup, hideWhenSummaryExpanded);
			object returnItem = Invoker.MethodReturn(this, "GanttRollup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttRollup()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttRollup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="DateFormat">LateBindingApi.MSProjectApi.Enums.PjDateFormat DateFormat</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarTextDateFormat(LateBindingApi.MSProjectApi.Enums.PjDateFormat dateFormat)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dateFormat);
			object returnItem = Invoker.MethodReturn(this, "GanttBarTextDateFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Size">LateBindingApi.MSProjectApi.Enums.PjBarSize Size</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarSize(LateBindingApi.MSProjectApi.Enums.PjBarSize size)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(size);
			object returnItem = Invoker.MethodReturn(this, "GanttBarSize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">string Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarStyleDelete(string item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">string Item</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="Name">optional object Name</param>
		/// <param name="StartShape">optional object StartShape</param>
		/// <param name="StartType">optional object StartType</param>
		/// <param name="StartColor">optional object StartColor</param>
		/// <param name="MiddleShape">optional object MiddleShape</param>
		/// <param name="MiddleColor">optional object MiddleColor</param>
		/// <param name="MiddlePattern">optional object MiddlePattern</param>
		/// <param name="EndShape">optional object EndShape</param>
		/// <param name="EndType">optional object EndType</param>
		/// <param name="EndColor">optional object EndColor</param>
		/// <param name="ShowFor">optional object ShowFor</param>
		/// <param name="Row">optional object Row</param>
		/// <param name="From">optional object From</param>
		/// <param name="To">optional object To</param>
		/// <param name="BottomText">optional object BottomText</param>
		/// <param name="TopText">optional object TopText</param>
		/// <param name="LeftText">optional object LeftText</param>
		/// <param name="RightText">optional object RightText</param>
		/// <param name="InsideText">optional object InsideText</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText, object rightText, object insideText)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText, rightText, insideText);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">string Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttBarStyleEdit(string item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Size">optional object Size</param>
		/// <param name="DateFormat">optional object DateFormat</param>
		/// <param name="Gridlines">optional object Gridlines</param>
		/// <param name="CrossMarks">optional object CrossMarks</param>
		/// <param name="Field1">optional object Field1</param>
		/// <param name="Field2">optional object Field2</param>
		/// <param name="Field3">optional object Field3</param>
		/// <param name="Field4">optional object Field4</param>
		/// <param name="Field5">optional object Field5</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTBoxStyles(object size, object dateFormat, object gridlines, object crossMarks, object field1, object field2, object field3, object field4, object field5)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(size, dateFormat, gridlines, crossMarks, field1, field2, field3, field4, field5);
			object returnItem = Invoker.MethodReturn(this, "PERTBoxStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTBoxStyles()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PERTBoxStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Create">optional object Create</param>
		/// <param name="Move">optional object Move</param>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="XPosition">optional object XPosition</param>
		/// <param name="YPosition">optional object YPosition</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTSetTask(object create, object move, object taskID, object xPosition, object yPosition)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(create, move, taskID, xPosition, yPosition);
			object returnItem = Invoker.MethodReturn(this, "PERTSetTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool PERTSetTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PERTSetTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TopLeftShowAs">optional object TopLeftShowAs</param>
		/// <param name="TopLeftColor">optional object TopLeftColor</param>
		/// <param name="TopLeftPattern">optional object TopLeftPattern</param>
		/// <param name="BottomLeftShowAs">optional object BottomLeftShowAs</param>
		/// <param name="BottomLeftColor">optional object BottomLeftColor</param>
		/// <param name="BottomLeftPattern">optional object BottomLeftPattern</param>
		/// <param name="TopRightShowAs">optional object TopRightShowAs</param>
		/// <param name="TopRightColor">optional object TopRightColor</param>
		/// <param name="TopRightPattern">optional object TopRightPattern</param>
		/// <param name="BottomRightShowAs">optional object BottomRightShowAs</param>
		/// <param name="BottomRightColor">optional object BottomRightColor</param>
		/// <param name="BottomRightPattern">optional object BottomRightPattern</param>
		/// <param name="ShowValues">optional object ShowValues</param>
		/// <param name="ShowAvailabilityLine">optional object ShowAvailabilityLine</param>
		/// <param name="PercentBarOverlap">optional object PercentBarOverlap</param>
		/// <param name="ProposedLeftShowAs">optional object ProposedLeftShowAs</param>
		/// <param name="ProposedLeftColor">optional object ProposedLeftColor</param>
		/// <param name="ProposedLeftPattern">optional object ProposedLeftPattern</param>
		/// <param name="ProposedRightShowAs">optional object ProposedRightShowAs</param>
		/// <param name="ProposedRightColor">optional object ProposedRightColor</param>
		/// <param name="ProposedRightPattern">optional object ProposedRightPattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs, object proposedRightColor, object proposedRightPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs, proposedRightColor, proposedRightPattern);
			object returnItem = Invoker.MethodReturn(this, "ResourceGraphBarStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceGraphBarStyles()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceGraphBarStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Filenames">object Filenames</param>
		/// <param name="NewWindow">object NewWindow</param>
		/// <param name="AttachToSources">object AttachToSources</param>
		/// <param name="PoolResources">object PoolResources</param>
		/// <param name="HideSubtasks">object HideSubtasks</param>
		/// <param name="openPool">LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool</param>
		/// <param name="UserID">optional object UserID</param>
		/// <param name="Password">optional object Password</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ConsolidateProjects(object filenames, object newWindow, object attachToSources, object poolResources, object hideSubtasks, LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool, object userID, object password)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filenames, newWindow, attachToSources, poolResources, hideSubtasks, openPool, userID, password);
			object returnItem = Invoker.MethodReturn(this, "ConsolidateProjects", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Filenames">object Filenames</param>
		/// <param name="NewWindow">object NewWindow</param>
		/// <param name="AttachToSources">object AttachToSources</param>
		/// <param name="PoolResources">object PoolResources</param>
		/// <param name="HideSubtasks">object HideSubtasks</param>
		/// <param name="openPool">LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ConsolidateProjects(object filenames, object newWindow, object attachToSources, object poolResources, object hideSubtasks, LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filenames, newWindow, attachToSources, poolResources, hideSubtasks, openPool);
			object returnItem = Invoker.MethodReturn(this, "ConsolidateProjects", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjOrganizer Type</param>
		/// <param name="Task">optional object Task</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Organizer(LateBindingApi.MSProjectApi.Enums.PjOrganizer type, object task)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type, task);
			object returnItem = Invoker.MethodReturn(this, "Organizer", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjOrganizer Type</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Organizer(LateBindingApi.MSProjectApi.Enums.PjOrganizer type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			object returnItem = Invoker.MethodReturn(this, "Organizer", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">optional object Type</param>
		/// <param name="FileName">optional object FileName</param>
		/// <param name="ToFileName">optional object ToFileName</param>
		/// <param name="Name">optional object Name</param>
		/// <param name="Task">optional object Task</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OrganizerMoveItem(object type, object fileName, object toFileName, object name, object task)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type, fileName, toFileName, name, task);
			object returnItem = Invoker.MethodReturn(this, "OrganizerMoveItem", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OrganizerMoveItem()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OrganizerMoveItem", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">optional object Type</param>
		/// <param name="FileName">optional object FileName</param>
		/// <param name="Name">optional object Name</param>
		/// <param name="Task">optional object Task</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OrganizerDeleteItem(object type, object fileName, object name, object task)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type, fileName, name, task);
			object returnItem = Invoker.MethodReturn(this, "OrganizerDeleteItem", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OrganizerDeleteItem()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OrganizerDeleteItem", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">optional object Type</param>
		/// <param name="FileName">optional object FileName</param>
		/// <param name="Name">optional object Name</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="Task">optional object Task</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OrganizerRenameItem(object type, object fileName, object name, object newName, object task)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type, fileName, name, newName, task);
			object returnItem = Invoker.MethodReturn(this, "OrganizerRenameItem", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OrganizerRenameItem()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OrganizerRenameItem", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool RecurringTaskInsert()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "RecurringTaskInsert", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarTimescale()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarTimescale", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TopLeft">optional object TopLeft</param>
		/// <param name="TopRight">optional object TopRight</param>
		/// <param name="BottomLeft">optional object BottomLeft</param>
		/// <param name="BottomRight">optional object BottomRight</param>
		/// <param name="TopColor">optional object TopColor</param>
		/// <param name="BottomColor">optional object BottomColor</param>
		/// <param name="TopPattern">optional object TopPattern</param>
		/// <param name="BottomPattern">optional object BottomPattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarDateBoxes(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor, object topPattern, object bottomPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor, topPattern, bottomPattern);
			object returnItem = Invoker.MethodReturn(this, "CalendarDateBoxes", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarDateBoxes()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarDateBoxes", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="MonthTitle">optional object MonthTitle</param>
		/// <param name="WeekTitle">optional object WeekTitle</param>
		/// <param name="DayTitle">optional object DayTitle</param>
		/// <param name="ShowPreview">optional object ShowPreview</param>
		/// <param name="DaysPerWeek">optional object DaysPerWeek</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarWeekHeadings(object monthTitle, object weekTitle, object dayTitle, object showPreview, object daysPerWeek)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(monthTitle, weekTitle, dayTitle, showPreview, daysPerWeek);
			object returnItem = Invoker.MethodReturn(this, "CalendarWeekHeadings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarWeekHeadings()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarWeekHeadings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjCalendarShading Item</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="Color">optional object Color</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarDateShadingEdit(LateBindingApi.MSProjectApi.Enums.PjCalendarShading item, object pattern, object color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, pattern, color);
			object returnItem = Invoker.MethodReturn(this, "CalendarDateShadingEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjCalendarShading Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarDateShadingEdit(LateBindingApi.MSProjectApi.Enums.PjCalendarShading item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "CalendarDateShadingEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="BaseCalendarName">optional object BaseCalendarName</param>
		/// <param name="ResourceUniqueID">optional object ResourceUniqueID</param>
		/// <param name="ProjectIndex">optional object ProjectIndex</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarDateShading(object baseCalendarName, object resourceUniqueID, object projectIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(baseCalendarName, resourceUniqueID, projectIndex);
			object returnItem = Invoker.MethodReturn(this, "CalendarDateShading", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarDateShading()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarDateShading", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="NumWeeks">optional object NumWeeks</param>
		/// <param name="StartDate">optional object StartDate</param>
		/// <param name="EndDate">optional object EndDate</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ZoomCalendar(object numWeeks, object startDate, object endDate)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numWeeks, startDate, endDate);
			object returnItem = Invoker.MethodReturn(this, "ZoomCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ZoomCalendar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ZoomCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="SortOrder">optional object SortOrder</param>
		/// <param name="AutoLayout">optional object AutoLayout</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarLayout(object sortOrder, object autoLayout)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(sortOrder, autoLayout);
			object returnItem = Invoker.MethodReturn(this, "CalendarLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarLayout()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="BarRounding">optional object BarRounding</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarBarStyles(object barRounding)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(barRounding);
			object returnItem = Invoker.MethodReturn(this, "CalendarBarStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarBarStyles()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarBarStyles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjBarItem Item</param>
		/// <param name="Bar">optional object Bar</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="Align">optional object Align</param>
		/// <param name="Wrap">optional object Wrap</param>
		/// <param name="Shadow">optional object Shadow</param>
		/// <param name="Field1">optional object Field1</param>
		/// <param name="Field2">optional object Field2</param>
		/// <param name="Field3">optional object Field3</param>
		/// <param name="Field4">optional object Field4</param>
		/// <param name="Field5">optional object Field5</param>
		/// <param name="SplitPattern">optional object SplitPattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarBarStylesEdit(LateBindingApi.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4, object field5, object splitPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4, field5, splitPattern);
			object returnItem = Invoker.MethodReturn(this, "CalendarBarStylesEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjBarItem Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarBarStylesEdit(LateBindingApi.MSProjectApi.Enums.PjBarItem item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "CalendarBarStylesEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarBestFitWeekHeight()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarBestFitWeekHeight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjShape Type</param>
		/// <param name="Behind">optional object Behind</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingCreate(LateBindingApi.MSProjectApi.Enums.PjShape type, object behind)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type, behind);
			object returnItem = Invoker.MethodReturn(this, "DrawingCreate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjShape Type</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingCreate(LateBindingApi.MSProjectApi.Enums.PjShape type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			object returnItem = Invoker.MethodReturn(this, "DrawingCreate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Forward">optional object Forward</param>
		/// <param name="Full">optional object Full</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingMove(object forward, object full)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(forward, full);
			object returnItem = Invoker.MethodReturn(this, "DrawingMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingMove()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DrawingMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingReshape()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DrawingReshape", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="SizePositionTab">optional object SizePositionTab</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingProperties(object sizePositionTab)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(sizePositionTab);
			object returnItem = Invoker.MethodReturn(this, "DrawingProperties", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingProperties()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DrawingProperties", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingCycleColor()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DrawingCycleColor", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FormatCopy()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FormatCopy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FormatPaste()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FormatPaste", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FormatPainter()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FormatPainter", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Action">optional object Action</param>
		/// <param name="ToolbarName">optional object ToolbarName</param>
		/// <param name="NewToolbarName">optional object NewToolbarName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Toolbars(object action, object toolbarName, object newToolbarName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(action, toolbarName, newToolbarName);
			object returnItem = Invoker.MethodReturn(this, "Toolbars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Toolbars()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Toolbars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ToolbarName">string ToolbarName</param>
		/// <param name="ButtonIndex">Int16 ButtonIndex</param>
		/// <param name="Command">optional object Command</param>
		/// <param name="FaceIndex">optional object FaceIndex</param>
		/// <param name="Description">optional object Description</param>
		/// <param name="ToolTip">optional object ToolTip</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarInsertTool(string toolbarName, Int16 buttonIndex, object command, object faceIndex, object description, object toolTip)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(toolbarName, buttonIndex, command, faceIndex, description, toolTip);
			object returnItem = Invoker.MethodReturn(this, "ToolbarInsertTool", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ToolbarName">string ToolbarName</param>
		/// <param name="ButtonIndex">Int16 ButtonIndex</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarInsertTool(string toolbarName, Int16 buttonIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(toolbarName, buttonIndex);
			object returnItem = Invoker.MethodReturn(this, "ToolbarInsertTool", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ToolbarName">string ToolbarName</param>
		/// <param name="ButtonIndex">Int16 ButtonIndex</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarDeleteTool(string toolbarName, Int16 buttonIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(toolbarName, buttonIndex);
			object returnItem = Invoker.MethodReturn(this, "ToolbarDeleteTool", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarsCustomize()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToolbarsCustomize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ToolbarName">optional object ToolbarName</param>
		/// <param name="ButtonIndex">optional object ButtonIndex</param>
		/// <param name="Command">optional object Command</param>
		/// <param name="FaceIndex">optional object FaceIndex</param>
		/// <param name="Description">optional object Description</param>
		/// <param name="ToolTip">optional object ToolTip</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarCustomizeTool(object toolbarName, object buttonIndex, object command, object faceIndex, object description, object toolTip)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(toolbarName, buttonIndex, command, faceIndex, description, toolTip);
			object returnItem = Invoker.MethodReturn(this, "ToolbarCustomizeTool", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarCustomizeTool()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToolbarCustomizeTool", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ToolbarName">string ToolbarName</param>
		/// <param name="ButtonIndex">Int16 ButtonIndex</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarCopyToolFace(string toolbarName, Int16 buttonIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(toolbarName, buttonIndex);
			object returnItem = Invoker.MethodReturn(this, "ToolbarCopyToolFace", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ToolbarName">string ToolbarName</param>
		/// <param name="ButtonIndex">Int16 ButtonIndex</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToolbarPasteToolFace(string toolbarName, Int16 buttonIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(toolbarName, buttonIndex);
			object returnItem = Invoker.MethodReturn(this, "ToolbarPasteToolFace", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Set">optional object Set</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontBold(object set)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(set);
			object returnItem = Invoker.MethodReturn(this, "FontBold", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontBold()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FontBold", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Set">optional object Set</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontItalic(object set)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(set);
			object returnItem = Invoker.MethodReturn(this, "FontItalic", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontItalic()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FontItalic", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Set">optional object Set</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontUnderLine(object set)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(set);
			object returnItem = Invoker.MethodReturn(this, "FontUnderLine", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontUnderLine()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FontUnderLine", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Align">LateBindingApi.MSProjectApi.Enums.PjAlignment Align</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ColumnAlignment(LateBindingApi.MSProjectApi.Enums.PjAlignment align)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(align);
			object returnItem = Invoker.MethodReturn(this, "ColumnAlignment", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Reports()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Reports", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TipOfTheDay()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TipOfTheDay", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FindFile()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FindFile", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="DataFile">string DataFile</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailUpdateProject(string dataFile)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dataFile);
			object returnItem = Invoker.MethodReturn(this, "MailUpdateProject", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="MessageType">optional object MessageType</param>
		/// <param name="Subject">optional object Subject</param>
		/// <param name="Body">optional object Body</param>
		/// <param name="Fields">optional object Fields</param>
		/// <param name="UpdateAsOf">optional object UpdateAsOf</param>
		/// <param name="ShowDialog">optional object ShowDialog</param>
		/// <param name="InstallationMessage">optional object InstallationMessage</param>
		/// <param name="UpdateFrom">optional object UpdateFrom</param>
		/// <param name="PublishScope">optional object PublishScope</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailSendProjectMail(object messageType, object subject, object body, object fields, object updateAsOf, object showDialog, object installationMessage, object updateFrom, object publishScope)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(messageType, subject, body, fields, updateAsOf, showDialog, installationMessage, updateFrom, publishScope);
			object returnItem = Invoker.MethodReturn(this, "MailSendProjectMail", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailSendProjectMail()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailSendProjectMail", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebInbox()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebInbox", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttChartWizard()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttChartWizard", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DrawingToolbarShow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DrawingToolbarShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Start">optional object Start</param>
		/// <param name="LeadTime">optional object LeadTime</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ReminderSet(object start, object leadTime)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(start, leadTime);
			object returnItem = Invoker.MethodReturn(this, "ReminderSet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ReminderSet()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ReminderSet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Start">optional object Start</param>
		/// <param name="LeadTime">optional object LeadTime</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SchedulePlusReminderSet(object start, object leadTime)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(start, leadTime);
			object returnItem = Invoker.MethodReturn(this, "SchedulePlusReminderSet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SchedulePlusReminderSet()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SchedulePlusReminderSet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Date">optional object Date</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarTaskList(object date)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(date);
			object returnItem = Invoker.MethodReturn(this, "CalendarTaskList", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarTaskList()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarTaskList", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineSymbolsToggle(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "OutlineSymbolsToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OutlineSymbolsToggle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OutlineSymbolsToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Action">LateBindingApi.MSProjectApi.Enums.PjPoolAction Action</param>
		/// <param name="FileName">optional object FileName</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceSharingPoolAction(LateBindingApi.MSProjectApi.Enums.PjPoolAction action, object fileName, object readOnly)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(action, fileName, readOnly);
			object returnItem = Invoker.MethodReturn(this, "ResourceSharingPoolAction", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Action">LateBindingApi.MSProjectApi.Enums.PjPoolAction Action</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceSharingPoolAction(LateBindingApi.MSProjectApi.Enums.PjPoolAction action)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(action);
			object returnItem = Invoker.MethodReturn(this, "ResourceSharingPoolAction", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceActiveDirectory()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceActiveDirectory", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceAddressBook()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceAddressBook", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceDetails(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "ResourceDetails", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceDetails()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceDetails", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Action">optional object Action</param>
		/// <param name="Position">optional object Position</param>
		/// <param name="FieldID">optional object FieldID</param>
		/// <param name="Title">optional object Title</param>
		/// <param name="IncludeInTeamStatus">optional object IncludeInTeamStatus</param>
		/// <param name="Editable">optional object Editable</param>
		/// <param name="UseAssignmentField">optional object UseAssignmentField</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailProjectMailCustomize(object action, object position, object fieldID, object title, object includeInTeamStatus, object editable, object useAssignmentField)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(action, position, fieldID, title, includeInTeamStatus, editable, useAssignmentField);
			object returnItem = Invoker.MethodReturn(this, "MailProjectMailCustomize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MailProjectMailCustomize()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MailProjectMailCustomize", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileQuit(LateBindingApi.MSProjectApi.Enums.PjSaveType save)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save);
			object returnItem = Invoker.MethodReturn(this, "FileQuit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool About()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "About", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="AlignCellData">optional object AlignCellData</param>
		/// <param name="RepeatRowLabel">optional object RepeatRowLabel</param>
		/// <param name="ShortLabels">optional object ShortLabels</param>
		/// <param name="DisplayDetailsColumn">optional object DisplayDetailsColumn</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesProperties(object alignCellData, object repeatRowLabel, object shortLabels, object displayDetailsColumn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(alignCellData, repeatRowLabel, shortLabels, displayDetailsColumn);
			object returnItem = Invoker.MethodReturn(this, "DetailStylesProperties", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesProperties()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DetailStylesProperties", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjTimescaledData Item</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DetailStylesToggleItem(LateBindingApi.MSProjectApi.Enums.PjTimescaledData item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "DetailStylesToggleItem", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AutoFilter()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AutoFilter", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewBar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewBar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MacroShowVba()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MacroShowVba", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MacroShowCode()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MacroShowCode", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebGoBack()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebGoBack", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebGoForward()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebGoForward", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebStopLoading()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebStopLoading", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebRefresh()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebRefresh", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebOpenStartPage()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebOpenStartPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebOpenSearchPage()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebOpenSearchPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Hide">optional object Hide</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebHideToolbars(object hide)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(hide);
			object returnItem = Invoker.MethodReturn(this, "WebHideToolbars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebHideToolbars()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebHideToolbars", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Address">optional object Address</param>
		/// <param name="SubAddress">optional object SubAddress</param>
		/// <param name="AddHistory">optional object AddHistory</param>
		/// <param name="NewWindow">optional object NewWindow</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FollowHyperlink(object address, object subAddress, object addHistory, object newWindow)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(address, subAddress, addHistory, newWindow);
			object returnItem = Invoker.MethodReturn(this, "FollowHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FollowHyperlink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FollowHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditPasteAsHyperlink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditPasteAsHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Address">optional object Address</param>
		/// <param name="SubAddress">optional object SubAddress</param>
		/// <param name="ScreenTip">optional object ScreenTip</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool InsertHyperlink(object name, object address, object subAddress, object screenTip)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, address, subAddress, screenTip);
			object returnItem = Invoker.MethodReturn(this, "InsertHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool InsertHyperlink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Address">optional object Address</param>
		/// <param name="SubAddress">optional object SubAddress</param>
		/// <param name="ScreenTip">optional object ScreenTip</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditHyperlink(object name, object address, object subAddress, object screenTip)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, address, subAddress, screenTip);
			object returnItem = Invoker.MethodReturn(this, "EditHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditHyperlink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Address">optional object Address</param>
		/// <param name="SubAddress">optional object SubAddress</param>
		/// <param name="AddHistory">optional object AddHistory</param>
		/// <param name="NewWindow">optional object NewWindow</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebOpenHyperlink(object address, object subAddress, object addHistory, object newWindow)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(address, subAddress, addHistory, newWindow);
			object returnItem = Invoker.MethodReturn(this, "WebOpenHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebOpenHyperlink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebOpenHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebCopyHyperlink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebCopyHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CurrentLink">optional object CurrentLink</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebAddToFavorites(object currentLink)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(currentLink);
			object returnItem = Invoker.MethodReturn(this, "WebAddToFavorites", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebAddToFavorites()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebAddToFavorites", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditClearHyperlink()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditClearHyperlink", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Address">optional object Address</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebSetStartPage(object address)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(address);
			object returnItem = Invoker.MethodReturn(this, "WebSetStartPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebSetStartPage()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebSetStartPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Address">optional object Address</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebSetSearchPage(object address)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(address);
			object returnItem = Invoker.MethodReturn(this, "WebSetSearchPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebSetSearchPage()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebSetSearchPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebOpenFavorites()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebOpenFavorites", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebToolbar(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "WebToolbar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebToolbar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebToolbar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Lock">optional object Lock</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SplitTask(object _lock)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(_lock);
			object returnItem = Invoker.MethodReturn(this, "SplitTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SplitTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SplitTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="Phonetic">optional object Phonetic</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldRename(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object newName, object phonetic)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, newName, phonetic);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldRename", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldRename(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldRename", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomizeField()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CustomizeField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Display">optional object Display</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttShowBarSplits(object display)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(display);
			object returnItem = Invoker.MethodReturn(this, "GanttShowBarSplits", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GanttShowBarSplits()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttShowBarSplits", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Display">optional object Display</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarShowBarSplits(object display)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(display);
			object returnItem = Invoker.MethodReturn(this, "CalendarShowBarSplits", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarShowBarSplits()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarShowBarSplits", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="OverwriteExisting">optional object OverwriteExisting</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="DataCategory">optional object DataCategory</param>
		/// <param name="CategoryEnabled">optional object CategoryEnabled</param>
		/// <param name="TableName">optional object TableName</param>
		/// <param name="FieldName">optional object FieldName</param>
		/// <param name="ExternalFieldName">optional object ExternalFieldName</param>
		/// <param name="ExportFilter">optional object ExportFilter</param>
		/// <param name="ImportMethod">optional object ImportMethod</param>
		/// <param name="MergeKey">optional object MergeKey</param>
		/// <param name="HeaderRow">optional object HeaderRow</param>
		/// <param name="AssignmentData">optional object AssignmentData</param>
		/// <param name="TextDelimiter">optional object TextDelimiter</param>
		/// <param name="TextFileOrigin">optional object TextFileOrigin</param>
		/// <param name="UseHtmlTemplate">optional object UseHtmlTemplate</param>
		/// <param name="TemplateFile">optional object TemplateFile</param>
		/// <param name="IncludeImage">optional object IncludeImage</param>
		/// <param name="ImageFile">optional object ImageFile</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData, object textDelimiter, object textFileOrigin, object useHtmlTemplate, object templateFile, object includeImage, object imageFile)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData, textDelimiter, textFileOrigin, useHtmlTemplate, templateFile, includeImage, imageFile);
			object returnItem = Invoker.MethodReturn(this, "MapEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MapEdit()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MapEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Right">optional object Right</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FillAcross(object right)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(right);
			object returnItem = Invoker.MethodReturn(this, "FillAcross", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FillAcross()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FillAcross", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="AcceptAll">optional object AcceptAll</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LinksBetweenProjects(object acceptAll)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(acceptAll);
			object returnItem = Invoker.MethodReturn(this, "LinksBetweenProjects", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LinksBetweenProjects()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LinksBetweenProjects", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToggleAssignments()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleAssignments", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ProgressLines()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ProgressLines", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="allSharers">optional object allSharers</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceSharingPoolUpdate(object allSharers)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(allSharers);
			object returnItem = Invoker.MethodReturn(this, "ResourceSharingPoolUpdate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceSharingPoolUpdate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceSharingPoolUpdate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceSharingPoolRefresh()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceSharingPoolRefresh", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Type">optional object Type</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebHelp(object type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			object returnItem = Invoker.MethodReturn(this, "WebHelp", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WebHelp()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WebHelp", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AddProgressLine()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AddProgressLine", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjField FieldID</param>
		/// <param name="IMEMode">LateBindingApi.MSProjectApi.Enums.PjIMEMode IMEMode</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomizeIMEMode(LateBindingApi.MSProjectApi.Enums.PjField fieldID, LateBindingApi.MSProjectApi.Enums.PjIMEMode iMEMode)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, iMEMode);
			object returnItem = Invoker.MethodReturn(this, "CustomizeIMEMode", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="UserID">optional object UserID</param>
		/// <param name="DatabasePassWord">optional object DatabasePassWord</param>
		/// <param name="FormatID">optional object FormatID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DeleteFromDatabase(object name, object userID, object databasePassWord, object formatID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, userID, databasePassWord, formatID);
			object returnItem = Invoker.MethodReturn(this, "DeleteFromDatabase", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DeleteFromDatabase()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DeleteFromDatabase", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="All">optional object All</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WBSCodeRenumber(object all)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(all);
			object returnItem = Invoker.MethodReturn(this, "WBSCodeRenumber", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WBSCodeRenumber()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WBSCodeRenumber", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CodePrefix">object CodePrefix</param>
		/// <param name="Level">object Level</param>
		/// <param name="Sequence">LateBindingApi.MSProjectApi.Enums.PjWBSSequence Sequence</param>
		/// <param name="Length">optional object Length</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="CodeGenerate">optional object CodeGenerate</param>
		/// <param name="VerifyUniqueness">optional object VerifyUniqueness</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WBSCodeMaskEdit(object codePrefix, object level, LateBindingApi.MSProjectApi.Enums.PjWBSSequence sequence, object length, object separator, object codeGenerate, object verifyUniqueness)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(codePrefix, level, sequence, length, separator, codeGenerate, verifyUniqueness);
			object returnItem = Invoker.MethodReturn(this, "WBSCodeMaskEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CodePrefix">object CodePrefix</param>
		/// <param name="Level">object Level</param>
		/// <param name="Sequence">LateBindingApi.MSProjectApi.Enums.PjWBSSequence Sequence</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WBSCodeMaskEdit(object codePrefix, object level, LateBindingApi.MSProjectApi.Enums.PjWBSSequence sequence)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(codePrefix, level, sequence);
			object returnItem = Invoker.MethodReturn(this, "WBSCodeMaskEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Level">object Level</param>
		/// <param name="Sequence">LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence</param>
		/// <param name="Length">optional object Length</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="OnlyLookUpTableCodes">optional object OnlyLookUpTableCodes</param>
		/// <param name="OnlyCompleteCodes">optional object OnlyCompleteCodes</param>
		/// <param name="LookupTableLink">optional object LookupTableLink</param>
		/// <param name="OnlyLeaves">optional object OnlyLeaves</param>
		/// <param name="MatchGeneric">optional object MatchGeneric</param>
		/// <param name="RequiredCode">optional object RequiredCode</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomOutlineCodeEdit(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object level, LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric, object requiredCode)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric, requiredCode);
			object returnItem = Invoker.MethodReturn(this, "CustomOutlineCodeEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Level">object Level</param>
		/// <param name="Sequence">LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomOutlineCodeEdit(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object level, LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence sequence)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, level, sequence);
			object returnItem = Invoker.MethodReturn(this, "CustomOutlineCodeEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="DefaultSaveFormat">optional object DefaultSaveFormat</param>
		/// <param name="DefaultProjectsPath">optional object DefaultProjectsPath</param>
		/// <param name="DefaultUserTemplatesPath">optional object DefaultUserTemplatesPath</param>
		/// <param name="DefaultWorkgroupTemplatesPath">optional object DefaultWorkgroupTemplatesPath</param>
		/// <param name="ExpandDatabaseTimephasedData">optional object ExpandDatabaseTimephasedData</param>
		/// <param name="AutomaticSave">optional object AutomaticSave</param>
		/// <param name="AutomaticSaveInterval">optional object AutomaticSaveInterval</param>
		/// <param name="AutomaticSaveOptions">optional object AutomaticSaveOptions</param>
		/// <param name="AutomaticSavePrompt">optional object AutomaticSavePrompt</param>
		/// <param name="SetDefaultsDatabase">optional object SetDefaultsDatabase</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath, object expandDatabaseTimephasedData, object automaticSave, object automaticSaveInterval, object automaticSaveOptions, object automaticSavePrompt, object setDefaultsDatabase)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath, expandDatabaseTimephasedData, automaticSave, automaticSaveInterval, automaticSaveOptions, automaticSavePrompt, setDefaultsDatabase);
			object returnItem = Invoker.MethodReturn(this, "OptionsSave", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSave()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsSave", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OfficeOnTheWeb()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OfficeOnTheWeb", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FixMe()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FixMe", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowWorkAvailability()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowWorkAvailability", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ViewShowUnitAvailability()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewShowUnitAvailability", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="All">optional object All</param>
		/// <param name="From">optional object From</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaselineClear(object all, object from)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(all, from);
			object returnItem = Invoker.MethodReturn(this, "BaselineClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BaselineClear()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BaselineClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Groups()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Groups", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GroupApply(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "GroupApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GroupApply()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GroupApply", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GroupBy()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GroupBy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Level">optional object Level</param>
		/// <param name="Code">optional object Code</param>
		/// <param name="Description">optional object Description</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LookUpTableAdd(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object level, object code, object description)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, level, code, description);
			object returnItem = Invoker.MethodReturn(this, "LookUpTableAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LookUpTableAdd(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "LookUpTableAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjBoxStyle Style</param>
		/// <param name="DataTemplate">object DataTemplate</param>
		/// <param name="HorizontalGridlines">object HorizontalGridlines</param>
		/// <param name="VerticalGridlines">object VerticalGridlines</param>
		/// <param name="BorderShape">LateBindingApi.MSProjectApi.Enums.PjBoxShape BorderShape</param>
		/// <param name="BorderColor">LateBindingApi.MSProjectApi.Enums.PjColor BorderColor</param>
		/// <param name="BorderWidth">object BorderWidth</param>
		/// <param name="BackgroundColor">LateBindingApi.MSProjectApi.Enums.PjColor BackgroundColor</param>
		/// <param name="BackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxStylesEdit(LateBindingApi.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, LateBindingApi.MSProjectApi.Enums.PjBoxShape borderShape, LateBindingApi.MSProjectApi.Enums.PjColor borderColor, object borderWidth, LateBindingApi.MSProjectApi.Enums.PjColor backgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern backgroundPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern);
			object returnItem = Invoker.MethodReturn(this, "BoxStylesEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectName">object ProjectName</param>
		/// <param name="TaskID">object TaskID</param>
		/// <param name="DataTemplate">object DataTemplate</param>
		/// <param name="HorizontalGridlines">object HorizontalGridlines</param>
		/// <param name="VerticalGridlines">object VerticalGridlines</param>
		/// <param name="BorderShape">LateBindingApi.MSProjectApi.Enums.PjBoxShape BorderShape</param>
		/// <param name="BorderColor">LateBindingApi.MSProjectApi.Enums.PjColor BorderColor</param>
		/// <param name="BorderWidth">object BorderWidth</param>
		/// <param name="BackgroundColor">LateBindingApi.MSProjectApi.Enums.PjColor BackgroundColor</param>
		/// <param name="BackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern</param>
		/// <param name="Reset">optional object Reset</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, LateBindingApi.MSProjectApi.Enums.PjBoxShape borderShape, LateBindingApi.MSProjectApi.Enums.PjColor borderColor, object borderWidth, LateBindingApi.MSProjectApi.Enums.PjColor backgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern backgroundPattern, object reset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern, reset);
			object returnItem = Invoker.MethodReturn(this, "BoxFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectName">object ProjectName</param>
		/// <param name="TaskID">object TaskID</param>
		/// <param name="DataTemplate">object DataTemplate</param>
		/// <param name="HorizontalGridlines">object HorizontalGridlines</param>
		/// <param name="VerticalGridlines">object VerticalGridlines</param>
		/// <param name="BorderShape">LateBindingApi.MSProjectApi.Enums.PjBoxShape BorderShape</param>
		/// <param name="BorderColor">LateBindingApi.MSProjectApi.Enums.PjColor BorderColor</param>
		/// <param name="BorderWidth">object BorderWidth</param>
		/// <param name="BackgroundColor">LateBindingApi.MSProjectApi.Enums.PjColor BackgroundColor</param>
		/// <param name="BackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, LateBindingApi.MSProjectApi.Enums.PjBoxShape borderShape, LateBindingApi.MSProjectApi.Enums.PjColor borderColor, object borderWidth, LateBindingApi.MSProjectApi.Enums.PjColor backgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern backgroundPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern);
			object returnItem = Invoker.MethodReturn(this, "BoxFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BarBoxFormat()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BarBoxFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ServerURL">object ServerURL</param>
		/// <param name="Name">object Name</param>
		/// <param name="AuthenticationType">LateBindingApi.MSProjectApi.Enums.PjAuthentication AuthenticationType</param>
		/// <param name="AccountType">LateBindingApi.MSProjectApi.Enums.PjAccountType AccountType</param>
		/// <param name="ShowDialog">optional object ShowDialog</param>
		/// <param name="Email">optional object Email</param>
		/// <param name="WindowsAccount">optional object WindowsAccount</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CreateWebAccount(object serverURL, object name, LateBindingApi.MSProjectApi.Enums.PjAuthentication authenticationType, LateBindingApi.MSProjectApi.Enums.PjAccountType accountType, object showDialog, object email, object windowsAccount)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(serverURL, name, authenticationType, accountType, showDialog, email, windowsAccount);
			object returnItem = Invoker.MethodReturn(this, "CreateWebAccount", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ServerURL">object ServerURL</param>
		/// <param name="Name">object Name</param>
		/// <param name="AuthenticationType">LateBindingApi.MSProjectApi.Enums.PjAuthentication AuthenticationType</param>
		/// <param name="AccountType">LateBindingApi.MSProjectApi.Enums.PjAccountType AccountType</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CreateWebAccount(object serverURL, object name, LateBindingApi.MSProjectApi.Enums.PjAuthentication authenticationType, LateBindingApi.MSProjectApi.Enums.PjAccountType accountType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(serverURL, name, authenticationType, accountType);
			object returnItem = Invoker.MethodReturn(this, "CreateWebAccount", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="Action">LateBindingApi.MSProjectApi.Enums.PjDataTemplate Action</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="Overwrite">optional object Overwrite</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxDataTemplate(string name, LateBindingApi.MSProjectApi.Enums.PjDataTemplate action, object newName, object overwrite)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, action, newName, overwrite);
			object returnItem = Invoker.MethodReturn(this, "BoxDataTemplate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="Action">LateBindingApi.MSProjectApi.Enums.PjDataTemplate Action</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxDataTemplate(string name, LateBindingApi.MSProjectApi.Enums.PjDataTemplate action)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, action);
			object returnItem = Invoker.MethodReturn(this, "BoxDataTemplate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="CellRows">optional object CellRows</param>
		/// <param name="CellColumns">optional object CellColumns</param>
		/// <param name="CellWidth">optional object CellWidth</param>
		/// <param name="MergeCells">optional object MergeCells</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxCellLayout(string name, object cellRows, object cellColumns, object cellWidth, object mergeCells)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, cellRows, cellColumns, cellWidth, mergeCells);
			object returnItem = Invoker.MethodReturn(this, "BoxCellLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxCellLayout(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "BoxCellLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="Cell">LateBindingApi.MSProjectApi.Enums.PjCell Cell</param>
		/// <param name="FieldName">LateBindingApi.MSProjectApi.Enums.PjField FieldName</param>
		/// <param name="Font">object Font</param>
		/// <param name="FontSize">object FontSize</param>
		/// <param name="FontColor">LateBindingApi.MSProjectApi.Enums.PjColor FontColor</param>
		/// <param name="Bold">object Bold</param>
		/// <param name="Italic">object Italic</param>
		/// <param name="Underline">object Underline</param>
		/// <param name="HorizontalAlignment">LateBindingApi.MSProjectApi.Enums.PjAlignment HorizontalAlignment</param>
		/// <param name="VerticalAlignment">LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment</param>
		/// <param name="TextLineLimit">object TextLineLimit</param>
		/// <param name="ShowLabel">object ShowLabel</param>
		/// <param name="Label">object Label</param>
		/// <param name="DateFormat">LateBindingApi.MSProjectApi.Enums.PjDateFormat DateFormat</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxCellEdit(string name, LateBindingApi.MSProjectApi.Enums.PjCell cell, LateBindingApi.MSProjectApi.Enums.PjField fieldName, object font, object fontSize, LateBindingApi.MSProjectApi.Enums.PjColor fontColor, object bold, object italic, object underline, LateBindingApi.MSProjectApi.Enums.PjAlignment horizontalAlignment, LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment verticalAlignment, object textLineLimit, object showLabel, object label, LateBindingApi.MSProjectApi.Enums.PjDateFormat dateFormat)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel, label, dateFormat);
			object returnItem = Invoker.MethodReturn(this, "BoxCellEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="ShowDialog">optional object ShowDialog</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceWindowsAccount(object name, object showDialog)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, showDialog);
			object returnItem = Invoker.MethodReturn(this, "ResourceWindowsAccount", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceWindowsAccount()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceWindowsAccount", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Rows">optional object Rows</param>
		/// <param name="UseUniqueID">optional object UseUniqueID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetRowHeight(object unit, object rows, object useUniqueID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, rows, useUniqueID);
			object returnItem = Invoker.MethodReturn(this, "SetRowHeight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetRowHeight()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SetRowHeight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ComAddInsDialog()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ComAddInsDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MacroSecurity()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MacroSecurity", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LayoutSelectionNow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LayoutSelectionNow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlign Alignment</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxAlign(LateBindingApi.MSProjectApi.Enums.PjAlign alignment)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(alignment);
			object returnItem = Invoker.MethodReturn(this, "BoxAlign", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ConvertHangulToHanja()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ConvertHangulToHanja", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ServerURL">optional object ServerURL</param>
		/// <param name="EmbedProjectFile">optional object EmbedProjectFile</param>
		/// <param name="OnlyRegisterProject">optional object OnlyRegisterProject</param>
		/// <param name="WaitForCompletion">optional object WaitForCompletion</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UpdateProjectToWeb(object serverURL, object embedProjectFile, object onlyRegisterProject, object waitForCompletion)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(serverURL, embedProjectFile, onlyRegisterProject, waitForCompletion);
			object returnItem = Invoker.MethodReturn(this, "UpdateProjectToWeb", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool UpdateProjectToWeb()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "UpdateProjectToWeb", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Attribute">LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute Attribute</param>
		/// <param name="SummaryCalc">LateBindingApi.MSProjectApi.Enums.PjSummaryCalc SummaryCalc</param>
		/// <param name="GraphicalIndicators">optional object GraphicalIndicators</param>
		/// <param name="Required">optional object Required</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldProperties(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute attribute, LateBindingApi.MSProjectApi.Enums.PjSummaryCalc summaryCalc, object graphicalIndicators, object required)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, attribute, summaryCalc, graphicalIndicators, required);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldProperties", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Attribute">LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute Attribute</param>
		/// <param name="SummaryCalc">LateBindingApi.MSProjectApi.Enums.PjSummaryCalc SummaryCalc</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldProperties(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute attribute, LateBindingApi.MSProjectApi.Enums.PjSummaryCalc summaryCalc)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, attribute, summaryCalc);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldProperties", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Formula">optional object Formula</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldSetFormula(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object formula)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, formula);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldSetFormula", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldSetFormula(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldSetFormula", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Test">LateBindingApi.MSProjectApi.Enums.PjComparison Test</param>
		/// <param name="Value">string Value</param>
		/// <param name="IndicatorID">LateBindingApi.MSProjectApi.Enums.PjIndicator IndicatorID</param>
		/// <param name="CriteriaList">LateBindingApi.MSProjectApi.Enums.PjCriteriaList CriteriaList</param>
		/// <param name="Index">optional object Index</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldIndicatorAdd(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, LateBindingApi.MSProjectApi.Enums.PjComparison test, string value, LateBindingApi.MSProjectApi.Enums.PjIndicator indicatorID, LateBindingApi.MSProjectApi.Enums.PjCriteriaList criteriaList, object index)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, test, value, indicatorID, criteriaList, index);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldIndicatorAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Test">LateBindingApi.MSProjectApi.Enums.PjComparison Test</param>
		/// <param name="Value">string Value</param>
		/// <param name="IndicatorID">LateBindingApi.MSProjectApi.Enums.PjIndicator IndicatorID</param>
		/// <param name="CriteriaList">LateBindingApi.MSProjectApi.Enums.PjCriteriaList CriteriaList</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldIndicatorAdd(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, LateBindingApi.MSProjectApi.Enums.PjComparison test, string value, LateBindingApi.MSProjectApi.Enums.PjIndicator indicatorID, LateBindingApi.MSProjectApi.Enums.PjCriteriaList criteriaList)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, test, value, indicatorID, criteriaList);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldIndicatorAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="SummaryInheritsNonsummary">optional object SummaryInheritsNonsummary</param>
		/// <param name="ProjectInheritsSummary">optional object ProjectInheritsSummary</param>
		/// <param name="ShowToolTips">optional object ShowToolTips</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldIndicators(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object summaryInheritsNonsummary, object projectInheritsSummary, object showToolTips)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, summaryInheritsNonsummary, projectInheritsSummary, showToolTips);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldIndicators", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldIndicators(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldIndicators", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Index">Int16 Index</param>
		/// <param name="CriteriaList">LateBindingApi.MSProjectApi.Enums.PjCriteriaList CriteriaList</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldIndicatorDelete(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, Int16 index, LateBindingApi.MSProjectApi.Enums.PjCriteriaList criteriaList)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, index, criteriaList);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldIndicatorDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="ListDefault">object ListDefault</param>
		/// <param name="DefaultValue">object DefaultValue</param>
		/// <param name="RestrictToList">object RestrictToList</param>
		/// <param name="AppendNew">object AppendNew</param>
		/// <param name="PromptOnNew">object PromptOnNew</param>
		/// <param name="DisplayOrder">LateBindingApi.MSProjectApi.Enums.PjListOrder DisplayOrder</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldValueList(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object listDefault, object defaultValue, object restrictToList, object appendNew, object promptOnNew, LateBindingApi.MSProjectApi.Enums.PjListOrder displayOrder)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, listDefault, defaultValue, restrictToList, appendNew, promptOnNew, displayOrder);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldValueList", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Value">optional object Value</param>
		/// <param name="Description">optional object Description</param>
		/// <param name="Phonetic">optional object Phonetic</param>
		/// <param name="Index">optional object Index</param>
		/// <param name="FieldDefault">optional object FieldDefault</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldValueListAdd(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object value, object description, object phonetic, object index, object fieldDefault)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, value, description, phonetic, index, fieldDefault);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldValueListAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldValueListAdd(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldValueListAdd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Index">Int16 Index</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldValueListDelete(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, Int16 index)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, index);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldValueListDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="LayoutMode">LateBindingApi.MSProjectApi.Enums.PjLayoutMode LayoutMode</param>
		/// <param name="LayoutScheme">LateBindingApi.MSProjectApi.Enums.PjLayoutScheme LayoutScheme</param>
		/// <param name="SummaryPrecedence">object SummaryPrecedence</param>
		/// <param name="RowAlignment">LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment RowAlignment</param>
		/// <param name="ColumnAlignment">LateBindingApi.MSProjectApi.Enums.PjAlignment ColumnAlignment</param>
		/// <param name="RowSpacing">object RowSpacing</param>
		/// <param name="ColumnSpacing">object ColumnSpacing</param>
		/// <param name="RowHeight">LateBindingApi.MSProjectApi.Enums.PjRowColSize RowHeight</param>
		/// <param name="ColumnWidth">LateBindingApi.MSProjectApi.Enums.PjRowColSize ColumnWidth</param>
		/// <param name="AdjustForPageBreaks">object AdjustForPageBreaks</param>
		/// <param name="ShowSummaryTasks">object ShowSummaryTasks</param>
		/// <param name="ViewBackgroundColor">LateBindingApi.MSProjectApi.Enums.PjColor ViewBackgroundColor</param>
		/// <param name="ViewBackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern</param>
		/// <param name="ShowProgressMarks">optional object ShowProgressMarks</param>
		/// <param name="ShowPageBreaks">optional object ShowPageBreaks</param>
		/// <param name="ShowIDOnly">optional object ShowIDOnly</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxLayout(LateBindingApi.MSProjectApi.Enums.PjLayoutMode layoutMode, LateBindingApi.MSProjectApi.Enums.PjLayoutScheme layoutScheme, object summaryPrecedence, LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment rowAlignment, LateBindingApi.MSProjectApi.Enums.PjAlignment columnAlignment, object rowSpacing, object columnSpacing, LateBindingApi.MSProjectApi.Enums.PjRowColSize rowHeight, LateBindingApi.MSProjectApi.Enums.PjRowColSize columnWidth, object adjustForPageBreaks, object showSummaryTasks, LateBindingApi.MSProjectApi.Enums.PjColor viewBackgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern viewBackgroundPattern, object showProgressMarks, object showPageBreaks, object showIDOnly)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks, showPageBreaks, showIDOnly);
			object returnItem = Invoker.MethodReturn(this, "BoxLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="LayoutMode">LateBindingApi.MSProjectApi.Enums.PjLayoutMode LayoutMode</param>
		/// <param name="LayoutScheme">LateBindingApi.MSProjectApi.Enums.PjLayoutScheme LayoutScheme</param>
		/// <param name="SummaryPrecedence">object SummaryPrecedence</param>
		/// <param name="RowAlignment">LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment RowAlignment</param>
		/// <param name="ColumnAlignment">LateBindingApi.MSProjectApi.Enums.PjAlignment ColumnAlignment</param>
		/// <param name="RowSpacing">object RowSpacing</param>
		/// <param name="ColumnSpacing">object ColumnSpacing</param>
		/// <param name="RowHeight">LateBindingApi.MSProjectApi.Enums.PjRowColSize RowHeight</param>
		/// <param name="ColumnWidth">LateBindingApi.MSProjectApi.Enums.PjRowColSize ColumnWidth</param>
		/// <param name="AdjustForPageBreaks">object AdjustForPageBreaks</param>
		/// <param name="ShowSummaryTasks">object ShowSummaryTasks</param>
		/// <param name="ViewBackgroundColor">LateBindingApi.MSProjectApi.Enums.PjColor ViewBackgroundColor</param>
		/// <param name="ViewBackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxLayout(LateBindingApi.MSProjectApi.Enums.PjLayoutMode layoutMode, LateBindingApi.MSProjectApi.Enums.PjLayoutScheme layoutScheme, object summaryPrecedence, LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment rowAlignment, LateBindingApi.MSProjectApi.Enums.PjAlignment columnAlignment, object rowSpacing, object columnSpacing, LateBindingApi.MSProjectApi.Enums.PjRowColSize rowHeight, LateBindingApi.MSProjectApi.Enums.PjRowColSize columnWidth, object adjustForPageBreaks, object showSummaryTasks, LateBindingApi.MSProjectApi.Enums.PjColor viewBackgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern viewBackgroundPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern);
			object returnItem = Invoker.MethodReturn(this, "BoxLayout", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjLinkStyle Style</param>
		/// <param name="ShowArrows">object ShowArrows</param>
		/// <param name="ShowLabels">object ShowLabels</param>
		/// <param name="ColorMode">LateBindingApi.MSProjectApi.Enums.PjLinkColorMode ColorMode</param>
		/// <param name="CriticalColor">LateBindingApi.MSProjectApi.Enums.PjColor CriticalColor</param>
		/// <param name="NoncriticalColor">LateBindingApi.MSProjectApi.Enums.PjColor NoncriticalColor</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxLinks(LateBindingApi.MSProjectApi.Enums.PjLinkStyle style, object showArrows, object showLabels, LateBindingApi.MSProjectApi.Enums.PjLinkColorMode colorMode, LateBindingApi.MSProjectApi.Enums.PjColor criticalColor, LateBindingApi.MSProjectApi.Enums.PjColor noncriticalColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style, showArrows, showLabels, colorMode, criticalColor, noncriticalColor);
			object returnItem = Invoker.MethodReturn(this, "BoxLinks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SummaryTasksShow(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "SummaryTasksShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SummaryTasksShow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SummaryTasksShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxProgressMarksShow(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "BoxProgressMarksShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxProgressMarksShow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BoxProgressMarksShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxLinkLabelsShow(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "BoxLinkLabelsShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxLinkLabelsShow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BoxLinkLabelsShow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="StraightLinks">optional object StraightLinks</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxLinkStyleToggle(object straightLinks)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(straightLinks);
			object returnItem = Invoker.MethodReturn(this, "BoxLinkStyleToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxLinkStyleToggle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "BoxLinkStyleToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LayoutRelatedNow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LayoutRelatedNow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Action">LateBindingApi.MSProjectApi.Enums.PjBoxSet Action</param>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="XPosition">optional object XPosition</param>
		/// <param name="YPosition">optional object YPosition</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxSet(LateBindingApi.MSProjectApi.Enums.PjBoxSet action, object taskID, object xPosition, object yPosition, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(action, taskID, xPosition, yPosition, projectName);
			object returnItem = Invoker.MethodReturn(this, "BoxSet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Action">LateBindingApi.MSProjectApi.Enums.PjBoxSet Action</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool BoxSet(LateBindingApi.MSProjectApi.Enums.PjBoxSet action)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(action);
			object returnItem = Invoker.MethodReturn(this, "BoxSet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowColumns">optional object ShowColumns</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetSplitBar(object showColumns)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showColumns);
			object returnItem = Invoker.MethodReturn(this, "SetSplitBar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetSplitBar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SetSplitBar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TitleHeight">optional object TitleHeight</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetTitleRowHeight(object titleHeight)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(titleHeight);
			object returnItem = Invoker.MethodReturn(this, "SetTitleRowHeight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SetTitleRowHeight()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SetTitleRowHeight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="goalArea">Int16 goalArea</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool GoalAreaChange(Int16 goalArea)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(goalArea);
			object returnItem = Invoker.MethodReturn(this, "GoalAreaChange", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SidepaneToggle(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "SidepaneToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SidepaneToggle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SidepaneToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SearchFiles()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SearchFiles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ImportOutlookTasks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ImportOutlookTasks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowResourceAssignmentIndicators">optional object ShowResourceAssignmentIndicators</param>
		/// <param name="ShowEditToStartFinishDates">optional object ShowEditToStartFinishDates</param>
		/// <param name="ShowEditsToWorkUnitsDurationIndicators">optional object ShowEditsToWorkUnitsDurationIndicators</param>
		/// <param name="ShowDeletionInNameColumn">optional object ShowDeletionInNameColumn</param>
		/// <param name="DisplayProjectGuide">optional object DisplayProjectGuide</param>
		/// <param name="ProjectGuideUseDefaultFunctionalLayoutPage">optional object ProjectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="ProjectGuideFunctionalLayoutPage">optional object ProjectGuideFunctionalLayoutPage</param>
		/// <param name="ProjectGuideUseDefaultContent">optional object ProjectGuideUseDefaultContent</param>
		/// <param name="ProjectGuideContent">optional object ProjectGuideContent</param>
		/// <param name="SetAsDefaults">optional object SetAsDefaults</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent, object projectGuideContent, object setAsDefaults)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent, projectGuideContent, setAsDefaults);
			object returnItem = Invoker.MethodReturn(this, "OptionsInterface", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsInterface()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsInterface", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ID">Int16 ID</param>
		/// <param name="IsGoalArea">optional object IsGoalArea</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SidepaneTaskChange(Int16 iD, object isGoalArea)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(iD, isGoalArea);
			object returnItem = Invoker.MethodReturn(this, "SidepaneTaskChange", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ID">Int16 ID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SidepaneTaskChange(Int16 iD)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(iD);
			object returnItem = Invoker.MethodReturn(this, "SidepaneTaskChange", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ServerURL">optional object ServerURL</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ImportResourceList(object serverURL)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(serverURL);
			object returnItem = Invoker.MethodReturn(this, "ImportResourceList", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ImportResourceList()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ImportResourceList", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectList">object ProjectList</param>
		/// <param name="PoolOption">LateBindingApi.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption</param>
		/// <param name="RBSorResourceList">optional object RBSorResourceList</param>
		/// <param name="FreezeHorizonDate">optional object FreezeHorizonDate</param>
		/// <param name="UpdateProjects">optional object UpdateProjects</param>
		/// <param name="SaveReport">optional object SaveReport</param>
		/// <param name="Path">optional object Path</param>
		/// <param name="AssignProposedResources">optional object AssignProposedResources</param>
		/// <param name="LevelProposedBookings">optional object LevelProposedBookings</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResSubstitutionWizard(object projectList, LateBindingApi.MSProjectApi.Enums.PjResSubstitutionPoolOption poolOption, object rBSorResourceList, object freezeHorizonDate, object updateProjects, object saveReport, object path, object assignProposedResources, object levelProposedBookings)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectList, poolOption, rBSorResourceList, freezeHorizonDate, updateProjects, saveReport, path, assignProposedResources, levelProposedBookings);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResSubstitutionWizard", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectList">object ProjectList</param>
		/// <param name="PoolOption">LateBindingApi.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResSubstitutionWizard(object projectList, LateBindingApi.MSProjectApi.Enums.PjResSubstitutionPoolOption poolOption)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectList, poolOption);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResSubstitutionWizard", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="EUID">object EUID</param>
		/// <param name="OpenType">LateBindingApi.MSProjectApi.Enums.PjCheckOutType OpenType</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResourcesOpen(object eUID, LateBindingApi.MSProjectApi.Enums.PjCheckOutType openType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(eUID, openType);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResourcesOpen", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="LocalRUIDs">optional object LocalRUIDs</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResourcesImport(object localRUIDs)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(localRUIDs);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResourcesImport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResourcesImport()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResourcesImport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="EUID">optional object EUID</param>
		/// <param name="RUID">optional object RUID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResourceGet(object eUID, object rUID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(eUID, rUID);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResourceGet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResourceGet()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResourceGet", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseProjectImportWizard(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseProjectImportWizard", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseProjectImportWizard()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseProjectImportWizard", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseTeamBuilder()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseTeamBuilder", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="LinkFrom">Int32 LinkFrom</param>
		/// <param name="LinkTo">optional object LinkTo</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseCustomOutlineCodeShare(Int32 linkFrom, object linkTo)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(linkFrom, linkTo);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseCustomOutlineCodeShare", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="LinkFrom">Int32 LinkFrom</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseCustomOutlineCodeShare(Int32 linkFrom)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(linkFrom);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseCustomOutlineCodeShare", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseCustomizeFields()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseCustomizeFields", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseGlobalCheckOut()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseGlobalCheckOut", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseProjectProfiles()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseProjectProfiles", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowResourceListOptions">object ShowResourceListOptions</param>
		/// <param name="ResourceListFields">LateBindingApi.MSProjectApi.Enums.PjAssignResourcesListFields ResourceListFields</param>
		/// <param name="UseNamedFilter">optional object UseNamedFilter</param>
		/// <param name="FilterName">optional object FilterName</param>
		/// <param name="UseAvailableToWorkFilter">optional object UseAvailableToWorkFilter</param>
		/// <param name="AvailableToWork">optional object AvailableToWork</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceAssignmentDialog(object showResourceListOptions, LateBindingApi.MSProjectApi.Enums.PjAssignResourcesListFields resourceListFields, object useNamedFilter, object filterName, object useAvailableToWorkFilter, object availableToWork)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showResourceListOptions, resourceListFields, useNamedFilter, filterName, useAvailableToWorkFilter, availableToWork);
			object returnItem = Invoker.MethodReturn(this, "ResourceAssignmentDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowResourceListOptions">object ShowResourceListOptions</param>
		/// <param name="ResourceListFields">LateBindingApi.MSProjectApi.Enums.PjAssignResourcesListFields ResourceListFields</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceAssignmentDialog(object showResourceListOptions, LateBindingApi.MSProjectApi.Enums.PjAssignResourcesListFields resourceListFields)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showResourceListOptions, resourceListFields);
			object returnItem = Invoker.MethodReturn(this, "ResourceAssignmentDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TargetPage">string TargetPage</param>
		/// <param name="WrapperPage">optional object WrapperPage</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LoadWebBrowserControl(string targetPage, object wrapperPage)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(targetPage, wrapperPage);
			object returnItem = Invoker.MethodReturn(this, "LoadWebBrowserControl", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TargetPage">string TargetPage</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LoadWebBrowserControl(string targetPage)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(targetPage);
			object returnItem = Invoker.MethodReturn(this, "LoadWebBrowserControl", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileSaveOffline(LateBindingApi.MSProjectApi.Enums.PjSaveType save)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save);
			object returnItem = Invoker.MethodReturn(this, "FileSaveOffline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpReference()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpReference", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool HelpWhatsNew()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HelpWhatsNew", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool StopWebBrowserControlNavigation()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "StopWebBrowserControlNavigation", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="BackupFileName">optional object BackupFileName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseGlobalBackup(object backupFileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(backupFileName);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseGlobalBackup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseGlobalBackup()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseGlobalBackup", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProfileName">optional object ProfileName</param>
		/// <param name="RestoreFileName">optional object RestoreFileName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseGlobalRestore(object profileName, object restoreFileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(profileName, restoreFileName);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseGlobalRestore", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseGlobalRestore()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseGlobalRestore", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldName">LateBindingApi.MSProjectApi.Enums.PjSpellingField FieldName</param>
		/// <param name="EnableSpellCheck">optional object EnableSpellCheck</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SpellCheckField(LateBindingApi.MSProjectApi.Enums.PjSpellingField fieldName, object enableSpellCheck)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldName, enableSpellCheck);
			object returnItem = Invoker.MethodReturn(this, "SpellCheckField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldName">LateBindingApi.MSProjectApi.Enums.PjSpellingField FieldName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SpellCheckField(LateBindingApi.MSProjectApi.Enums.PjSpellingField fieldName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldName);
			object returnItem = Invoker.MethodReturn(this, "SpellCheckField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool AddResourcesFromProjectServer()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AddResourcesFromProjectServer", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResetTrackingMethod()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResetTrackingMethod", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ServiceOptionsDialog()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ServiceOptionsDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseProjectDelete(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseProjectDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseProjectDelete()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseProjectDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="fSaveChanges">optional object fSaveChanges</param>
		/// <param name="Comments">optional object Comments</param>
		/// <param name="fMakePublic">optional object fMakePublic</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CheckIn(object fSaveChanges, object comments, object fMakePublic)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fSaveChanges, comments, fMakePublic);
			object returnItem = Invoker.MethodReturn(this, "CheckIn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CheckIn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CheckIn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CheckOut()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CheckOut", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DocumentLibraryVersionsDialog()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DocumentLibraryVersionsDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DisplaySharedWorkspace()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DisplaySharedWorkspace", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseSynchActuals(object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseSynchActuals", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseSynchActuals()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseSynchActuals", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="RemoveFileProperties">optional object RemoveFileProperties</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSecurity(object removeFileProperties)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(removeFileProperties);
			object returnItem = Invoker.MethodReturn(this, "OptionsSecurity", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSecurity()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsSecurity", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SaveSheetSelection()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SaveSheetSelection", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool RestoreSheetSelection()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "RestoreSheetSelection", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Field">Int32 Field</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldDelete(Int32 field)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldDelete", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CommitmentDate">optional object CommitmentDate</param>
		/// <param name="CommitmentGuid">optional object CommitmentGuid</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ImportCommitment(object commitmentDate, object commitmentGuid)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(commitmentDate, commitmentGuid);
			object returnItem = Invoker.MethodReturn(this, "ImportCommitment", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ImportCommitment()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ImportCommitment", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SummaryResourceAssignmentsRefresh()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SummaryResourceAssignmentsRefresh", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="UniqueID">optional object UniqueID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditEnterpriseCalendar(object uniqueID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(uniqueID);
			object returnItem = Invoker.MethodReturn(this, "EditEnterpriseCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditEnterpriseCalendar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditEnterpriseCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CreateEnterpriseCalendar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CreateEnterpriseCalendar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TargetPage">string TargetPage</param>
		/// <param name="WrapperPage">optional object WrapperPage</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LoadWebPaneControl(string targetPage, object wrapperPage)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(targetPage, wrapperPage);
			object returnItem = Invoker.MethodReturn(this, "LoadWebPaneControl", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TargetPage">string TargetPage</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LoadWebPaneControl(string targetPage)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(targetPage);
			object returnItem = Invoker.MethodReturn(this, "LoadWebPaneControl", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ResourceMappingDialog()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceMappingDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="OldName">optional object OldName</param>
		/// <param name="NewName">optional object NewName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MakeLocalCalendarEnterprise(object oldName, object newName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(oldName, newName);
			object returnItem = Invoker.MethodReturn(this, "MakeLocalCalendarEnterprise", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MakeLocalCalendarEnterprise()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MakeLocalCalendarEnterprise", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskCustomFields">optional object TaskCustomFields</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldMappingDialog(object taskCustomFields)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskCustomFields);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldMappingDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldMappingDialog()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CustomFieldMappingDialog", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TaskID">optional object TaskID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CheckTaskErrors(object taskID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID);
			object returnItem = Invoker.MethodReturn(this, "CheckTaskErrors", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CheckTaskErrors()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CheckTaskErrors", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="LocalRUID">optional object LocalRUID</param>
		/// <param name="ResetImport">optional object ResetImport</param>
		/// <param name="CheckEnterprise">optional object CheckEnterprise</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CheckResourceErrors(object localRUID, object resetImport, object checkEnterprise)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(localRUID, resetImport, checkEnterprise);
			object returnItem = Invoker.MethodReturn(this, "CheckResourceErrors", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CheckResourceErrors()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CheckResourceErrors", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EditRedo()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EditRedo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Republish">optional object Republish</param>
		/// <param name="WssUrl">optional object WssUrl</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Publish(object republish, object wssUrl)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(republish, wssUrl);
			object returnItem = Invoker.MethodReturn(this, "Publish", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Publish()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Publish", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">optional object FieldID</param>
		/// <param name="FieldName">optional object FieldName</param>
		/// <param name="LookupTableName">optional object LookupTableName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MakeFieldEnterprise(object fieldID, object fieldName, object lookupTableName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, fieldName, lookupTableName);
			object returnItem = Invoker.MethodReturn(this, "MakeFieldEnterprise", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool MakeFieldEnterprise()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MakeFieldEnterprise", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FileName">optional object FileName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SaveForSharing(object fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "SaveForSharing", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool SaveForSharing()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SaveForSharing", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CacheSettings()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CacheSettings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CleanupCache()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CleanupCache", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CacheStatus()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CacheStatus", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="fOffline">optional object fOffline</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WorkOffline(object fOffline)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fOffline);
			object returnItem = Invoker.MethodReturn(this, "WorkOffline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool WorkOffline()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WorkOffline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TaskDrivers()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskDrivers", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ToggleChangeHighlighting()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleChangeHighlighting", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="PjVisualReportsTab">LateBindingApi.MSProjectApi.Enums.PjVisualReportsTab PjVisualReportsTab</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool VisualReports(LateBindingApi.MSProjectApi.Enums.PjVisualReportsTab pjVisualReportsTab)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(pjVisualReportsTab);
			object returnItem = Invoker.MethodReturn(this, "VisualReports", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="strNamePath">object strNamePath</param>
		/// <param name="PjVisualReportsDataLevel">LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool VisualReportsSaveDatabase(object strNamePath, LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel pjVisualReportsDataLevel)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(strNamePath, pjVisualReportsDataLevel);
			object returnItem = Invoker.MethodReturn(this, "VisualReportsSaveDatabase", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="strNamePath">object strNamePath</param>
		/// <param name="PjVisualReportsCubeType">LateBindingApi.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType</param>
		/// <param name="ReportAllFields">object ReportAllFields</param>
		/// <param name="PjVisualReportsDataLevel">LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool VisualReportsSaveCube(object strNamePath, LateBindingApi.MSProjectApi.Enums.PjVisualReportsCubeType pjVisualReportsCubeType, object reportAllFields, LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel pjVisualReportsDataLevel)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(strNamePath, pjVisualReportsCubeType, reportAllFields, pjVisualReportsDataLevel);
			object returnItem = Invoker.MethodReturn(this, "VisualReportsSaveCube", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="PjVisualReportsTemplateType">LateBindingApi.MSProjectApi.Enums.PjVisualReportsTemplateType PjVisualReportsTemplateType</param>
		/// <param name="PjVisualReportsCubeType">LateBindingApi.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType</param>
		/// <param name="ReportAllFields">object ReportAllFields</param>
		/// <param name="PjVisualReportsDataLevel">LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool VisualReportsNewTemplate(LateBindingApi.MSProjectApi.Enums.PjVisualReportsTemplateType pjVisualReportsTemplateType, LateBindingApi.MSProjectApi.Enums.PjVisualReportsCubeType pjVisualReportsCubeType, object reportAllFields, LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel pjVisualReportsDataLevel)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(pjVisualReportsTemplateType, pjVisualReportsCubeType, reportAllFields, pjVisualReportsDataLevel);
			object returnItem = Invoker.MethodReturn(this, "VisualReportsNewTemplate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="strVisualReportTemplateFile">object strVisualReportTemplateFile</param>
		/// <param name="PjVisualReportsDataLevel">LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool VisualReportsView(object strVisualReportTemplateFile, LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel pjVisualReportsDataLevel)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(strVisualReportTemplateFile, pjVisualReportsDataLevel);
			object returnItem = Invoker.MethodReturn(this, "VisualReportsView", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CommitmentsPane()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CommitmentsPane", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool DependenciesPane()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DependenciesPane", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="strVisualReportTemplateFile">object strVisualReportTemplateFile</param>
		/// <param name="PjVisualReportsDataLevel">LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool VisualReportsEdit(object strVisualReportTemplateFile, LateBindingApi.MSProjectApi.Enums.PjVisualReportsDataLevel pjVisualReportsDataLevel)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(strVisualReportTemplateFile, pjVisualReportsDataLevel);
			object returnItem = Invoker.MethodReturn(this, "VisualReportsEdit", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="ReadOnly">object ReadOnly</param>
		/// <param name="Merge">object Merge</param>
		/// <param name="TaskInformation">object TaskInformation</param>
		/// <param name="Table">object Table</param>
		/// <param name="Sheet">object Sheet</param>
		/// <param name="NoAuto">object NoAuto</param>
		/// <param name="UserID">object UserID</param>
		/// <param name="DatabasePassWord">object DatabasePassWord</param>
		/// <param name="FormatID">object FormatID</param>
		/// <param name="Map">object Map</param>
		/// <param name="openPool">LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool</param>
		/// <param name="Password">optional object Password</param>
		/// <param name="WriteResPassword">optional object WriteResPassword</param>
		/// <param name="IgnoreReadOnlyRecommended">optional object IgnoreReadOnlyRecommended</param>
		/// <param name="XMLName">optional object XMLName</param>
		/// <param name="DoNotLoadFromEnterprise">optional object DoNotLoadFromEnterprise</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool, object password, object writeResPassword, object ignoreReadOnlyRecommended, object xMLName, object doNotLoadFromEnterprise)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword, ignoreReadOnlyRecommended, xMLName, doNotLoadFromEnterprise);
			object returnItem = Invoker.MethodReturn(this, "FileOpenEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="ReadOnly">object ReadOnly</param>
		/// <param name="Merge">object Merge</param>
		/// <param name="TaskInformation">object TaskInformation</param>
		/// <param name="Table">object Table</param>
		/// <param name="Sheet">object Sheet</param>
		/// <param name="NoAuto">object NoAuto</param>
		/// <param name="UserID">object UserID</param>
		/// <param name="DatabasePassWord">object DatabasePassWord</param>
		/// <param name="FormatID">object FormatID</param>
		/// <param name="Map">object Map</param>
		/// <param name="openPool">LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, LateBindingApi.MSProjectApi.Enums.PjPoolOpen openPool)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool);
			object returnItem = Invoker.MethodReturn(this, "FileOpenEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		/// <param name="NoAuto">optional object NoAuto</param>
		/// <param name="CheckIn">optional object CheckIn</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileCloseEx(LateBindingApi.MSProjectApi.Enums.PjSaveType save, object noAuto, object checkIn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save, noAuto, checkIn);
			object returnItem = Invoker.MethodReturn(this, "FileCloseEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileCloseEx(LateBindingApi.MSProjectApi.Enums.PjSaveType save)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save);
			object returnItem = Invoker.MethodReturn(this, "FileCloseEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		/// <param name="CheckIn">optional object CheckIn</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileCloseAllEx(LateBindingApi.MSProjectApi.Enums.PjSaveType save, object checkIn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save, checkIn);
			object returnItem = Invoker.MethodReturn(this, "FileCloseAllEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Save">LateBindingApi.MSProjectApi.Enums.PjSaveType Save</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FileCloseAllEx(LateBindingApi.MSProjectApi.Enums.PjSaveType save)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(save);
			object returnItem = Invoker.MethodReturn(this, "FileCloseAllEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="PlanningWizard">optional object PlanningWizard</param>
		/// <param name="WizardUsage">optional object WizardUsage</param>
		/// <param name="WizardErrors">optional object WizardErrors</param>
		/// <param name="WizardScheduling">optional object WizardScheduling</param>
		/// <param name="ShowTipOfDay">optional object ShowTipOfDay</param>
		/// <param name="AutoAddResources">optional object AutoAddResources</param>
		/// <param name="StandardRate">optional object StandardRate</param>
		/// <param name="OvertimeRate">optional object OvertimeRate</param>
		/// <param name="LastFile">optional object LastFile</param>
		/// <param name="SummaryInfo">optional object SummaryInfo</param>
		/// <param name="UserName">optional object UserName</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="ShowWelcome">optional object ShowWelcome</param>
		/// <param name="AutoFilter">optional object AutoFilter</param>
		/// <param name="MacroVirusProtection">optional object MacroVirusProtection</param>
		/// <param name="DisplayRecentFiles">optional object DisplayRecentFiles</param>
		/// <param name="RecentFilesMaximum">optional object RecentFilesMaximum</param>
		/// <param name="FontConversion">optional object FontConversion</param>
		/// <param name="ShowStartupWorkpane">optional object ShowStartupWorkpane</param>
		/// <param name="MaxUndoRecords">optional object MaxUndoRecords</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum, object fontConversion, object showStartupWorkpane, object maxUndoRecords)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum, fontConversion, showStartupWorkpane, maxUndoRecords);
			object returnItem = Invoker.MethodReturn(this, "OptionsGeneralEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsGeneralEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsGeneralEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="DefaultView">optional object DefaultView</param>
		/// <param name="DateFormat">optional object DateFormat</param>
		/// <param name="ProjectSummary">optional object ProjectSummary</param>
		/// <param name="DisplayStatusBar">optional object DisplayStatusBar</param>
		/// <param name="DisplayEntryBar">optional object DisplayEntryBar</param>
		/// <param name="DisplayScrollBars">optional object DisplayScrollBars</param>
		/// <param name="CurrencySymbol">optional object CurrencySymbol</param>
		/// <param name="SymbolPlacement">optional object SymbolPlacement</param>
		/// <param name="CurrencyDigits">optional object CurrencyDigits</param>
		/// <param name="ProjectCurrency">optional object ProjectCurrency</param>
		/// <param name="DisplayOutlineNumber">optional object DisplayOutlineNumber</param>
		/// <param name="DisplayOutlineSymbols">optional object DisplayOutlineSymbols</param>
		/// <param name="DisplayNameIndent">optional object DisplayNameIndent</param>
		/// <param name="DisplaySummaryTasks">optional object DisplaySummaryTasks</param>
		/// <param name="DisplayOLEIndicator">optional object DisplayOLEIndicator</param>
		/// <param name="DisplayExternalSuccessors">optional object DisplayExternalSuccessors</param>
		/// <param name="DisplayExternalPredecessors">optional object DisplayExternalPredecessors</param>
		/// <param name="CrossProjectLinksInfo">optional object CrossProjectLinksInfo</param>
		/// <param name="AcceptNewExternalData">optional object AcceptNewExternalData</param>
		/// <param name="DisplayWindowsInTaskbar">optional object DisplayWindowsInTaskbar</param>
		/// <param name="DisplayScreentips">optional object DisplayScreentips</param>
		/// <param name="CalendarType">optional object CalendarType</param>
		/// <param name="Use3DLook">optional object Use3DLook</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar, object displayScreentips, object calendarType, object use3DLook)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar, displayScreentips, calendarType, use3DLook);
			object returnItem = Invoker.MethodReturn(this, "OptionsViewEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsViewEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsViewEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CalendarName">optional object CalendarName</param>
		/// <param name="Locked">optional object Locked</param>
		/// <param name="SelectedDate">optional object SelectedDate</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ChangeWorkingTimeEx(object calendarName, object locked, object selectedDate, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(calendarName, locked, selectedDate, projectName);
			object returnItem = Invoker.MethodReturn(this, "ChangeWorkingTimeEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool ChangeWorkingTimeEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ChangeWorkingTimeEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Item">optional object Item</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="CellColor">optional object CellColor</param>
		/// <param name="Pattern">optional object Pattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TextStylesEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, font, size, bold, italic, underline, color, cellColor, pattern);
			object returnItem = Invoker.MethodReturn(this, "TextStylesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool TextStylesEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TextStylesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="Reset">optional object Reset</param>
		/// <param name="CellColor">optional object CellColor</param>
		/// <param name="Pattern">optional object Pattern</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontEx(object name, object size, object bold, object italic, object underline, object color, object reset, object cellColor, object pattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, size, bold, italic, underline, color, reset, cellColor, pattern);
			object returnItem = Invoker.MethodReturn(this, "FontEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool FontEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FontEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="MonthTitle">optional object MonthTitle</param>
		/// <param name="WeekTitle">optional object WeekTitle</param>
		/// <param name="DayTitle">optional object DayTitle</param>
		/// <param name="ShowPreview">optional object ShowPreview</param>
		/// <param name="DaysPerWeek">optional object DaysPerWeek</param>
		/// <param name="ShowTitleBeginningEndDates">optional object ShowTitleBeginningEndDates</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarWeekHeadingsEx(object monthTitle, object weekTitle, object dayTitle, object showPreview, object daysPerWeek, object showTitleBeginningEndDates)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(monthTitle, weekTitle, dayTitle, showPreview, daysPerWeek, showTitleBeginningEndDates);
			object returnItem = Invoker.MethodReturn(this, "CalendarWeekHeadingsEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CalendarWeekHeadingsEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarWeekHeadingsEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Level">object Level</param>
		/// <param name="Sequence">LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence</param>
		/// <param name="Length">optional object Length</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="OnlyLookUpTableCodes">optional object OnlyLookUpTableCodes</param>
		/// <param name="OnlyCompleteCodes">optional object OnlyCompleteCodes</param>
		/// <param name="LookupTableLink">optional object LookupTableLink</param>
		/// <param name="OnlyLeaves">optional object OnlyLeaves</param>
		/// <param name="MatchGeneric">optional object MatchGeneric</param>
		/// <param name="RequiredCode">optional object RequiredCode</param>
		/// <param name="LookupDefault">optional object LookupDefault</param>
		/// <param name="DefaultValue">optional object DefaultValue</param>
		/// <param name="SortOrder">optional object SortOrder</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomOutlineCodeEditEx(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object level, LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric, object requiredCode, object lookupDefault, object defaultValue, object sortOrder)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric, requiredCode, lookupDefault, defaultValue, sortOrder);
			object returnItem = Invoker.MethodReturn(this, "CustomOutlineCodeEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Level">object Level</param>
		/// <param name="Sequence">LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomOutlineCodeEditEx(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object level, LateBindingApi.MSProjectApi.Enums.PjCustomOutlineCodeSequence sequence)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, level, sequence);
			object returnItem = Invoker.MethodReturn(this, "CustomOutlineCodeEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Level">optional object Level</param>
		/// <param name="Code">optional object Code</param>
		/// <param name="Description">optional object Description</param>
		/// <param name="Phonetic">optional object Phonetic</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LookUpTableAddEx(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, object level, object code, object description, object phonetic)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, level, code, description, phonetic);
			object returnItem = Invoker.MethodReturn(this, "LookUpTableAddEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LookUpTableAddEx(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID);
			object returnItem = Invoker.MethodReturn(this, "LookUpTableAddEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Attribute">LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute Attribute</param>
		/// <param name="SummaryCalc">LateBindingApi.MSProjectApi.Enums.PjSummaryCalc SummaryCalc</param>
		/// <param name="GraphicalIndicators">optional object GraphicalIndicators</param>
		/// <param name="Required">optional object Required</param>
		/// <param name="AutomaticallyRolldownToAssn">optional object AutomaticallyRolldownToAssn</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldPropertiesEx(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute attribute, LateBindingApi.MSProjectApi.Enums.PjSummaryCalc summaryCalc, object graphicalIndicators, object required, object automaticallyRolldownToAssn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, attribute, summaryCalc, graphicalIndicators, required, automaticallyRolldownToAssn);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldPropertiesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjCustomField FieldID</param>
		/// <param name="Attribute">LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute Attribute</param>
		/// <param name="SummaryCalc">LateBindingApi.MSProjectApi.Enums.PjSummaryCalc SummaryCalc</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool CustomFieldPropertiesEx(LateBindingApi.MSProjectApi.Enums.PjCustomField fieldID, LateBindingApi.MSProjectApi.Enums.PjCustomFieldAttribute attribute, LateBindingApi.MSProjectApi.Enums.PjSummaryCalc summaryCalc)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, attribute, summaryCalc);
			object returnItem = Invoker.MethodReturn(this, "CustomFieldPropertiesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ShowResourceAssignmentIndicators">optional object ShowResourceAssignmentIndicators</param>
		/// <param name="ShowEditToStartFinishDates">optional object ShowEditToStartFinishDates</param>
		/// <param name="ShowEditsToWorkUnitsDurationIndicators">optional object ShowEditsToWorkUnitsDurationIndicators</param>
		/// <param name="ShowDeletionInNameColumn">optional object ShowDeletionInNameColumn</param>
		/// <param name="DisplayProjectGuide">optional object DisplayProjectGuide</param>
		/// <param name="ProjectGuideUseDefaultFunctionalLayoutPage">optional object ProjectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="ProjectGuideFunctionalLayoutPage">optional object ProjectGuideFunctionalLayoutPage</param>
		/// <param name="ProjectGuideUseDefaultContent">optional object ProjectGuideUseDefaultContent</param>
		/// <param name="ProjectGuideContent">optional object ProjectGuideContent</param>
		/// <param name="SetAsDefaults">optional object SetAsDefaults</param>
		/// <param name="UseOMIDs">optional object UseOMIDs</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent, object projectGuideContent, object setAsDefaults, object useOMIDs)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent, projectGuideContent, setAsDefaults, useOMIDs);
			object returnItem = Invoker.MethodReturn(this, "OptionsInterfaceEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsInterfaceEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsInterfaceEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="LocalRUIDs">optional object LocalRUIDs</param>
		/// <param name="UseImportColumn">optional object UseImportColumn</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResourcesImportEx(object localRUIDs, object useImportColumn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(localRUIDs, useImportColumn);
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResourcesImportEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool EnterpriseResourcesImportEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EnterpriseResourcesImportEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TargetPage">string TargetPage</param>
		/// <param name="WrapperPage">optional object WrapperPage</param>
		/// <param name="FunctionalityName">optional object FunctionalityName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LoadWebBrowserControlEx(string targetPage, object wrapperPage, object functionalityName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(targetPage, wrapperPage, functionalityName);
			object returnItem = Invoker.MethodReturn(this, "LoadWebBrowserControlEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="TargetPage">string TargetPage</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool LoadWebBrowserControlEx(string targetPage)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(targetPage);
			object returnItem = Invoker.MethodReturn(this, "LoadWebBrowserControlEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="RemoveFileProperties">optional object RemoveFileProperties</param>
		/// <param name="TrustWSS">optional object TrustWSS</param>
		/// <param name="LegacyFileFormats">optional object LegacyFileFormats</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSecurityEx(object removeFileProperties, object trustWSS, object legacyFileFormats)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(removeFileProperties, trustWSS, legacyFileFormats);
			object returnItem = Invoker.MethodReturn(this, "OptionsSecurityEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool OptionsSecurityEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsSecurityEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool IsUndoingOrRedoing()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "IsUndoingOrRedoing", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="propertyID">Int32 propertyID</param>
		/// <param name="strFormula">string strFormula</param>
		/// <param name="Localized">bool Localized</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string ValidateEnterpriseFormula(Int32 propertyID, string strFormula, bool localized)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(propertyID, strFormula, localized);
			object returnItem = Invoker.MethodReturn(this, "ValidateEnterpriseFormula", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void UndoClear()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "UndoClear", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="HowManyUndos">Int32 HowManyUndos</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Undo(Int32 howManyUndos)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(howManyUndos);
			object returnItem = Invoker.MethodReturn(this, "Undo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="HowManyRedos">Int32 HowManyRedos</param>
		[SupportByLibrary("MSProject", 12,14)]
		public bool Redo(Int32 howManyRedos)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(howManyRedos);
			object returnItem = Invoker.MethodReturn(this, "Redo", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Label">string Label</param>
		/// <param name="Guid">optional object Guid</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void OpenUndoTransaction(string label, object guid)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(label, guid);
			Invoker.Method(this, "OpenUndoTransaction", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="Label">string Label</param>
		[SupportByLibrary("MSProject", 12,14)]
		public void OpenUndoTransaction(string label)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(label);
			Invoker.Method(this, "OpenUndoTransaction", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void CloseUndoTransaction()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "CloseUndoTransaction", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="propertyID">Int32 propertyID</param>
		/// <param name="strGraphicalIndicators">string strGraphicalIndicators</param>
		/// <param name="Localized">bool Localized</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string ValidateGraphicalIndicators(Int32 propertyID, string strGraphicalIndicators, bool localized)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(propertyID, strGraphicalIndicators, localized);
			object returnItem = Invoker.MethodReturn(this, "ValidateGraphicalIndicators", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 GetUndoListCount()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GetUndoListCount", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 GetRedoListCount()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GetRedoListCount", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ItemIndex">Int32 ItemIndex</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string GetUndoListItem(Int32 itemIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(itemIndex);
			object returnItem = Invoker.MethodReturn(this, "GetUndoListItem", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="ItemIndex">Int32 ItemIndex</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string GetRedoListItem(Int32 itemIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(itemIndex);
			object returnItem = Invoker.MethodReturn(this, "GetRedoListItem", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="x">Int32 x</param>
		/// <param name="y">Int32 y</param>
		[SupportByLibrary("MSProject", 12,14)]
		public LateBindingApi.MSProjectApi.Cell GetCellInfo(Int32 x, Int32 y)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(x, y);
			object returnItem = Invoker.MethodReturn(this, "GetCellInfo", paramsArray);
			LateBindingApi.MSProjectApi.Cell newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,LateBindingApi.MSProjectApi.Cell.LateBindingApiWrapperType) as LateBindingApi.MSProjectApi.Cell;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public string GetProjectServerSettingsEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GetProjectServerSettingsEx", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public void AfterUnloadWebBrowserControl()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "AfterUnloadWebBrowserControl", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool IsOffline()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "IsOffline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		[SupportByLibrary("MSProject", 12,14)]
		public bool IsReducedFunctionalityMode()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "IsReducedFunctionalityMode", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="elementType">LateBindingApi.MSProjectApi.Enums.PjThemeElement elementType</param>
		[SupportByLibrary("MSProject", 12,14)]
		public string GetThemedColor(LateBindingApi.MSProjectApi.Enums.PjThemeElement elementType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(elementType);
			object returnItem = Invoker.MethodReturn(this, "GetThemedColor", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 12, 14
		/// </summary>
		/// <param name="CommandName">string CommandName</param>
		[SupportByLibrary("MSProject", 12,14)]
		public Int32 IsCommandEnabled(string commandName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(commandName);
			object returnItem = Invoker.MethodReturn(this, "IsCommandEnabled", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="strURL">string strURL</param>
		/// <param name="strListGuid">string strListGuid</param>
		/// <param name="strListName">string strListName</param>
		/// <param name="bstrViewGUID">string bstrViewGUID</param>
		/// <param name="bstrViewName">string bstrViewName</param>
		/// <param name="iListID">Int32 iListID</param>
		[SupportByLibrary("MSProject", 14)]
		public string LoadTasksFromServer(string strURL, string strListGuid, string strListName, string bstrViewGUID, string bstrViewName, Int32 iListID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(strURL, strListGuid, strListName, bstrViewGUID, bstrViewName, iListID);
			object returnItem = Invoker.MethodReturn(this, "LoadTasksFromServer", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Start">object Start</param>
		/// <param name="Finish">object Finish</param>
		[SupportByLibrary("MSProject", 14)]
		public void PanZoomZoomTo(object start, object finish)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(start, finish);
			Invoker.Method(this, "PanZoomZoomTo", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Start">object Start</param>
		[SupportByLibrary("MSProject", 14)]
		public void PanZoomPanTo(object start)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(start);
			Invoker.Method(this, "PanZoomPanTo", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="ApplyTo">optional object ApplyTo</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ViewCopy(object name, object applyTo)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, applyTo);
			object returnItem = Invoker.MethodReturn(this, "ViewCopy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ViewCopy()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewCopy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ViewReset()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewReset", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TableCopy(object name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			object returnItem = Invoker.MethodReturn(this, "TableCopy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TableCopy()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TableCopy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TableReset()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TableReset", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="OnOff">optional object OnOff</param>
		[SupportByLibrary("MSProject", 14)]
		public bool AutoSaveToGlobal(object onOff)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(onOff);
			object returnItem = Invoker.MethodReturn(this, "AutoSaveToGlobal", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool AutoSaveToGlobal()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AutoSaveToGlobal", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="ApplyTo">optional object ApplyTo</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ViewsEx(object applyTo)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(applyTo);
			object returnItem = Invoker.MethodReturn(this, "ViewsEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ViewsEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ViewsEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="SinglePane">object SinglePane</param>
		/// <param name="Toggle">object Toggle</param>
		/// <param name="ApplyTo">object ApplyTo</param>
		/// <param name="BuiltInView">LateBindingApi.MSProjectApi.Enums.PjViewType BuiltInView</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ViewApplyEx(object name, object singlePane, object toggle, object applyTo, LateBindingApi.MSProjectApi.Enums.PjViewType builtInView)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, singlePane, toggle, applyTo, builtInView);
			object returnItem = Invoker.MethodReturn(this, "ViewApplyEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Column">optional object Column</param>
		[SupportByLibrary("MSProject", 14)]
		public bool WrapText(object column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(column);
			object returnItem = Invoker.MethodReturn(this, "WrapText", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool WrapText()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "WrapText", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ShowAddNewColumn(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "ShowAddNewColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ShowAddNewColumn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ShowAddNewColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjFieldTypes Type</param>
		/// <param name="Column">optional object Column</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ChangeColumnDataType(LateBindingApi.MSProjectApi.Enums.PjFieldTypes type, object column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type, column);
			object returnItem = Invoker.MethodReturn(this, "ChangeColumnDataType", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjFieldTypes Type</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ChangeColumnDataType(LateBindingApi.MSProjectApi.Enums.PjFieldTypes type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			object returnItem = Invoker.MethodReturn(this, "ChangeColumnDataType", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Column">optional object Column</param>
		[SupportByLibrary("MSProject", 14)]
		public bool AddNewColumn(object column)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(column);
			object returnItem = Invoker.MethodReturn(this, "AddNewColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool AddNewColumn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AddNewColumn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="TaskTable">bool TaskTable</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="OverwriteExisting">optional object OverwriteExisting</param>
		/// <param name="NewName">optional object NewName</param>
		/// <param name="FieldName">optional object FieldName</param>
		/// <param name="NewFieldName">optional object NewFieldName</param>
		/// <param name="Title">optional object Title</param>
		/// <param name="Width">optional object Width</param>
		/// <param name="Align">optional object Align</param>
		/// <param name="ShowInMenu">optional object ShowInMenu</param>
		/// <param name="LockFirstColumn">optional object LockFirstColumn</param>
		/// <param name="DateFormat">optional object DateFormat</param>
		/// <param name="RowHeight">optional object RowHeight</param>
		/// <param name="ColumnPosition">optional object ColumnPosition</param>
		/// <param name="AlignTitle">optional object AlignTitle</param>
		/// <param name="HeaderAutoRowHeightAdjustment">optional object HeaderAutoRowHeightAdjustment</param>
		/// <param name="HeaderTextWrap">optional object HeaderTextWrap</param>
		/// <param name="WrapText">optional object WrapText</param>
		/// <param name="ShowAddNewColumn">optional object ShowAddNewColumn</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment, object headerTextWrap, object wrapText, object showAddNewColumn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment, headerTextWrap, wrapText, showAddNewColumn);
			object returnItem = Invoker.MethodReturn(this, "TableEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="TaskTable">bool TaskTable</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TableEditEx(string name, bool taskTable)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, taskTable);
			object returnItem = Invoker.MethodReturn(this, "TableEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="SiteURL">optional object SiteURL</param>
		/// <param name="ListName">optional object ListName</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SynchronizeWithSite(object siteURL, object listName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(siteURL, listName);
			object returnItem = Invoker.MethodReturn(this, "SynchronizeWithSite", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SynchronizeWithSite()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SynchronizeWithSite", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ManageSiteColumns()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ManageSiteColumns", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="SiteURL">optional object SiteURL</param>
		/// <param name="ListName">optional object ListName</param>
		[SupportByLibrary("MSProject", 14)]
		public bool OpenFromSharePoint(object siteURL, object listName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(siteURL, listName);
			object returnItem = Invoker.MethodReturn(this, "OpenFromSharePoint", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool OpenFromSharePoint()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OpenFromSharePoint", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">string Item</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="Name">optional object Name</param>
		/// <param name="StartShape">optional object StartShape</param>
		/// <param name="StartType">optional object StartType</param>
		/// <param name="StartColor">optional object StartColor</param>
		/// <param name="MiddleShape">optional object MiddleShape</param>
		/// <param name="MiddleColor">optional object MiddleColor</param>
		/// <param name="MiddlePattern">optional object MiddlePattern</param>
		/// <param name="EndShape">optional object EndShape</param>
		/// <param name="EndType">optional object EndType</param>
		/// <param name="EndColor">optional object EndColor</param>
		/// <param name="ShowFor">optional object ShowFor</param>
		/// <param name="Row">optional object Row</param>
		/// <param name="From">optional object From</param>
		/// <param name="To">optional object To</param>
		/// <param name="BottomText">optional object BottomText</param>
		/// <param name="TopText">optional object TopText</param>
		/// <param name="LeftText">optional object LeftText</param>
		/// <param name="RightText">optional object RightText</param>
		/// <param name="InsideText">optional object InsideText</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText, object rightText, object insideText)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText, rightText, insideText);
			object returnItem = Invoker.MethodReturn(this, "GanttBarEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">string Item</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarEditEx(string item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "GanttBarEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjBarItem Item</param>
		/// <param name="Bar">optional object Bar</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="Align">optional object Align</param>
		/// <param name="Wrap">optional object Wrap</param>
		/// <param name="Shadow">optional object Shadow</param>
		/// <param name="Field1">optional object Field1</param>
		/// <param name="Field2">optional object Field2</param>
		/// <param name="Field3">optional object Field3</param>
		/// <param name="Field4">optional object Field4</param>
		/// <param name="Field5">optional object Field5</param>
		/// <param name="SplitPattern">optional object SplitPattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CalendarBarStylesEditEx(LateBindingApi.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4, object field5, object splitPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4, field5, splitPattern);
			object returnItem = Invoker.MethodReturn(this, "CalendarBarStylesEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjBarItem Item</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CalendarBarStylesEditEx(LateBindingApi.MSProjectApi.Enums.PjBarItem item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "CalendarBarStylesEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjCalendarShading Item</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="Color">optional object Color</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CalendarDateShadingEditEx(LateBindingApi.MSProjectApi.Enums.PjCalendarShading item, object pattern, object color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, pattern, color);
			object returnItem = Invoker.MethodReturn(this, "CalendarDateShadingEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjCalendarShading Item</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CalendarDateShadingEditEx(LateBindingApi.MSProjectApi.Enums.PjCalendarShading item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "CalendarDateShadingEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TopLeft">optional object TopLeft</param>
		/// <param name="TopRight">optional object TopRight</param>
		/// <param name="BottomLeft">optional object BottomLeft</param>
		/// <param name="BottomRight">optional object BottomRight</param>
		/// <param name="TopColor">optional object TopColor</param>
		/// <param name="BottomColor">optional object BottomColor</param>
		/// <param name="TopPattern">optional object TopPattern</param>
		/// <param name="BottomPattern">optional object BottomPattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CalendarDateBoxesEx(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor, object topPattern, object bottomPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor, topPattern, bottomPattern);
			object returnItem = Invoker.MethodReturn(this, "CalendarDateBoxesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool CalendarDateBoxesEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CalendarDateBoxesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="Reset">optional object Reset</param>
		/// <param name="CellColor">optional object CellColor</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="Strikethrough">optional object Strikethrough</param>
		[SupportByLibrary("MSProject", 14)]
		public bool Font32Ex(object name, object size, object bold, object italic, object underline, object color, object reset, object cellColor, object pattern, object strikethrough)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, size, bold, italic, underline, color, reset, cellColor, pattern, strikethrough);
			object returnItem = Invoker.MethodReturn(this, "Font32Ex", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool Font32Ex()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Font32Ex", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">optional object Item</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="CellColor">optional object CellColor</param>
		/// <param name="Pattern">optional object Pattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TextStyles32Ex(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, font, size, bold, italic, underline, color, cellColor, pattern);
			object returnItem = Invoker.MethodReturn(this, "TextStyles32Ex", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TextStyles32Ex()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TextStyles32Ex", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Draw">optional object Draw</param>
		/// <param name="Calendar">optional object Calendar</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="Pattern">optional object Pattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TimescaleNonWorkingEx(object draw, object calendar, object color, object pattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(draw, calendar, color, pattern);
			object returnItem = Invoker.MethodReturn(this, "TimescaleNonWorkingEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TimescaleNonWorkingEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimescaleNonWorkingEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjGridline Item</param>
		/// <param name="NormalType">optional object NormalType</param>
		/// <param name="NormalColor">optional object NormalColor</param>
		/// <param name="Interval">optional object Interval</param>
		/// <param name="IntervalType">optional object IntervalType</param>
		/// <param name="IntervalColor">optional object IntervalColor</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GridlinesEditEx(LateBindingApi.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval, object intervalType, object intervalColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, normalType, normalColor, interval, intervalType, intervalColor);
			object returnItem = Invoker.MethodReturn(this, "GridlinesEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjGridline Item</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GridlinesEditEx(LateBindingApi.MSProjectApi.Enums.PjGridline item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "GridlinesEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TopLeftShowAs">optional object TopLeftShowAs</param>
		/// <param name="TopLeftColor">optional object TopLeftColor</param>
		/// <param name="TopLeftPattern">optional object TopLeftPattern</param>
		/// <param name="BottomLeftShowAs">optional object BottomLeftShowAs</param>
		/// <param name="BottomLeftColor">optional object BottomLeftColor</param>
		/// <param name="BottomLeftPattern">optional object BottomLeftPattern</param>
		/// <param name="TopRightShowAs">optional object TopRightShowAs</param>
		/// <param name="TopRightColor">optional object TopRightColor</param>
		/// <param name="TopRightPattern">optional object TopRightPattern</param>
		/// <param name="BottomRightShowAs">optional object BottomRightShowAs</param>
		/// <param name="BottomRightColor">optional object BottomRightColor</param>
		/// <param name="BottomRightPattern">optional object BottomRightPattern</param>
		/// <param name="ShowValues">optional object ShowValues</param>
		/// <param name="ShowAvailabilityLine">optional object ShowAvailabilityLine</param>
		/// <param name="PercentBarOverlap">optional object PercentBarOverlap</param>
		/// <param name="ProposedLeftShowAs">optional object ProposedLeftShowAs</param>
		/// <param name="ProposedLeftColor">optional object ProposedLeftColor</param>
		/// <param name="ProposedLeftPattern">optional object ProposedLeftPattern</param>
		/// <param name="ProposedRightShowAs">optional object ProposedRightShowAs</param>
		/// <param name="ProposedRightColor">optional object ProposedRightColor</param>
		/// <param name="ProposedRightPattern">optional object ProposedRightPattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs, object proposedRightColor, object proposedRightPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs, proposedRightColor, proposedRightPattern);
			object returnItem = Invoker.MethodReturn(this, "ResourceGraphBarStylesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ResourceGraphBarStylesEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceGraphBarStylesEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjBoxStyle Style</param>
		/// <param name="DataTemplate">object DataTemplate</param>
		/// <param name="HorizontalGridlines">object HorizontalGridlines</param>
		/// <param name="VerticalGridlines">object VerticalGridlines</param>
		/// <param name="BorderShape">LateBindingApi.MSProjectApi.Enums.PjBoxShape BorderShape</param>
		/// <param name="BorderColor">object BorderColor</param>
		/// <param name="BorderWidth">object BorderWidth</param>
		/// <param name="BackgroundColor">object BackgroundColor</param>
		/// <param name="BackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxStylesEditEx(LateBindingApi.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, LateBindingApi.MSProjectApi.Enums.PjBoxShape borderShape, object borderColor, object borderWidth, object backgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern backgroundPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern);
			object returnItem = Invoker.MethodReturn(this, "BoxStylesEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="ProjectName">object ProjectName</param>
		/// <param name="TaskID">object TaskID</param>
		/// <param name="DataTemplate">object DataTemplate</param>
		/// <param name="HorizontalGridlines">object HorizontalGridlines</param>
		/// <param name="VerticalGridlines">object VerticalGridlines</param>
		/// <param name="BorderShape">LateBindingApi.MSProjectApi.Enums.PjBoxShape BorderShape</param>
		/// <param name="BorderColor">object BorderColor</param>
		/// <param name="BorderWidth">object BorderWidth</param>
		/// <param name="BackgroundColor">object BackgroundColor</param>
		/// <param name="BackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern</param>
		/// <param name="Reset">optional object Reset</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxFormatEx(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, LateBindingApi.MSProjectApi.Enums.PjBoxShape borderShape, object borderColor, object borderWidth, object backgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern backgroundPattern, object reset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern, reset);
			object returnItem = Invoker.MethodReturn(this, "BoxFormatEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="ProjectName">object ProjectName</param>
		/// <param name="TaskID">object TaskID</param>
		/// <param name="DataTemplate">object DataTemplate</param>
		/// <param name="HorizontalGridlines">object HorizontalGridlines</param>
		/// <param name="VerticalGridlines">object VerticalGridlines</param>
		/// <param name="BorderShape">LateBindingApi.MSProjectApi.Enums.PjBoxShape BorderShape</param>
		/// <param name="BorderColor">object BorderColor</param>
		/// <param name="BorderWidth">object BorderWidth</param>
		/// <param name="BackgroundColor">object BackgroundColor</param>
		/// <param name="BackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxFormatEx(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, LateBindingApi.MSProjectApi.Enums.PjBoxShape borderShape, object borderColor, object borderWidth, object backgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern backgroundPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern);
			object returnItem = Invoker.MethodReturn(this, "BoxFormatEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="Cell">LateBindingApi.MSProjectApi.Enums.PjCell Cell</param>
		/// <param name="FieldName">LateBindingApi.MSProjectApi.Enums.PjField FieldName</param>
		/// <param name="Font">object Font</param>
		/// <param name="FontSize">object FontSize</param>
		/// <param name="FontColor">object FontColor</param>
		/// <param name="Bold">object Bold</param>
		/// <param name="Italic">object Italic</param>
		/// <param name="Underline">object Underline</param>
		/// <param name="HorizontalAlignment">LateBindingApi.MSProjectApi.Enums.PjAlignment HorizontalAlignment</param>
		/// <param name="VerticalAlignment">LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment</param>
		/// <param name="TextLineLimit">object TextLineLimit</param>
		/// <param name="ShowLabel">object ShowLabel</param>
		/// <param name="Label">object Label</param>
		/// <param name="DateFormat">LateBindingApi.MSProjectApi.Enums.PjDateFormat DateFormat</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxCellEditEx(string name, LateBindingApi.MSProjectApi.Enums.PjCell cell, LateBindingApi.MSProjectApi.Enums.PjField fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, LateBindingApi.MSProjectApi.Enums.PjAlignment horizontalAlignment, LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment verticalAlignment, object textLineLimit, object showLabel, object label, LateBindingApi.MSProjectApi.Enums.PjDateFormat dateFormat)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel, label, dateFormat);
			object returnItem = Invoker.MethodReturn(this, "BoxCellEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="LayoutMode">LateBindingApi.MSProjectApi.Enums.PjLayoutMode LayoutMode</param>
		/// <param name="LayoutScheme">LateBindingApi.MSProjectApi.Enums.PjLayoutScheme LayoutScheme</param>
		/// <param name="SummaryPrecedence">object SummaryPrecedence</param>
		/// <param name="RowAlignment">LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment RowAlignment</param>
		/// <param name="ColumnAlignment">LateBindingApi.MSProjectApi.Enums.PjAlignment ColumnAlignment</param>
		/// <param name="RowSpacing">object RowSpacing</param>
		/// <param name="ColumnSpacing">object ColumnSpacing</param>
		/// <param name="RowHeight">LateBindingApi.MSProjectApi.Enums.PjRowColSize RowHeight</param>
		/// <param name="ColumnWidth">LateBindingApi.MSProjectApi.Enums.PjRowColSize ColumnWidth</param>
		/// <param name="AdjustForPageBreaks">object AdjustForPageBreaks</param>
		/// <param name="ShowSummaryTasks">object ShowSummaryTasks</param>
		/// <param name="ViewBackgroundColor">object ViewBackgroundColor</param>
		/// <param name="ViewBackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern</param>
		/// <param name="ShowProgressMarks">optional object ShowProgressMarks</param>
		/// <param name="ShowPageBreaks">optional object ShowPageBreaks</param>
		/// <param name="ShowIDOnly">optional object ShowIDOnly</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxLayoutEx(LateBindingApi.MSProjectApi.Enums.PjLayoutMode layoutMode, LateBindingApi.MSProjectApi.Enums.PjLayoutScheme layoutScheme, object summaryPrecedence, LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment rowAlignment, LateBindingApi.MSProjectApi.Enums.PjAlignment columnAlignment, object rowSpacing, object columnSpacing, LateBindingApi.MSProjectApi.Enums.PjRowColSize rowHeight, LateBindingApi.MSProjectApi.Enums.PjRowColSize columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern viewBackgroundPattern, object showProgressMarks, object showPageBreaks, object showIDOnly)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks, showPageBreaks, showIDOnly);
			object returnItem = Invoker.MethodReturn(this, "BoxLayoutEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="LayoutMode">LateBindingApi.MSProjectApi.Enums.PjLayoutMode LayoutMode</param>
		/// <param name="LayoutScheme">LateBindingApi.MSProjectApi.Enums.PjLayoutScheme LayoutScheme</param>
		/// <param name="SummaryPrecedence">object SummaryPrecedence</param>
		/// <param name="RowAlignment">LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment RowAlignment</param>
		/// <param name="ColumnAlignment">LateBindingApi.MSProjectApi.Enums.PjAlignment ColumnAlignment</param>
		/// <param name="RowSpacing">object RowSpacing</param>
		/// <param name="ColumnSpacing">object ColumnSpacing</param>
		/// <param name="RowHeight">LateBindingApi.MSProjectApi.Enums.PjRowColSize RowHeight</param>
		/// <param name="ColumnWidth">LateBindingApi.MSProjectApi.Enums.PjRowColSize ColumnWidth</param>
		/// <param name="AdjustForPageBreaks">object AdjustForPageBreaks</param>
		/// <param name="ShowSummaryTasks">object ShowSummaryTasks</param>
		/// <param name="ViewBackgroundColor">object ViewBackgroundColor</param>
		/// <param name="ViewBackgroundPattern">LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxLayoutEx(LateBindingApi.MSProjectApi.Enums.PjLayoutMode layoutMode, LateBindingApi.MSProjectApi.Enums.PjLayoutScheme layoutScheme, object summaryPrecedence, LateBindingApi.MSProjectApi.Enums.PjVerticalAlignment rowAlignment, LateBindingApi.MSProjectApi.Enums.PjAlignment columnAlignment, object rowSpacing, object columnSpacing, LateBindingApi.MSProjectApi.Enums.PjRowColSize rowHeight, LateBindingApi.MSProjectApi.Enums.PjRowColSize columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, LateBindingApi.MSProjectApi.Enums.PjBackgroundPattern viewBackgroundPattern)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern);
			object returnItem = Invoker.MethodReturn(this, "BoxLayoutEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjLinkStyle Style</param>
		/// <param name="ShowArrows">object ShowArrows</param>
		/// <param name="ShowLabels">object ShowLabels</param>
		/// <param name="ColorMode">LateBindingApi.MSProjectApi.Enums.PjLinkColorMode ColorMode</param>
		/// <param name="CriticalColor">optional object CriticalColor</param>
		/// <param name="NoncriticalColor">optional object NoncriticalColor</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxLinksEx(LateBindingApi.MSProjectApi.Enums.PjLinkStyle style, object showArrows, object showLabels, LateBindingApi.MSProjectApi.Enums.PjLinkColorMode colorMode, object criticalColor, object noncriticalColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style, showArrows, showLabels, colorMode, criticalColor, noncriticalColor);
			object returnItem = Invoker.MethodReturn(this, "BoxLinksEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjLinkStyle Style</param>
		/// <param name="ShowArrows">object ShowArrows</param>
		/// <param name="ShowLabels">object ShowLabels</param>
		/// <param name="ColorMode">LateBindingApi.MSProjectApi.Enums.PjLinkColorMode ColorMode</param>
		[SupportByLibrary("MSProject", 14)]
		public bool BoxLinksEx(LateBindingApi.MSProjectApi.Enums.PjLinkStyle style, object showArrows, object showLabels, LateBindingApi.MSProjectApi.Enums.PjLinkColorMode colorMode)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style, showArrows, showLabels, colorMode);
			object returnItem = Invoker.MethodReturn(this, "BoxLinksEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="MoveAfterReturn">optional object MoveAfterReturn</param>
		/// <param name="DragAndDrop">optional object DragAndDrop</param>
		/// <param name="UpdateLinks">optional object UpdateLinks</param>
		/// <param name="CopyResourceUsageHeader">optional object CopyResourceUsageHeader</param>
		/// <param name="PhoneticInfo">optional object PhoneticInfo</param>
		/// <param name="PhoneticType">optional object PhoneticType</param>
		/// <param name="MinuteLabelDisplay">optional object MinuteLabelDisplay</param>
		/// <param name="HourLabelDisplay">optional object HourLabelDisplay</param>
		/// <param name="DayLabelDisplay">optional object DayLabelDisplay</param>
		/// <param name="WeekLabelDisplay">optional object WeekLabelDisplay</param>
		/// <param name="YearLabelDisplay">optional object YearLabelDisplay</param>
		/// <param name="SpaceBeforeTimeLabel">optional object SpaceBeforeTimeLabel</param>
		/// <param name="SetDefaults">optional object SetDefaults</param>
		/// <param name="MonthLabelDisplay">optional object MonthLabelDisplay</param>
		/// <param name="SetDefaultsTimeUnits">optional object SetDefaultsTimeUnits</param>
		/// <param name="HyperlinkColor">optional object HyperlinkColor</param>
		/// <param name="FollowedHyperlinkColor">optional object FollowedHyperlinkColor</param>
		/// <param name="UnderlineHyperlinks">optional object UnderlineHyperlinks</param>
		/// <param name="SetDefaultsHyperlink">optional object SetDefaultsHyperlink</param>
		/// <param name="InCellEditing">optional object InCellEditing</param>
		/// <param name="AllowTaskDelegation">optional object AllowTaskDelegation</param>
		[SupportByLibrary("MSProject", 14)]
		public bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaultsHyperlink, object inCellEditing, object allowTaskDelegation)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaultsHyperlink, inCellEditing, allowTaskDelegation);
			object returnItem = Invoker.MethodReturn(this, "OptionsEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool OptionsEditEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OptionsEditEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="TextWidth">object TextWidth</param>
		/// <param name="LegendOn">object LegendOn</param>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlignment Alignment</param>
		/// <param name="Text">optional object Text</param>
		/// <param name="LabelFontName">optional object LabelFontName</param>
		/// <param name="LabelFontSize">optional object LabelFontSize</param>
		/// <param name="LabelFontBold">optional object LabelFontBold</param>
		/// <param name="LabelFontItalic">optional object LabelFontItalic</param>
		/// <param name="LabelFontUnderline">optional object LabelFontUnderline</param>
		/// <param name="LabelFontColor">optional object LabelFontColor</param>
		[SupportByLibrary("MSProject", 14)]
		public bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, LateBindingApi.MSProjectApi.Enums.PjAlignment alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic, object labelFontUnderline, object labelFontColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic, labelFontUnderline, labelFontColor);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupLegendEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">object Name</param>
		/// <param name="TextWidth">object TextWidth</param>
		/// <param name="LegendOn">object LegendOn</param>
		/// <param name="Alignment">LateBindingApi.MSProjectApi.Enums.PjAlignment Alignment</param>
		[SupportByLibrary("MSProject", 14)]
		public bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, LateBindingApi.MSProjectApi.Enums.PjAlignment alignment)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, textWidth, legendOn, alignment);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupLegendEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Name">optional object Name</param>
		/// <param name="Item">optional object Item</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		[SupportByLibrary("MSProject", 14)]
		public bool FilePageSetupCalendarTextEx(object name, object item, object font, object size, object bold, object italic, object underline, object color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, item, font, size, bold, italic, underline, color);
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupCalendarTextEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool FilePageSetupCalendarTextEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilePageSetupCalendarTextEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="CurIndex">optional object CurIndex</param>
		/// <param name="Order">optional object Order</param>
		/// <param name="FontWord">optional object FontWord</param>
		/// <param name="CellBackground">optional object CellBackground</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="Shortcut">optional object Shortcut</param>
		/// <param name="DisplayField">optional object DisplayField</param>
		/// <param name="FontColor">optional object FontColor</param>
		[SupportByLibrary("MSProject", 14)]
		public bool UsageViewEntryEx(object curIndex, object order, object fontWord, object cellBackground, object pattern, object shortcut, object displayField, object fontColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(curIndex, order, fontWord, cellBackground, pattern, shortcut, displayField, fontColor);
			object returnItem = Invoker.MethodReturn(this, "UsageViewEntryEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool UsageViewEntryEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "UsageViewEntryEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">optional object Item</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Size">optional object Size</param>
		/// <param name="Bold">optional object Bold</param>
		/// <param name="Italic">optional object Italic</param>
		/// <param name="Underline">optional object Underline</param>
		/// <param name="Color">optional object Color</param>
		/// <param name="CellColor">optional object CellColor</param>
		/// <param name="Pattern">optional object Pattern</param>
		/// <param name="ShowInMenu">optional object ShowInMenu</param>
		/// <param name="Strikethrough">optional object Strikethrough</param>
		[SupportByLibrary("MSProject", 14)]
		public bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern, object showInMenu, object strikethrough)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, font, size, bold, italic, underline, color, cellColor, pattern, showInMenu, strikethrough);
			object returnItem = Invoker.MethodReturn(this, "DetailStylesFormatEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool DetailStylesFormatEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DetailStylesFormatEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="GanttStyle">optional object GanttStyle</param>
		/// <param name="StartShape">optional object StartShape</param>
		/// <param name="StartType">optional object StartType</param>
		/// <param name="StartColor">optional object StartColor</param>
		/// <param name="MiddleShape">optional object MiddleShape</param>
		/// <param name="MiddlePattern">optional object MiddlePattern</param>
		/// <param name="MiddleColor">optional object MiddleColor</param>
		/// <param name="EndShape">optional object EndShape</param>
		/// <param name="EndType">optional object EndType</param>
		/// <param name="EndColor">optional object EndColor</param>
		/// <param name="LeftText">optional object LeftText</param>
		/// <param name="RightText">optional object RightText</param>
		/// <param name="TopText">optional object TopText</param>
		/// <param name="BottomText">optional object BottomText</param>
		/// <param name="InsideText">optional object InsideText</param>
		/// <param name="Reset">optional object Reset</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText, object reset, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText, reset, projectName);
			object returnItem = Invoker.MethodReturn(this, "GanttBarFormatEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarFormatEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttBarFormatEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="Remove">optional object Remove</param>
		/// <param name="TimelineViewName">optional object TimelineViewName</param>
		/// <param name="ShowDialog">optional object ShowDialog</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskOnTimeline(object taskID, object remove, object timelineViewName, object showDialog)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID, remove, timelineViewName, showDialog);
			object returnItem = Invoker.MethodReturn(this, "TaskOnTimeline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskOnTimeline()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskOnTimeline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="MoveForward">optional object MoveForward</param>
		/// <param name="IsWorkingDuration">optional object IsWorkingDuration</param>
		/// <param name="MoveDays">optional object MoveDays</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskMove(object moveForward, object isWorkingDuration, object moveDays)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(moveForward, isWorkingDuration, moveDays);
			object returnItem = Invoker.MethodReturn(this, "TaskMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskMove()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="MoveCompleted">optional object MoveCompleted</param>
		/// <param name="MoveIncomplete">optional object MoveIncomplete</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskMoveToStatusDate(object moveCompleted, object moveIncomplete)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(moveCompleted, moveIncomplete);
			object returnItem = Invoker.MethodReturn(this, "TaskMoveToStatusDate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskMoveToStatusDate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskMoveToStatusDate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Date">optional object Date</param>
		/// <param name="MoveDeadline">optional object MoveDeadline</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ProjectMove(object date, object moveDeadline)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(date, moveDeadline);
			object returnItem = Invoker.MethodReturn(this, "ProjectMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ProjectMove()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ProjectMove", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="ResolveMethod">LateBindingApi.MSProjectApi.Enums.PjLevelSelectedOption ResolveMethod</param>
		[SupportByLibrary("MSProject", 14)]
		public bool LevelSelected(LateBindingApi.MSProjectApi.Enums.PjLevelSelectedOption resolveMethod)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(resolveMethod);
			object returnItem = Invoker.MethodReturn(this, "LevelSelected", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjTeamPlannerStyle Style</param>
		/// <param name="FillColor">optional object FillColor</param>
		/// <param name="BorderColor">optional object BorderColor</param>
		[SupportByLibrary("MSProject", 14)]
		public bool EditTPStyle(LateBindingApi.MSProjectApi.Enums.PjTeamPlannerStyle style, object fillColor, object borderColor)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style, fillColor, borderColor);
			object returnItem = Invoker.MethodReturn(this, "EditTPStyle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjTeamPlannerStyle Style</param>
		[SupportByLibrary("MSProject", 14)]
		public bool EditTPStyle(LateBindingApi.MSProjectApi.Enums.PjTeamPlannerStyle style)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style);
			object returnItem = Invoker.MethodReturn(this, "EditTPStyle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Style">LateBindingApi.MSProjectApi.Enums.PjTeamPlannerStyle Style</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ResetTPStyle(LateBindingApi.MSProjectApi.Enums.PjTeamPlannerStyle style)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(style);
			object returnItem = Invoker.MethodReturn(this, "ResetTPStyle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="LineMultiple">Int16 LineMultiple</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SelectTPLineHeight(Int16 lineMultiple)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(lineMultiple);
			object returnItem = Invoker.MethodReturn(this, "SelectTPLineHeight", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjTimelineShowHide Item</param>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineShowHide(LateBindingApi.MSProjectApi.Enums.PjTimelineShowHide item, object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item, show);
			object returnItem = Invoker.MethodReturn(this, "TimelineShowHide", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Item">LateBindingApi.MSProjectApi.Enums.PjTimelineShowHide Item</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineShowHide(LateBindingApi.MSProjectApi.Enums.PjTimelineShowHide item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(item);
			object returnItem = Invoker.MethodReturn(this, "TimelineShowHide", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TextOnBar">optional object TextOnBar</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineTextOnBar(object textOnBar)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(textOnBar);
			object returnItem = Invoker.MethodReturn(this, "TimelineTextOnBar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineTextOnBar()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimelineTextOnBar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjTimelineInsertTaskType Type</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineInsertTask(LateBindingApi.MSProjectApi.Enums.PjTimelineInsertTaskType type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			object returnItem = Invoker.MethodReturn(this, "TimelineInsertTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="SelectionOnly">optional object SelectionOnly</param>
		/// <param name="ExportWidth">optional object ExportWidth</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineExport(object selectionOnly, object exportWidth)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(selectionOnly, exportWidth);
			object returnItem = Invoker.MethodReturn(this, "TimelineExport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineExport()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimelineExport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Set">optional object Set</param>
		[SupportByLibrary("MSProject", 14)]
		public bool FontStrikethrough(object set)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(set);
			object returnItem = Invoker.MethodReturn(this, "FontStrikethrough", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool FontStrikethrough()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FontStrikethrough", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="FieldName">object FieldName</param>
		/// <param name="FilterType">LateBindingApi.MSProjectApi.Enums.PjAutoFilterType FilterType</param>
		/// <param name="Test1">optional object Test1</param>
		/// <param name="Criteria1">optional object Criteria1</param>
		/// <param name="Operation">optional object Operation</param>
		/// <param name="Test2">optional object Test2</param>
		/// <param name="Criteria2">optional object Criteria2</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetAutoFilter(object fieldName, LateBindingApi.MSProjectApi.Enums.PjAutoFilterType filterType, object test1, object criteria1, object operation, object test2, object criteria2)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldName, filterType, test1, criteria1, operation, test2, criteria2);
			object returnItem = Invoker.MethodReturn(this, "SetAutoFilter", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="FieldName">object FieldName</param>
		/// <param name="FilterType">LateBindingApi.MSProjectApi.Enums.PjAutoFilterType FilterType</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetAutoFilter(object fieldName, LateBindingApi.MSProjectApi.Enums.PjAutoFilterType filterType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldName, filterType);
			object returnItem = Invoker.MethodReturn(this, "SetAutoFilter", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="FilterType">LateBindingApi.MSProjectApi.Enums.PjFilterViewType FilterType</param>
		[SupportByLibrary("MSProject", 14)]
		public bool FilterNew(LateBindingApi.MSProjectApi.Enums.PjFilterViewType filterType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filterType);
			object returnItem = Invoker.MethodReturn(this, "FilterNew", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool FilterClear()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FilterClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool GroupNew()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GroupNew", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool GroupClear()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GroupClear", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool InsertTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool InsertScheduledTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertScheduledTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool InsertManualTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertManualTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool InsertMilestoneTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertMilestoneTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool InsertBlankRow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertBlankRow", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="StartOnDate">LateBindingApi.MSProjectApi.Enums.PjNewTasksStartOnDate StartOnDate</param>
		[SupportByLibrary("MSProject", 14)]
		public bool NewTasksStartOn(LateBindingApi.MSProjectApi.Enums.PjNewTasksStartOnDate startOnDate)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(startOnDate);
			object returnItem = Invoker.MethodReturn(this, "NewTasksStartOn", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="On">bool On</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GroupMaintainHierarchy(bool on)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(on);
			object returnItem = Invoker.MethodReturn(this, "GroupMaintainHierarchy", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="On">bool On</param>
		[SupportByLibrary("MSProject", 14)]
		public bool FilterShowSummaryRows(bool on)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(on);
			object returnItem = Invoker.MethodReturn(this, "FilterShowSummaryRows", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ToggleTaskDetails()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleTaskDetails", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ToggleResourceDetails()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleResourceDetails", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleCritical(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleCritical", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleCritical()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleCritical", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleSlack(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleSlack", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleSlack()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleSlack", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Show">optional object Show</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleLate(object show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(show);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleLate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleLate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleLate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Baseline">Int16 Baseline</param>
		/// <param name="Show">bool Show</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleBaseline(Int16 baseline, bool show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(baseline, show);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleBaseline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Baseline">Int16 Baseline</param>
		/// <param name="Show">bool Show</param>
		[SupportByLibrary("MSProject", 14)]
		public bool GanttBarStyleSlippage(Int16 baseline, bool show)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(baseline, show);
			object returnItem = Invoker.MethodReturn(this, "GanttBarStyleSlippage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TogglePreventResOveralloc()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TogglePreventResOveralloc", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ToggleTPAutoExpand()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleTPAutoExpand", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ToggleTPUnassigned()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleTPUnassigned", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ToggleTPUnscheduled()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleTPUnscheduled", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Manual">optional object Manual</param>
		/// <param name="IsStickyDates">optional object IsStickyDates</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetTaskMode(object manual, object isStickyDates)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(manual, isStickyDates);
			object returnItem = Invoker.MethodReturn(this, "SetTaskMode", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SetTaskMode()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SetTaskMode", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="MakeActive">optional object MakeActive</param>
		[SupportByLibrary("MSProject", 14)]
		public bool InactivateTaskToggle(object makeActive)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(makeActive);
			object returnItem = Invoker.MethodReturn(this, "InactivateTaskToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool InactivateTaskToggle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InactivateTaskToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjField FieldID</param>
		/// <param name="Value">string Value</param>
		/// <param name="AllSelectedTasks">optional object AllSelectedTasks</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetTaskFieldByID(LateBindingApi.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedTasks, object create, object taskID, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, value, allSelectedTasks, create, taskID, projectName);
			object returnItem = Invoker.MethodReturn(this, "SetTaskFieldByID", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjField FieldID</param>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetTaskFieldByID(LateBindingApi.MSProjectApi.Enums.PjField fieldID, string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, value);
			object returnItem = Invoker.MethodReturn(this, "SetTaskFieldByID", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjField FieldID</param>
		/// <param name="Value">string Value</param>
		/// <param name="AllSelectedResources">optional object AllSelectedResources</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="ResourceID">optional object ResourceID</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetResourceFieldByID(LateBindingApi.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedResources, object create, object resourceID, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, value, allSelectedResources, create, resourceID, projectName);
			object returnItem = Invoker.MethodReturn(this, "SetResourceFieldByID", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="FieldID">LateBindingApi.MSProjectApi.Enums.PjField FieldID</param>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetResourceFieldByID(LateBindingApi.MSProjectApi.Enums.PjField fieldID, string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fieldID, value);
			object returnItem = Invoker.MethodReturn(this, "SetResourceFieldByID", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Timeline">optional object Timeline</param>
		[SupportByLibrary("MSProject", 14)]
		public bool DetailsPaneToggle(object timeline)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(timeline);
			object returnItem = Invoker.MethodReturn(this, "DetailsPaneToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool DetailsPaneToggle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DetailsPaneToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Field">optional object Field</param>
		/// <param name="Test">optional object Test</param>
		/// <param name="Value">optional object Value</param>
		/// <param name="Next">optional object Next</param>
		/// <param name="MatchCase">optional object MatchCase</param>
		/// <param name="FieldID">optional object FieldID</param>
		/// <param name="TestID">optional object TestID</param>
		/// <param name="SearchAllFields">optional object SearchAllFields</param>
		[SupportByLibrary("MSProject", 14)]
		public bool FindEx(object field, object test, object value, object next, object matchCase, object fieldID, object testID, object searchAllFields)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, test, value, next, matchCase, fieldID, testID, searchAllFields);
			object returnItem = Invoker.MethodReturn(this, "FindEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool FindEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "FindEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Field">optional object Field</param>
		/// <param name="Test">optional object Test</param>
		/// <param name="Value">optional object Value</param>
		/// <param name="Replacement">optional object Replacement</param>
		/// <param name="ReplaceAll">optional object ReplaceAll</param>
		/// <param name="Next">optional object Next</param>
		/// <param name="MatchCase">optional object MatchCase</param>
		/// <param name="FieldID">optional object FieldID</param>
		/// <param name="TestID">optional object TestID</param>
		/// <param name="SearchAllFields">optional object SearchAllFields</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ReplaceEx(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase, object fieldID, object testID, object searchAllFields)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, test, value, replacement, replaceAll, next, matchCase, fieldID, testID, searchAllFields);
			object returnItem = Invoker.MethodReturn(this, "ReplaceEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ReplaceEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ReplaceEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SelectToEnd()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectToEnd", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SelectTaskAssns()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectTaskAssns", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="ResourceUniqueID">optional object ResourceUniqueID</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ReassignSelectedAssns(object resourceUniqueID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(resourceUniqueID);
			object returnItem = Invoker.MethodReturn(this, "ReassignSelectedAssns", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ReassignSelectedAssns()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ReassignSelectedAssns", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		/// <param name="AllSelectedTasks">optional object AllSelectedTasks</param>
		/// <param name="Create">optional object Create</param>
		/// <param name="TaskID">optional object TaskID</param>
		/// <param name="ProjectName">optional object ProjectName</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetTPField(string field, string value, object allSelectedTasks, object create, object taskID, object projectName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value, allSelectedTasks, create, taskID, projectName);
			object returnItem = Invoker.MethodReturn(this, "SetTPField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Field">string Field</param>
		/// <param name="Value">string Value</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetTPField(string field, string value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(field, value);
			object returnItem = Invoker.MethodReturn(this, "SetTPField", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Filename">object Filename</param>
		/// <param name="FileType">LateBindingApi.MSProjectApi.Enums.PjDocExportType FileType</param>
		/// <param name="IncludeDocumentProperties">optional object IncludeDocumentProperties</param>
		/// <param name="IncludeDocumentMarkup">optional object IncludeDocumentMarkup</param>
		/// <param name="ArchiveFormat">optional object ArchiveFormat</param>
		/// <param name="FromDate">optional object FromDate</param>
		/// <param name="ToDate">optional object ToDate</param>
		[SupportByLibrary("MSProject", 14)]
		public bool DocumentExport(object filename, LateBindingApi.MSProjectApi.Enums.PjDocExportType fileType, object includeDocumentProperties, object includeDocumentMarkup, object archiveFormat, object fromDate, object toDate)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, fileType, includeDocumentProperties, includeDocumentMarkup, archiveFormat, fromDate, toDate);
			object returnItem = Invoker.MethodReturn(this, "DocumentExport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Filename">object Filename</param>
		/// <param name="FileType">LateBindingApi.MSProjectApi.Enums.PjDocExportType FileType</param>
		[SupportByLibrary("MSProject", 14)]
		public bool DocumentExport(object filename, LateBindingApi.MSProjectApi.Enums.PjDocExportType fileType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, fileType);
			object returnItem = Invoker.MethodReturn(this, "DocumentExport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Create">optional object Create</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskDeliverableCreate(object create)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(create);
			object returnItem = Invoker.MethodReturn(this, "TaskDeliverableCreate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskDeliverableCreate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskDeliverableCreate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskDeliverableSync()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskDeliverableSync", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskDependencySync()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskDependencySync", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskRespectLinks()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskRespectLinks", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Set">optional object Set</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetShowTaskWarnings(object set)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(set);
			object returnItem = Invoker.MethodReturn(this, "SetShowTaskWarnings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SetShowTaskWarnings()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SetShowTaskWarnings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Set">optional object Set</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetShowTaskSuggestions(object set)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(set);
			object returnItem = Invoker.MethodReturn(this, "SetShowTaskSuggestions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SetShowTaskSuggestions()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SetShowTaskSuggestions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ShowIgnoredTaskWarnings()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ShowIgnoredTaskWarnings", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Type">LateBindingApi.MSProjectApi.Enums.PjResourceTypes Type</param>
		[SupportByLibrary("MSProject", 14)]
		public bool InsertResource(LateBindingApi.MSProjectApi.Enums.PjResourceTypes type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			object returnItem = Invoker.MethodReturn(this, "InsertResource", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool InsertSummaryTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "InsertSummaryTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Date">optional object Date</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ChangeStatusDate(object date)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(date);
			object returnItem = Invoker.MethodReturn(this, "ChangeStatusDate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ChangeStatusDate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ChangeStatusDate", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Filename">object Filename</param>
		/// <param name="TaskTable">object TaskTable</param>
		/// <param name="ResourceTable">object ResourceTable</param>
		/// <param name="Items">LateBindingApi.MSProjectApi.Enums.PjCompareVersionItems Items</param>
		/// <param name="Columns">LateBindingApi.MSProjectApi.Enums.PjCompareVersionColumns Columns</param>
		/// <param name="ShowLegend">optional object ShowLegend</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CreateComparisonReport(object filename, object taskTable, object resourceTable, LateBindingApi.MSProjectApi.Enums.PjCompareVersionItems items, LateBindingApi.MSProjectApi.Enums.PjCompareVersionColumns columns, object showLegend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, taskTable, resourceTable, items, columns, showLegend);
			object returnItem = Invoker.MethodReturn(this, "CreateComparisonReport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Filename">object Filename</param>
		/// <param name="TaskTable">object TaskTable</param>
		/// <param name="ResourceTable">object ResourceTable</param>
		/// <param name="Items">LateBindingApi.MSProjectApi.Enums.PjCompareVersionItems Items</param>
		/// <param name="Columns">LateBindingApi.MSProjectApi.Enums.PjCompareVersionColumns Columns</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CreateComparisonReport(object filename, object taskTable, object resourceTable, LateBindingApi.MSProjectApi.Enums.PjCompareVersionItems items, LateBindingApi.MSProjectApi.Enums.PjCompareVersionColumns columns)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, taskTable, resourceTable, items, columns);
			object returnItem = Invoker.MethodReturn(this, "CreateComparisonReport", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool CompareProjectVersions()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CompareProjectVersions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskComparison()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskComparison", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ResourceComparison()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ResourceComparison", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool GoToItemInVersions()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GoToItemInVersions", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool CloseComparison()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CloseComparison", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool CompareProjectsLegendToggle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CompareProjectsLegendToggle", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TaskID">Int32 TaskID</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ClearConstraint(Int32 taskID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID);
			object returnItem = Invoker.MethodReturn(this, "ClearConstraint", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TaskInspector()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TaskInspector", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="DefaultTab">LateBindingApi.MSProjectApi.Enums.PjOptionsSecurityTab DefaultTab</param>
		[SupportByLibrary("MSProject", 14)]
		public bool OptionsSecurityTab(LateBindingApi.MSProjectApi.Enums.PjOptionsSecurityTab defaultTab)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(defaultTab);
			object returnItem = Invoker.MethodReturn(this, "OptionsSecurityTab", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="action">optional object action</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ReplanAssignments(object action)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(action);
			object returnItem = Invoker.MethodReturn(this, "ReplanAssignments", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ReplanAssignments()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ReplanAssignments", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Set">optional object Set</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SetIgnoreWarningsForTask(object set)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(set);
			object returnItem = Invoker.MethodReturn(this, "SetIgnoreWarningsForTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SetIgnoreWarningsForTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SetIgnoreWarningsForTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Page">LateBindingApi.MSProjectApi.Enums.PjServerPage Page</param>
		[SupportByLibrary("MSProject", 14)]
		public bool OpenServerPage(LateBindingApi.MSProjectApi.Enums.PjServerPage page)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(page);
			object returnItem = Invoker.MethodReturn(this, "OpenServerPage", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="NumLines">optional object NumLines</param>
		/// <param name="Minimized">optional object Minimized</param>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineFormat(object numLines, object minimized)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numLines, minimized);
			object returnItem = Invoker.MethodReturn(this, "TimelineFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineFormat()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimelineFormat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Automatic">optional object Automatic</param>
		/// <param name="DelayInSlack">optional object DelayInSlack</param>
		/// <param name="AutoClearLeveling">optional object AutoClearLeveling</param>
		/// <param name="Order">optional object Order</param>
		/// <param name="LevelEntireProject">optional object LevelEntireProject</param>
		/// <param name="FromDate">optional object FromDate</param>
		/// <param name="ToDate">optional object ToDate</param>
		/// <param name="PeriodBasis">optional object PeriodBasis</param>
		/// <param name="LevelIndividualAssignments">optional object LevelIndividualAssignments</param>
		/// <param name="LevelingCanSplit">optional object LevelingCanSplit</param>
		/// <param name="LevelProposedBookings">optional object LevelProposedBookings</param>
		/// <param name="LevelPinnedTasks">optional object LevelPinnedTasks</param>
		[SupportByLibrary("MSProject", 14)]
		public bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments, object levelingCanSplit, object levelProposedBookings, object levelPinnedTasks)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments, levelingCanSplit, levelProposedBookings, levelPinnedTasks);
			object returnItem = Invoker.MethodReturn(this, "LevelingOptionsEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool LevelingOptionsEx()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "LevelingOptionsEx", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Color">Int32 Color</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SegmentFillColor(Int32 color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(color);
			object returnItem = Invoker.MethodReturn(this, "SegmentFillColor", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Color">Int32 Color</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SegmentBorderColor(Int32 color)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(color);
			object returnItem = Invoker.MethodReturn(this, "SegmentBorderColor", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineGotoSelectedTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimelineGotoSelectedTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="ResourceUniqueID">optional object ResourceUniqueID</param>
		[SupportByLibrary("MSProject", 14)]
		public bool ToggleTPResourceExpand(object resourceUniqueID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(resourceUniqueID);
			object returnItem = Invoker.MethodReturn(this, "ToggleTPResourceExpand", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ToggleTPResourceExpand()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ToggleTPResourceExpand", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="Filename">optional object Filename</param>
		[SupportByLibrary("MSProject", 14)]
		public bool CleanupProjectFromCache(object filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			object returnItem = Invoker.MethodReturn(this, "CleanupProjectFromCache", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool CleanupProjectFromCache()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "CleanupProjectFromCache", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool ShareProjectOnline()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ShareProjectOnline", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TaskUniqueID">optional object TaskUniqueID</param>
		[SupportByLibrary("MSProject", 14)]
		public bool SelectTPTask(object taskUniqueID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskUniqueID);
			object returnItem = Invoker.MethodReturn(this, "SelectTPTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool SelectTPTask()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "SelectTPTask", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		/// <param name="TaskID">optional object TaskID</param>
		[SupportByLibrary("MSProject", 14)]
		public bool RescheduleToNextAvailable(object taskID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(taskID);
			object returnItem = Invoker.MethodReturn(this, "RescheduleToNextAvailable", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool RescheduleToNextAvailable()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "RescheduleToNextAvailable", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary MSProject 14
		/// </summary>
		[SupportByLibrary("MSProject", 14)]
		public bool TimelineViewToggle()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "TimelineViewToggle", paramsArray);
			return (bool)returnItem;
		}

		#endregion
		#pragma warning restore
	}
}