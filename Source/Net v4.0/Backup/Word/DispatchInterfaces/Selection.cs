//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using LateBindingApi.Core;
namespace NetOffice.WordApi
{
	///<summary>
	/// DispatchInterface Selection SupportByLibrary Word, 9,10,11,12,14
	///</summary>
	[SupportByLibrary("Word", 9,10,11,12,14)]
	[EntityTypeAttribute(EntityType.IsDispatchInterface)]
	public class Selection : COMObject
	{
		#pragma warning disable
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Selection(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Selection(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Selection(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Selection()
		{
		}
		
		#endregion
		
		#region Properties

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string Text
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Text", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Text", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range FormattedText
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FormattedText", paramsArray);
				NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Range;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "FormattedText", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Start
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Start", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Start", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 End
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "End", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "End", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Font Font
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Font", paramsArray);
				NetOffice.WordApi.Font newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Font;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Font", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdSelectionType Type
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Type", paramsArray);
				return (NetOffice.WordApi.Enums.WdSelectionType)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdStoryType StoryType
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "StoryType", paramsArray);
				return (NetOffice.WordApi.Enums.WdStoryType)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public object Style
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Style", paramsArray);
				Type returnItemType = Invoker.GetObjectType(returnItem);
				if ((null != returnItemType) && (true == returnItemType.IsCOMObject))
				{
					COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
					return newObject;
				}
				else
				{
					return  returnItem;
				}
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Style", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Tables Tables
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Tables", paramsArray);
				NetOffice.WordApi.Tables newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Tables;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Words Words
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Words", paramsArray);
				NetOffice.WordApi.Words newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Words;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Sentences Sentences
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Sentences", paramsArray);
				NetOffice.WordApi.Sentences newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Sentences;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Characters Characters
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Characters", paramsArray);
				NetOffice.WordApi.Characters newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Characters;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Footnotes Footnotes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Footnotes", paramsArray);
				NetOffice.WordApi.Footnotes newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Footnotes;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Endnotes Endnotes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Endnotes", paramsArray);
				NetOffice.WordApi.Endnotes newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Endnotes;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Comments Comments
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Comments", paramsArray);
				NetOffice.WordApi.Comments newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Comments;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Cells Cells
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Cells", paramsArray);
				NetOffice.WordApi.Cells newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Cells;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Sections Sections
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Sections", paramsArray);
				NetOffice.WordApi.Sections newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Sections;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Paragraphs Paragraphs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Paragraphs", paramsArray);
				NetOffice.WordApi.Paragraphs newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Paragraphs;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Borders Borders
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Borders", paramsArray);
				NetOffice.WordApi.Borders newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Borders;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Borders", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Shading Shading
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Shading", paramsArray);
				NetOffice.WordApi.Shading newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Shading;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Fields Fields
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Fields", paramsArray);
				NetOffice.WordApi.Fields newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Fields;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.FormFields FormFields
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FormFields", paramsArray);
				NetOffice.WordApi.FormFields newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.FormFields;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Frames Frames
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Frames", paramsArray);
				NetOffice.WordApi.Frames newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Frames;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.ParagraphFormat ParagraphFormat
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ParagraphFormat", paramsArray);
				NetOffice.WordApi.ParagraphFormat newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ParagraphFormat;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ParagraphFormat", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.PageSetup PageSetup
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PageSetup", paramsArray);
				NetOffice.WordApi.PageSetup newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.PageSetup;
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "PageSetup", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Bookmarks Bookmarks
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Bookmarks", paramsArray);
				NetOffice.WordApi.Bookmarks newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Bookmarks;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 StoryLength
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "StoryLength", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdLanguageID LanguageID
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LanguageID", paramsArray);
				return (NetOffice.WordApi.Enums.WdLanguageID)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LanguageID", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdLanguageID LanguageIDFarEast
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LanguageIDFarEast", paramsArray);
				return (NetOffice.WordApi.Enums.WdLanguageID)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LanguageIDFarEast", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdLanguageID LanguageIDOther
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LanguageIDOther", paramsArray);
				return (NetOffice.WordApi.Enums.WdLanguageID)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LanguageIDOther", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Hyperlinks Hyperlinks
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Hyperlinks", paramsArray);
				NetOffice.WordApi.Hyperlinks newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Hyperlinks;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Columns Columns
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Columns", paramsArray);
				NetOffice.WordApi.Columns newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Columns;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Rows Rows
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Rows", paramsArray);
				NetOffice.WordApi.Rows newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Rows;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.HeaderFooter HeaderFooter
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "HeaderFooter", paramsArray);
				NetOffice.WordApi.HeaderFooter newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.HeaderFooter;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool IsEndOfRowMark
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "IsEndOfRowMark", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 BookmarkID
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "BookmarkID", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 PreviousBookmarkID
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PreviousBookmarkID", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Find Find
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Find", paramsArray);
				NetOffice.WordApi.Find newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Find;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range Range
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Range", paramsArray);
				NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Range;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Type">NetOffice.WordApi.Enums.WdInformation Type</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public object get_Information(NetOffice.WordApi.Enums.WdInformation type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			object returnItem = Invoker.PropertyGet(this, "Information", paramsArray);
			Type returnItemType = Invoker.GetObjectType(returnItem);
			if ((null != returnItemType) && (true == returnItemType.IsCOMObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdSelectionFlags Flags
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Flags", paramsArray);
				return (NetOffice.WordApi.Enums.WdSelectionFlags)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Flags", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool Active
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Active", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool StartIsActive
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "StartIsActive", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "StartIsActive", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool IPAtEndOfLine
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "IPAtEndOfLine", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool ExtendMode
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ExtendMode", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ExtendMode", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool ColumnSelectMode
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ColumnSelectMode", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ColumnSelectMode", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdTextOrientation Orientation
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Orientation", paramsArray);
				return (NetOffice.WordApi.Enums.WdTextOrientation)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Orientation", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.InlineShapes InlineShapes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "InlineShapes", paramsArray);
				NetOffice.WordApi.InlineShapes newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.InlineShapes;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Application Application
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Application", paramsArray);
				NetOffice.WordApi.Application newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Application;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Creator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Creator", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public COMObject Parent
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Parent", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document Document
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Document", paramsArray);
				NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Document;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.ShapeRange ShapeRange
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShapeRange", paramsArray);
				NetOffice.WordApi.ShapeRange newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ShapeRange;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 NoProofing
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "NoProofing", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "NoProofing", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Tables TopLevelTables
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TopLevelTables", paramsArray);
				NetOffice.WordApi.Tables newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Tables;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool LanguageDetected
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LanguageDetected", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "LanguageDetected", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single FitTextWidth
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FitTextWidth", paramsArray);
				return (Single)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "FitTextWidth", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.HTMLDivisions HTMLDivisions
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "HTMLDivisions", paramsArray);
				NetOffice.WordApi.HTMLDivisions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.HTMLDivisions;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.SmartTags SmartTags
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SmartTags", paramsArray);
				NetOffice.WordApi.SmartTags newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.SmartTags;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.ShapeRange ChildShapeRange
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ChildShapeRange", paramsArray);
				NetOffice.WordApi.ShapeRange newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ShapeRange;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public bool HasChildShapeRange
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "HasChildShapeRange", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.FootnoteOptions FootnoteOptions
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FootnoteOptions", paramsArray);
				NetOffice.WordApi.FootnoteOptions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.FootnoteOptions;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.EndnoteOptions EndnoteOptions
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EndnoteOptions", paramsArray);
				NetOffice.WordApi.EndnoteOptions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.EndnoteOptions;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.XMLNodes XMLNodes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "XMLNodes", paramsArray);
				NetOffice.WordApi.XMLNodes newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.XMLNodes;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.XMLNode XMLParentNode
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "XMLParentNode", paramsArray);
				NetOffice.WordApi.XMLNode newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.XMLNode;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.Editors Editors
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Editors", paramsArray);
				NetOffice.WordApi.Editors newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Editors;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="DataOnly">bool DataOnly</param>
		[SupportByLibrary("Word", 11,12,14)]
		public string get_XML(bool dataOnly)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dataOnly);
			object returnItem = Invoker.PropertyGet(this, "XML", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public object EnhMetaFileBits
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EnhMetaFileBits", paramsArray);
				Type returnItemType = Invoker.GetObjectType(returnItem);
				if ((null != returnItemType) && (true == returnItemType.IsCOMObject))
				{
					COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
					return newObject;
				}
				else
				{
					return  returnItem;
				}
			}
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.OMaths OMaths
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "OMaths", paramsArray);
				NetOffice.WordApi.OMaths newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.OMaths;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public string WordOpenXML
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "WordOpenXML", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.ContentControls ContentControls
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ContentControls", paramsArray);
				NetOffice.WordApi.ContentControls newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ContentControls;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.ContentControl ParentContentControl
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ParentContentControl", paramsArray);
				NetOffice.WordApi.ContentControl newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ContentControl;
				return newObject;
			}
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Select()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Select", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Start">Int32 Start</param>
		/// <param name="End">Int32 End</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SetRange(Int32 start, Int32 end)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(start, end);
			Invoker.Method(this, "SetRange", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Direction">optional object Direction</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Collapse(object direction=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(direction);
			Invoker.Method(this, "Collapse", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Collapse()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Collapse", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Text">string Text</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertBefore(string text)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(text);
			Invoker.Method(this, "InsertBefore", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Text">string Text</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertAfter(string text)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(text);
			Invoker.Method(this, "InsertAfter", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range Next(object unit=null, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count);
			object returnItem = Invoker.MethodReturn(this, "Next", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range Next()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Next", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range Previous(object unit=null, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count);
			object returnItem = Invoker.MethodReturn(this, "Previous", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range Previous()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Previous", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 StartOf(object unit=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, extend);
			object returnItem = Invoker.MethodReturn(this, "StartOf", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 StartOf()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "StartOf", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 EndOf(object unit=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, extend);
			object returnItem = Invoker.MethodReturn(this, "EndOf", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 EndOf()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EndOf", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Move(object unit=null, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count);
			object returnItem = Invoker.MethodReturn(this, "Move", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Move()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Move", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveStart(object unit=null, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count);
			object returnItem = Invoker.MethodReturn(this, "MoveStart", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveStart()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MoveStart", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveEnd(object unit=null, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count);
			object returnItem = Invoker.MethodReturn(this, "MoveEnd", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveEnd()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MoveEnd", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveWhile(object cset, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset, count);
			object returnItem = Invoker.MethodReturn(this, "MoveWhile", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveWhile(object cset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset);
			object returnItem = Invoker.MethodReturn(this, "MoveWhile", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveStartWhile(object cset, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset, count);
			object returnItem = Invoker.MethodReturn(this, "MoveStartWhile", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveStartWhile(object cset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset);
			object returnItem = Invoker.MethodReturn(this, "MoveStartWhile", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveEndWhile(object cset, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset, count);
			object returnItem = Invoker.MethodReturn(this, "MoveEndWhile", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveEndWhile(object cset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset);
			object returnItem = Invoker.MethodReturn(this, "MoveEndWhile", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveUntil(object cset, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset, count);
			object returnItem = Invoker.MethodReturn(this, "MoveUntil", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveUntil(object cset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset);
			object returnItem = Invoker.MethodReturn(this, "MoveUntil", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveStartUntil(object cset, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset, count);
			object returnItem = Invoker.MethodReturn(this, "MoveStartUntil", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveStartUntil(object cset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset);
			object returnItem = Invoker.MethodReturn(this, "MoveStartUntil", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveEndUntil(object cset, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset, count);
			object returnItem = Invoker.MethodReturn(this, "MoveEndUntil", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Cset">object Cset</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveEndUntil(object cset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(cset);
			object returnItem = Invoker.MethodReturn(this, "MoveEndUntil", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Cut()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Cut", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Copy()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Copy", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Paste()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Paste", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Type">optional object Type</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertBreak(object type=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			Invoker.Method(this, "InsertBreak", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertBreak()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertBreak", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">string FileName</param>
		/// <param name="Range">optional object Range</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="Link">optional object Link</param>
		/// <param name="Attachment">optional object Attachment</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertFile(string fileName, object range=null, object confirmConversions=null, object link=null, object attachment=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, range, confirmConversions, link, attachment);
			Invoker.Method(this, "InsertFile", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">string FileName</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertFile(string fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			Invoker.Method(this, "InsertFile", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Range">NetOffice.WordApi.Range Range</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool InStory(NetOffice.WordApi.Range range)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(range);
			object returnItem = Invoker.MethodReturn(this, "InStory", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Range">NetOffice.WordApi.Range Range</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool InRange(NetOffice.WordApi.Range range)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(range);
			object returnItem = Invoker.MethodReturn(this, "InRange", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Delete(object unit=null, object count=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count);
			object returnItem = Invoker.MethodReturn(this, "Delete", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Delete()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Delete", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Expand(object unit=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit);
			object returnItem = Invoker.MethodReturn(this, "Expand", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Expand()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Expand", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertParagraph()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertParagraph", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertParagraphAfter()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertParagraphAfter", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="NumRows">optional object NumRows</param>
		/// <param name="NumColumns">optional object NumColumns</param>
		/// <param name="InitialColumnWidth">optional object InitialColumnWidth</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="ApplyBorders">optional object ApplyBorders</param>
		/// <param name="ApplyShading">optional object ApplyShading</param>
		/// <param name="ApplyFont">optional object ApplyFont</param>
		/// <param name="ApplyColor">optional object ApplyColor</param>
		/// <param name="ApplyHeadingRows">optional object ApplyHeadingRows</param>
		/// <param name="ApplyLastRow">optional object ApplyLastRow</param>
		/// <param name="ApplyFirstColumn">optional object ApplyFirstColumn</param>
		/// <param name="ApplyLastColumn">optional object ApplyLastColumn</param>
		/// <param name="AutoFit">optional object AutoFit</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Table ConvertToTableOld(object separator=null, object numRows=null, object numColumns=null, object initialColumnWidth=null, object format=null, object applyBorders=null, object applyShading=null, object applyFont=null, object applyColor=null, object applyHeadingRows=null, object applyLastRow=null, object applyFirstColumn=null, object applyLastColumn=null, object autoFit=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(separator, numRows, numColumns, initialColumnWidth, format, applyBorders, applyShading, applyFont, applyColor, applyHeadingRows, applyLastRow, applyFirstColumn, applyLastColumn, autoFit);
			object returnItem = Invoker.MethodReturn(this, "ConvertToTableOld", paramsArray);
			NetOffice.WordApi.Table newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Table;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Table ConvertToTableOld()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ConvertToTableOld", paramsArray);
			NetOffice.WordApi.Table newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Table;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="DateTimeFormat">optional object DateTimeFormat</param>
		/// <param name="InsertAsField">optional object InsertAsField</param>
		/// <param name="InsertAsFullWidth">optional object InsertAsFullWidth</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertDateTimeOld(object dateTimeFormat=null, object insertAsField=null, object insertAsFullWidth=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dateTimeFormat, insertAsField, insertAsFullWidth);
			Invoker.Method(this, "InsertDateTimeOld", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertDateTimeOld()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertDateTimeOld", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="CharacterNumber">Int32 CharacterNumber</param>
		/// <param name="Font">optional object Font</param>
		/// <param name="Unicode">optional object Unicode</param>
		/// <param name="Bias">optional object Bias</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertSymbol(Int32 characterNumber, object font=null, object unicode=null, object bias=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(characterNumber, font, unicode, bias);
			Invoker.Method(this, "InsertSymbol", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="CharacterNumber">Int32 CharacterNumber</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertSymbol(Int32 characterNumber)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(characterNumber);
			Invoker.Method(this, "InsertSymbol", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10
		/// </summary>
		/// <param name="ReferenceType">object ReferenceType</param>
		/// <param name="ReferenceKind">NetOffice.WordApi.Enums.WdReferenceKind ReferenceKind</param>
		/// <param name="ReferenceItem">object ReferenceItem</param>
		/// <param name="InsertAsHyperlink">optional object InsertAsHyperlink</param>
		/// <param name="IncludePosition">optional object IncludePosition</param>
		[SupportByLibrary("Word", 9,10)]
		public void InsertCrossReference(object referenceType, NetOffice.WordApi.Enums.WdReferenceKind referenceKind, object referenceItem, object insertAsHyperlink=null, object includePosition=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(referenceType, referenceKind, referenceItem, insertAsHyperlink, includePosition);
			Invoker.Method(this, "InsertCrossReference", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="ReferenceType">object ReferenceType</param>
		/// <param name="ReferenceKind">NetOffice.WordApi.Enums.WdReferenceKind ReferenceKind</param>
		/// <param name="ReferenceItem">object ReferenceItem</param>
		/// <param name="InsertAsHyperlink">optional object InsertAsHyperlink</param>
		/// <param name="IncludePosition">optional object IncludePosition</param>
		/// <param name="SeparateNumbers">optional object SeparateNumbers</param>
		/// <param name="SeparatorString">optional object SeparatorString</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertCrossReference(object referenceType, NetOffice.WordApi.Enums.WdReferenceKind referenceKind, object referenceItem, object insertAsHyperlink=null, object includePosition=null, object separateNumbers=null, object separatorString=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(referenceType, referenceKind, referenceItem, insertAsHyperlink, includePosition, separateNumbers, separatorString);
			Invoker.Method(this, "InsertCrossReference", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="ReferenceType">object ReferenceType</param>
		/// <param name="ReferenceKind">NetOffice.WordApi.Enums.WdReferenceKind ReferenceKind</param>
		/// <param name="ReferenceItem">object ReferenceItem</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertCrossReference(object referenceType, NetOffice.WordApi.Enums.WdReferenceKind referenceKind, object referenceItem)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(referenceType, referenceKind, referenceItem);
			Invoker.Method(this, "InsertCrossReference", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10
		/// </summary>
		/// <param name="Label">object Label</param>
		/// <param name="Title">optional object Title</param>
		/// <param name="TitleAutoText">optional object TitleAutoText</param>
		/// <param name="Position">optional object Position</param>
		[SupportByLibrary("Word", 9,10)]
		public void InsertCaption(object label, object title=null, object titleAutoText=null, object position=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(label, title, titleAutoText, position);
			Invoker.Method(this, "InsertCaption", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="Label">object Label</param>
		/// <param name="Title">optional object Title</param>
		/// <param name="TitleAutoText">optional object TitleAutoText</param>
		/// <param name="Position">optional object Position</param>
		/// <param name="ExcludeLabel">optional object ExcludeLabel</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertCaption(object label, object title=null, object titleAutoText=null, object position=null, object excludeLabel=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(label, title, titleAutoText, position, excludeLabel);
			Invoker.Method(this, "InsertCaption", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Label">object Label</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertCaption(object label)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(label);
			Invoker.Method(this, "InsertCaption", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void CopyAsPicture()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "CopyAsPicture", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="ExcludeHeader">optional object ExcludeHeader</param>
		/// <param name="FieldNumber">optional object FieldNumber</param>
		/// <param name="SortFieldType">optional object SortFieldType</param>
		/// <param name="SortOrder">optional object SortOrder</param>
		/// <param name="FieldNumber2">optional object FieldNumber2</param>
		/// <param name="SortFieldType2">optional object SortFieldType2</param>
		/// <param name="SortOrder2">optional object SortOrder2</param>
		/// <param name="FieldNumber3">optional object FieldNumber3</param>
		/// <param name="SortFieldType3">optional object SortFieldType3</param>
		/// <param name="SortOrder3">optional object SortOrder3</param>
		/// <param name="SortColumn">optional object SortColumn</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="CaseSensitive">optional object CaseSensitive</param>
		/// <param name="LanguageID">optional object LanguageID</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SortOld(object excludeHeader=null, object fieldNumber=null, object sortFieldType=null, object sortOrder=null, object fieldNumber2=null, object sortFieldType2=null, object sortOrder2=null, object fieldNumber3=null, object sortFieldType3=null, object sortOrder3=null, object sortColumn=null, object separator=null, object caseSensitive=null, object languageID=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(excludeHeader, fieldNumber, sortFieldType, sortOrder, fieldNumber2, sortFieldType2, sortOrder2, fieldNumber3, sortFieldType3, sortOrder3, sortColumn, separator, caseSensitive, languageID);
			Invoker.Method(this, "SortOld", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SortOld()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SortOld", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SortAscending()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SortAscending", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SortDescending()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SortDescending", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Range">NetOffice.WordApi.Range Range</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool IsEqual(NetOffice.WordApi.Range range)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(range);
			object returnItem = Invoker.MethodReturn(this, "IsEqual", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single Calculate()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Calculate", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="What">optional object What</param>
		/// <param name="Which">optional object Which</param>
		/// <param name="Count">optional object Count</param>
		/// <param name="Name">optional object Name</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range GoTo(object what=null, object which=null, object count=null, object name=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(what, which, count, name);
			object returnItem = Invoker.MethodReturn(this, "GoTo", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range GoTo()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GoTo", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="What">NetOffice.WordApi.Enums.WdGoToItem What</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range GoToNext(NetOffice.WordApi.Enums.WdGoToItem what)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(what);
			object returnItem = Invoker.MethodReturn(this, "GoToNext", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="What">NetOffice.WordApi.Enums.WdGoToItem What</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Range GoToPrevious(NetOffice.WordApi.Enums.WdGoToItem what)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(what);
			object returnItem = Invoker.MethodReturn(this, "GoToPrevious", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="IconIndex">optional object IconIndex</param>
		/// <param name="Link">optional object Link</param>
		/// <param name="Placement">optional object Placement</param>
		/// <param name="DisplayAsIcon">optional object DisplayAsIcon</param>
		/// <param name="DataType">optional object DataType</param>
		/// <param name="IconFileName">optional object IconFileName</param>
		/// <param name="IconLabel">optional object IconLabel</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PasteSpecial(object iconIndex=null, object link=null, object placement=null, object displayAsIcon=null, object dataType=null, object iconFileName=null, object iconLabel=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(iconIndex, link, placement, displayAsIcon, dataType, iconFileName, iconLabel);
			Invoker.Method(this, "PasteSpecial", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PasteSpecial()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PasteSpecial", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Field PreviousField()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PreviousField", paramsArray);
			NetOffice.WordApi.Field newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Field;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Field NextField()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "NextField", paramsArray);
			NetOffice.WordApi.Field newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Field;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertParagraphBefore()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertParagraphBefore", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="ShiftCells">optional object ShiftCells</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertCells(object shiftCells=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(shiftCells);
			Invoker.Method(this, "InsertCells", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertCells()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertCells", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Character">optional object Character</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Extend(object character=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(character);
			Invoker.Method(this, "Extend", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Extend()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Extend", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Shrink()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Shrink", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveLeft(object unit=null, object count=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count, extend);
			object returnItem = Invoker.MethodReturn(this, "MoveLeft", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveLeft()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MoveLeft", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveRight(object unit=null, object count=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count, extend);
			object returnItem = Invoker.MethodReturn(this, "MoveRight", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveRight()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MoveRight", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveUp(object unit=null, object count=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count, extend);
			object returnItem = Invoker.MethodReturn(this, "MoveUp", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveUp()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MoveUp", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Count">optional object Count</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveDown(object unit=null, object count=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, count, extend);
			object returnItem = Invoker.MethodReturn(this, "MoveDown", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 MoveDown()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "MoveDown", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 HomeKey(object unit=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, extend);
			object returnItem = Invoker.MethodReturn(this, "HomeKey", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 HomeKey()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "HomeKey", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Unit">optional object Unit</param>
		/// <param name="Extend">optional object Extend</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 EndKey(object unit=null, object extend=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unit, extend);
			object returnItem = Invoker.MethodReturn(this, "EndKey", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 EndKey()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "EndKey", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void EscapeKey()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "EscapeKey", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Text">string Text</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void TypeText(string text)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(text);
			Invoker.Method(this, "TypeText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void CopyFormat()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "CopyFormat", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PasteFormat()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PasteFormat", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void TypeParagraph()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "TypeParagraph", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void TypeBackspace()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "TypeBackspace", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void NextSubdocument()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "NextSubdocument", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PreviousSubdocument()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PreviousSubdocument", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectColumn()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectColumn", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectCurrentFont()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectCurrentFont", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectCurrentAlignment()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectCurrentAlignment", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectCurrentSpacing()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectCurrentSpacing", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectCurrentIndent()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectCurrentIndent", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectCurrentTabs()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectCurrentTabs", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectCurrentColor()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectCurrentColor", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void CreateTextbox()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "CreateTextbox", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void WholeStory()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "WholeStory", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectRow()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectRow", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SplitTable()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SplitTable", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="NumRows">optional object NumRows</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertRows(object numRows=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numRows);
			Invoker.Method(this, "InsertRows", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertRows()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertRows", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertColumns()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertColumns", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Formula">optional object Formula</param>
		/// <param name="NumberFormat">optional object NumberFormat</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertFormula(object formula=null, object numberFormat=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(formula, numberFormat);
			Invoker.Method(this, "InsertFormula", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertFormula()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertFormula", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Wrap">optional object Wrap</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Revision NextRevision(object wrap=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(wrap);
			object returnItem = Invoker.MethodReturn(this, "NextRevision", paramsArray);
			NetOffice.WordApi.Revision newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Revision;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Revision NextRevision()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "NextRevision", paramsArray);
			NetOffice.WordApi.Revision newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Revision;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Wrap">optional object Wrap</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Revision PreviousRevision(object wrap=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(wrap);
			object returnItem = Invoker.MethodReturn(this, "PreviousRevision", paramsArray);
			NetOffice.WordApi.Revision newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Revision;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Revision PreviousRevision()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "PreviousRevision", paramsArray);
			NetOffice.WordApi.Revision newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Revision;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PasteAsNestedTable()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PasteAsNestedTable", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="StyleName">string StyleName</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.AutoTextEntry CreateAutoTextEntry(string name, string styleName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, styleName);
			object returnItem = Invoker.MethodReturn(this, "CreateAutoTextEntry", paramsArray);
			NetOffice.WordApi.AutoTextEntry newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.AutoTextEntry;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void DetectLanguage()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "DetectLanguage", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SelectCell()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SelectCell", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="NumRows">optional object NumRows</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertRowsBelow(object numRows=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numRows);
			Invoker.Method(this, "InsertRowsBelow", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertRowsBelow()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertRowsBelow", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertColumnsRight()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertColumnsRight", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="NumRows">optional object NumRows</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertRowsAbove(object numRows=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(numRows);
			Invoker.Method(this, "InsertRowsAbove", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertRowsAbove()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertRowsAbove", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void RtlRun()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "RtlRun", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void LtrRun()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "LtrRun", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void BoldRun()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "BoldRun", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ItalicRun()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ItalicRun", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void RtlPara()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "RtlPara", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void LtrPara()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "LtrPara", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="DateTimeFormat">optional object DateTimeFormat</param>
		/// <param name="InsertAsField">optional object InsertAsField</param>
		/// <param name="InsertAsFullWidth">optional object InsertAsFullWidth</param>
		/// <param name="DateLanguage">optional object DateLanguage</param>
		/// <param name="CalendarType">optional object CalendarType</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertDateTime(object dateTimeFormat=null, object insertAsField=null, object insertAsFullWidth=null, object dateLanguage=null, object calendarType=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dateTimeFormat, insertAsField, insertAsFullWidth, dateLanguage, calendarType);
			Invoker.Method(this, "InsertDateTime", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void InsertDateTime()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertDateTime", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9
		/// </summary>
		/// <param name="ExcludeHeader">optional object ExcludeHeader</param>
		/// <param name="FieldNumber">optional object FieldNumber</param>
		/// <param name="SortFieldType">optional object SortFieldType</param>
		/// <param name="SortOrder">optional object SortOrder</param>
		/// <param name="FieldNumber2">optional object FieldNumber2</param>
		/// <param name="SortFieldType2">optional object SortFieldType2</param>
		/// <param name="SortOrder2">optional object SortOrder2</param>
		/// <param name="FieldNumber3">optional object FieldNumber3</param>
		/// <param name="SortFieldType3">optional object SortFieldType3</param>
		/// <param name="SortOrder3">optional object SortOrder3</param>
		/// <param name="SortColumn">optional object SortColumn</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="CaseSensitive">optional object CaseSensitive</param>
		/// <param name="BidiSort">optional object BidiSort</param>
		/// <param name="IgnoreThe">optional object IgnoreThe</param>
		/// <param name="IgnoreKashida">optional object IgnoreKashida</param>
		/// <param name="IgnoreDiacritics">optional object IgnoreDiacritics</param>
		/// <param name="IgnoreHe">optional object IgnoreHe</param>
		/// <param name="LanguageID">optional object LanguageID</param>
		[SupportByLibrary("Word", 9)]
		public void Sort(object excludeHeader=null, object fieldNumber=null, object sortFieldType=null, object sortOrder=null, object fieldNumber2=null, object sortFieldType2=null, object sortOrder2=null, object fieldNumber3=null, object sortFieldType3=null, object sortOrder3=null, object sortColumn=null, object separator=null, object caseSensitive=null, object bidiSort=null, object ignoreThe=null, object ignoreKashida=null, object ignoreDiacritics=null, object ignoreHe=null, object languageID=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(excludeHeader, fieldNumber, sortFieldType, sortOrder, fieldNumber2, sortFieldType2, sortOrder2, fieldNumber3, sortFieldType3, sortOrder3, sortColumn, separator, caseSensitive, bidiSort, ignoreThe, ignoreKashida, ignoreDiacritics, ignoreHe, languageID);
			Invoker.Method(this, "Sort", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="ExcludeHeader">optional object ExcludeHeader</param>
		/// <param name="FieldNumber">optional object FieldNumber</param>
		/// <param name="SortFieldType">optional object SortFieldType</param>
		/// <param name="SortOrder">optional object SortOrder</param>
		/// <param name="FieldNumber2">optional object FieldNumber2</param>
		/// <param name="SortFieldType2">optional object SortFieldType2</param>
		/// <param name="SortOrder2">optional object SortOrder2</param>
		/// <param name="FieldNumber3">optional object FieldNumber3</param>
		/// <param name="SortFieldType3">optional object SortFieldType3</param>
		/// <param name="SortOrder3">optional object SortOrder3</param>
		/// <param name="SortColumn">optional object SortColumn</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="CaseSensitive">optional object CaseSensitive</param>
		/// <param name="BidiSort">optional object BidiSort</param>
		/// <param name="IgnoreThe">optional object IgnoreThe</param>
		/// <param name="IgnoreKashida">optional object IgnoreKashida</param>
		/// <param name="IgnoreDiacritics">optional object IgnoreDiacritics</param>
		/// <param name="IgnoreHe">optional object IgnoreHe</param>
		/// <param name="LanguageID">optional object LanguageID</param>
		/// <param name="SubFieldNumber">optional object SubFieldNumber</param>
		/// <param name="SubFieldNumber2">optional object SubFieldNumber2</param>
		/// <param name="SubFieldNumber3">optional object SubFieldNumber3</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void Sort(object excludeHeader=null, object fieldNumber=null, object sortFieldType=null, object sortOrder=null, object fieldNumber2=null, object sortFieldType2=null, object sortOrder2=null, object fieldNumber3=null, object sortFieldType3=null, object sortOrder3=null, object sortColumn=null, object separator=null, object caseSensitive=null, object bidiSort=null, object ignoreThe=null, object ignoreKashida=null, object ignoreDiacritics=null, object ignoreHe=null, object languageID=null, object subFieldNumber=null, object subFieldNumber2=null, object subFieldNumber3=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(excludeHeader, fieldNumber, sortFieldType, sortOrder, fieldNumber2, sortFieldType2, sortOrder2, fieldNumber3, sortFieldType3, sortOrder3, sortColumn, separator, caseSensitive, bidiSort, ignoreThe, ignoreKashida, ignoreDiacritics, ignoreHe, languageID, subFieldNumber, subFieldNumber2, subFieldNumber3);
			Invoker.Method(this, "Sort", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Sort()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Sort", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="NumRows">optional object NumRows</param>
		/// <param name="NumColumns">optional object NumColumns</param>
		/// <param name="InitialColumnWidth">optional object InitialColumnWidth</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="ApplyBorders">optional object ApplyBorders</param>
		/// <param name="ApplyShading">optional object ApplyShading</param>
		/// <param name="ApplyFont">optional object ApplyFont</param>
		/// <param name="ApplyColor">optional object ApplyColor</param>
		/// <param name="ApplyHeadingRows">optional object ApplyHeadingRows</param>
		/// <param name="ApplyLastRow">optional object ApplyLastRow</param>
		/// <param name="ApplyFirstColumn">optional object ApplyFirstColumn</param>
		/// <param name="ApplyLastColumn">optional object ApplyLastColumn</param>
		/// <param name="AutoFit">optional object AutoFit</param>
		/// <param name="AutoFitBehavior">optional object AutoFitBehavior</param>
		/// <param name="DefaultTableBehavior">optional object DefaultTableBehavior</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Table ConvertToTable(object separator=null, object numRows=null, object numColumns=null, object initialColumnWidth=null, object format=null, object applyBorders=null, object applyShading=null, object applyFont=null, object applyColor=null, object applyHeadingRows=null, object applyLastRow=null, object applyFirstColumn=null, object applyLastColumn=null, object autoFit=null, object autoFitBehavior=null, object defaultTableBehavior=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(separator, numRows, numColumns, initialColumnWidth, format, applyBorders, applyShading, applyFont, applyColor, applyHeadingRows, applyLastRow, applyFirstColumn, applyLastColumn, autoFit, autoFitBehavior, defaultTableBehavior);
			object returnItem = Invoker.MethodReturn(this, "ConvertToTable", paramsArray);
			NetOffice.WordApi.Table newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Table;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Table ConvertToTable()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ConvertToTable", paramsArray);
			NetOffice.WordApi.Table newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Table;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="ExcludeHeader">optional object ExcludeHeader</param>
		/// <param name="FieldNumber">optional object FieldNumber</param>
		/// <param name="SortFieldType">optional object SortFieldType</param>
		/// <param name="SortOrder">optional object SortOrder</param>
		/// <param name="FieldNumber2">optional object FieldNumber2</param>
		/// <param name="SortFieldType2">optional object SortFieldType2</param>
		/// <param name="SortOrder2">optional object SortOrder2</param>
		/// <param name="FieldNumber3">optional object FieldNumber3</param>
		/// <param name="SortFieldType3">optional object SortFieldType3</param>
		/// <param name="SortOrder3">optional object SortOrder3</param>
		/// <param name="SortColumn">optional object SortColumn</param>
		/// <param name="Separator">optional object Separator</param>
		/// <param name="CaseSensitive">optional object CaseSensitive</param>
		/// <param name="BidiSort">optional object BidiSort</param>
		/// <param name="IgnoreThe">optional object IgnoreThe</param>
		/// <param name="IgnoreKashida">optional object IgnoreKashida</param>
		/// <param name="IgnoreDiacritics">optional object IgnoreDiacritics</param>
		/// <param name="IgnoreHe">optional object IgnoreHe</param>
		/// <param name="LanguageID">optional object LanguageID</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void Sort2000(object excludeHeader=null, object fieldNumber=null, object sortFieldType=null, object sortOrder=null, object fieldNumber2=null, object sortFieldType2=null, object sortOrder2=null, object fieldNumber3=null, object sortFieldType3=null, object sortOrder3=null, object sortColumn=null, object separator=null, object caseSensitive=null, object bidiSort=null, object ignoreThe=null, object ignoreKashida=null, object ignoreDiacritics=null, object ignoreHe=null, object languageID=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(excludeHeader, fieldNumber, sortFieldType, sortOrder, fieldNumber2, sortFieldType2, sortOrder2, fieldNumber3, sortFieldType3, sortOrder3, sortColumn, separator, caseSensitive, bidiSort, ignoreThe, ignoreKashida, ignoreDiacritics, ignoreHe, languageID);
			Invoker.Method(this, "Sort2000", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void Sort2000()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Sort2000", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void ClearFormatting()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ClearFormatting", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void PasteAppendTable()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PasteAppendTable", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void ToggleCharacterCode()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ToggleCharacterCode", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="Type">NetOffice.WordApi.Enums.WdRecoveryType Type</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void PasteAndFormat(NetOffice.WordApi.Enums.WdRecoveryType type)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(type);
			Invoker.Method(this, "PasteAndFormat", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="LinkedToExcel">bool LinkedToExcel</param>
		/// <param name="WordFormatting">bool WordFormatting</param>
		/// <param name="RTF">bool RTF</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void PasteExcelTable(bool linkedToExcel, bool wordFormatting, bool rTF)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(linkedToExcel, wordFormatting, rTF);
			Invoker.Method(this, "PasteExcelTable", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void ShrinkDiscontiguousSelection()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ShrinkDiscontiguousSelection", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void InsertStyleSeparator()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertStyleSeparator", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="ReferenceType">object ReferenceType</param>
		/// <param name="ReferenceKind">NetOffice.WordApi.Enums.WdReferenceKind ReferenceKind</param>
		/// <param name="ReferenceItem">object ReferenceItem</param>
		/// <param name="InsertAsHyperlink">optional object InsertAsHyperlink</param>
		/// <param name="IncludePosition">optional object IncludePosition</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertCrossReference_2002(object referenceType, NetOffice.WordApi.Enums.WdReferenceKind referenceKind, object referenceItem, object insertAsHyperlink=null, object includePosition=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(referenceType, referenceKind, referenceItem, insertAsHyperlink, includePosition);
			Invoker.Method(this, "InsertCrossReference_2002", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="ReferenceType">object ReferenceType</param>
		/// <param name="ReferenceKind">NetOffice.WordApi.Enums.WdReferenceKind ReferenceKind</param>
		/// <param name="ReferenceItem">object ReferenceItem</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertCrossReference_2002(object referenceType, NetOffice.WordApi.Enums.WdReferenceKind referenceKind, object referenceItem)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(referenceType, referenceKind, referenceItem);
			Invoker.Method(this, "InsertCrossReference_2002", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="Label">object Label</param>
		/// <param name="Title">optional object Title</param>
		/// <param name="TitleAutoText">optional object TitleAutoText</param>
		/// <param name="Position">optional object Position</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertCaptionXP(object label, object title=null, object titleAutoText=null, object position=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(label, title, titleAutoText, position);
			Invoker.Method(this, "InsertCaptionXP", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="Label">object Label</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertCaptionXP(object label)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(label);
			Invoker.Method(this, "InsertCaptionXP", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="EditorID">optional object EditorID</param>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.Range GoToEditableRange(object editorID=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(editorID);
			object returnItem = Invoker.MethodReturn(this, "GoToEditableRange", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.Range GoToEditableRange()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GoToEditableRange", paramsArray);
			NetOffice.WordApi.Range newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Range;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="XML">string XML</param>
		/// <param name="Transform">optional object Transform</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertXML(string xML, object transform=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(xML, transform);
			Invoker.Method(this, "InsertXML", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="XML">string XML</param>
		[SupportByLibrary("Word", 11,12,14)]
		public void InsertXML(string xML)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(xML);
			Invoker.Method(this, "InsertXML", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ClearParagraphStyle()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ClearParagraphStyle", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ClearCharacterAllFormatting()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ClearCharacterAllFormatting", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ClearCharacterStyle()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ClearCharacterStyle", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ClearCharacterDirectFormatting()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ClearCharacterDirectFormatting", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		/// <param name="OutputFileName">string OutputFileName</param>
		/// <param name="ExportFormat">NetOffice.WordApi.Enums.WdExportFormat ExportFormat</param>
		/// <param name="OpenAfterExport">bool OpenAfterExport</param>
		/// <param name="OptimizeFor">NetOffice.WordApi.Enums.WdExportOptimizeFor OptimizeFor</param>
		/// <param name="ExportCurrentPage">bool ExportCurrentPage</param>
		/// <param name="Item">NetOffice.WordApi.Enums.WdExportItem Item</param>
		/// <param name="IncludeDocProps">bool IncludeDocProps</param>
		/// <param name="KeepIRM">bool KeepIRM</param>
		/// <param name="CreateBookmarks">NetOffice.WordApi.Enums.WdExportCreateBookmarks CreateBookmarks</param>
		/// <param name="DocStructureTags">bool DocStructureTags</param>
		/// <param name="BitmapMissingFonts">bool BitmapMissingFonts</param>
		/// <param name="UseISO19005_1">bool UseISO19005_1</param>
		/// <param name="FixedFormatExtClassPtr">optional object FixedFormatExtClassPtr</param>
		[SupportByLibrary("Word", 12,14)]
		public void ExportAsFixedFormat(string outputFileName, NetOffice.WordApi.Enums.WdExportFormat exportFormat, bool openAfterExport, NetOffice.WordApi.Enums.WdExportOptimizeFor optimizeFor, bool exportCurrentPage, NetOffice.WordApi.Enums.WdExportItem item, bool includeDocProps, bool keepIRM, NetOffice.WordApi.Enums.WdExportCreateBookmarks createBookmarks, bool docStructureTags, bool bitmapMissingFonts, bool useISO19005_1, object fixedFormatExtClassPtr=null)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(outputFileName, exportFormat, openAfterExport, optimizeFor, exportCurrentPage, item, includeDocProps, keepIRM, createBookmarks, docStructureTags, bitmapMissingFonts, useISO19005_1, fixedFormatExtClassPtr);
			Invoker.Method(this, "ExportAsFixedFormat", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		/// <param name="OutputFileName">string OutputFileName</param>
		/// <param name="ExportFormat">NetOffice.WordApi.Enums.WdExportFormat ExportFormat</param>
		/// <param name="OpenAfterExport">bool OpenAfterExport</param>
		/// <param name="OptimizeFor">NetOffice.WordApi.Enums.WdExportOptimizeFor OptimizeFor</param>
		/// <param name="ExportCurrentPage">bool ExportCurrentPage</param>
		/// <param name="Item">NetOffice.WordApi.Enums.WdExportItem Item</param>
		/// <param name="IncludeDocProps">bool IncludeDocProps</param>
		/// <param name="KeepIRM">bool KeepIRM</param>
		/// <param name="CreateBookmarks">NetOffice.WordApi.Enums.WdExportCreateBookmarks CreateBookmarks</param>
		/// <param name="DocStructureTags">bool DocStructureTags</param>
		/// <param name="BitmapMissingFonts">bool BitmapMissingFonts</param>
		/// <param name="UseISO19005_1">bool UseISO19005_1</param>
		[SupportByLibrary("Word", 12,14)]
		public void ExportAsFixedFormat(string outputFileName, NetOffice.WordApi.Enums.WdExportFormat exportFormat, bool openAfterExport, NetOffice.WordApi.Enums.WdExportOptimizeFor optimizeFor, bool exportCurrentPage, NetOffice.WordApi.Enums.WdExportItem item, bool includeDocProps, bool keepIRM, NetOffice.WordApi.Enums.WdExportCreateBookmarks createBookmarks, bool docStructureTags, bool bitmapMissingFonts, bool useISO19005_1)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(outputFileName, exportFormat, openAfterExport, optimizeFor, exportCurrentPage, item, includeDocProps, keepIRM, createBookmarks, docStructureTags, bitmapMissingFonts, useISO19005_1);
			Invoker.Method(this, "ExportAsFixedFormat", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ReadingModeGrowFont()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ReadingModeGrowFont", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ReadingModeShrinkFont()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ReadingModeShrinkFont", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ClearParagraphAllFormatting()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ClearParagraphAllFormatting", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void ClearParagraphDirectFormatting()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ClearParagraphDirectFormatting", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public void InsertNewPage()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "InsertNewPage", paramsArray);
		}

		#endregion
		#pragma warning restore
	}
}