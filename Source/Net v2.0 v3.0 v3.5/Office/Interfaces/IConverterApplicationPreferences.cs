//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Reflection;
using LateBindingApi.Core;
namespace NetOffice.OfficeApi
{
	///<summary>
	/// Interface IConverterApplicationPreferences SupportByLibrary OF14 
	///</summary>
	[SupportByLibrary("OF14")]
	[EntityTypeAttribute(EntityType.IsInterface)]
	public class IConverterApplicationPreferences : COMObject
	{
		#pragma warning disable
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IConverterApplicationPreferences(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IConverterApplicationPreferences(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IConverterApplicationPreferences(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IConverterApplicationPreferences()
		{
		}
		
		#endregion
		
		#region Properties

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary OF14 
		/// </summary>
		/// <param name="plcid">ref Int32 plcid</param>
		[SupportByLibrary("OF14")]
		public Int32 HrGetLcid(ref Int32 plcid)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(plcid);
			object returnItem = Invoker.MethodReturn(this, "HrGetLcid", paramsArray);
			plcid = (Int32)paramsArray[0];
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OF14 
		/// </summary>
		/// <param name="phwnd">ref Int32 phwnd</param>
		[SupportByLibrary("OF14")]
		public Int32 HrGetHwnd(ref Int32 phwnd)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(phwnd);
			object returnItem = Invoker.MethodReturn(this, "HrGetHwnd", paramsArray);
			phwnd = (Int32)paramsArray[0];
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OF14 
		/// </summary>
		/// <param name="pbstrApplication">ref string pbstrApplication</param>
		[SupportByLibrary("OF14")]
		public Int32 HrGetApplication(ref string pbstrApplication)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(pbstrApplication);
			object returnItem = Invoker.MethodReturn(this, "HrGetApplication", paramsArray);
			pbstrApplication = (string)paramsArray[0];
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OF14 
		/// </summary>
		/// <param name="pFormat">ref Int32 pFormat</param>
		[SupportByLibrary("OF14")]
		public Int32 HrCheckFormat(ref Int32 pFormat)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(pFormat);
			object returnItem = Invoker.MethodReturn(this, "HrCheckFormat", paramsArray);
			pFormat = (Int32)paramsArray[0];
			return (Int32)returnItem;
		}

		#endregion
		#pragma warning restore
	}
}