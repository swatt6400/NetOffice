//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Reflection;
using LateBindingApi.Core;
namespace NetOffice.OWC10Api
{
	///<summary>
	/// Interface INavUIHost SupportByLibrary OWC10, 1
	///</summary>
	[SupportByLibrary("OWC10", 1)]
	[EntityTypeAttribute(EntityType.IsInterface)]
	public class INavUIHost : COMObject
	{
		#pragma warning disable
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public INavUIHost(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public INavUIHost(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public INavUIHost(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public INavUIHost()
		{
		}
		
		#endregion
		
		#region Properties

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		/// <param name="navbtn">Int32 navbtn</param>
		[SupportByLibrary("OWC10", 1)]
		public Int32 IsButtonEnabled(Int32 navbtn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(navbtn);
			object returnItem = Invoker.MethodReturn(this, "IsButtonEnabled", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		/// <param name="navbtn">Int32 navbtn</param>
		/// <param name="Cancel">Int32 Cancel</param>
		[SupportByLibrary("OWC10", 1)]
		public Int32 BeforeButtonClick(Int32 navbtn, Int32 cancel)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(navbtn, cancel);
			object returnItem = Invoker.MethodReturn(this, "BeforeButtonClick", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		/// <param name="navbtn">Int32 navbtn</param>
		[SupportByLibrary("OWC10", 1)]
		public Int32 AfterButtonClick(Int32 navbtn)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(navbtn);
			object returnItem = Invoker.MethodReturn(this, "AfterButtonClick", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		/// <param name="DisplayText">string DisplayText</param>
		[SupportByLibrary("OWC10", 1)]
		public Int32 GetDisplayText(string displayText)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(displayText);
			object returnItem = Invoker.MethodReturn(this, "GetDisplayText", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		[SupportByLibrary("OWC10", 1)]
		public Int32 OnNavUIChange()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "OnNavUIChange", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		[SupportByLibrary("OWC10", 1)]
		public Int32 IsFilterOn()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "IsFilterOn", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		[SupportByLibrary("OWC10", 1)]
		public Int32 IsContextBiDi()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "IsContextBiDi", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary OWC10 1
		/// </summary>
		/// <param name="FontName">string FontName</param>
		[SupportByLibrary("OWC10", 1)]
		public Int32 GetFontName(string fontName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fontName);
			object returnItem = Invoker.MethodReturn(this, "GetFontName", paramsArray);
			return (Int32)returnItem;
		}

		#endregion
		#pragma warning restore
	}
}