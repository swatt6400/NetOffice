//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using LateBindingApi.Core;
namespace NetOffice.OWC10Api
{
	///<summary>
	/// DispatchInterface IDataSourceControl SupportByLibrary XWC1.0 
	///</summary>
	[SupportByLibrary("XWC1.0")]
	[EntityTypeAttribute(EntityType.IsDispatchInterface)]
	public class IDataSourceControl : COMObject
	{
		#pragma warning disable
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDataSourceControl(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDataSourceControl(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDataSourceControl(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public IDataSourceControl()
		{
		}
		
		#endregion
		
		#region Properties

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string ConnectionString
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ConnectionString", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ConnectionString", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string CurrentDirectory
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CurrentDirectory", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool UseRemoteProvider
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UseRemoteProvider", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UseRemoteProvider", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.ADODBApi.Connection Connection
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Connection", paramsArray);
				NetOffice.ADODBApi.Connection newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.ADODBApi.Connection;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool DataEntry
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DataEntry", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DataEntry", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public Int32 MaxRecords
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MaxRecords", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "MaxRecords", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.ADODBApi.Recordset DefaultRecordset
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultRecordset", paramsArray);
				NetOffice.ADODBApi.Recordset newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.ADODBApi.Recordset;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.SchemaRowsources SchemaRowsources
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SchemaRowsources", paramsArray);
				NetOffice.OWC10Api.SchemaRowsources newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.SchemaRowsources;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.SchemaRelationships SchemaRelationships
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SchemaRelationships", paramsArray);
				NetOffice.OWC10Api.SchemaRelationships newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.SchemaRelationships;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.PageRowsources PageRowsources
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PageRowsources", paramsArray);
				NetOffice.OWC10Api.PageRowsources newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.PageRowsources;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.RecordsetDefs RecordsetDefs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "RecordsetDefs", paramsArray);
				NetOffice.OWC10Api.RecordsetDefs newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.RecordsetDefs;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.RecordsetDefs RootRecordsetDefs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "RootRecordsetDefs", paramsArray);
				NetOffice.OWC10Api.RecordsetDefs newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.RecordsetDefs;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public COMObject PivotDefs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PivotDefs", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string DefaultRecordsetName
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultRecordsetName", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultRecordsetName", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string XMLData
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "XMLData", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "XMLData", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.GroupLevels GroupLevels
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GroupLevels", paramsArray);
				NetOffice.OWC10Api.GroupLevels newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.GroupLevels;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public COMObject Constants
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Constants", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.ElementExtensions ElementExtensions
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ElementExtensions", paramsArray);
				NetOffice.OWC10Api.ElementExtensions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.ElementExtensions;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool IsNew
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "IsNew", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "IsNew", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Enums.DscRecordsetTypeEnum RecordsetType
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "RecordsetType", paramsArray);
				return (NetOffice.OWC10Api.Enums.DscRecordsetTypeEnum)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "RecordsetType", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.AllPageFields AllPageFields
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AllPageFields", paramsArray);
				NetOffice.OWC10Api.AllPageFields newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.AllPageFields;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Section CurrentSection
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CurrentSection", paramsArray);
				NetOffice.OWC10Api.Section newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.Section;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="DataMember">optional object DataMember</param>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Enums.ProviderType get_ProviderType(object dataMember)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dataMember);
			object returnItem = Invoker.PropertyGet(this, "ProviderType", paramsArray);
			return (NetOffice.OWC10Api.Enums.ProviderType)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Enums.ProviderType ProviderType
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ProviderType", paramsArray);
				return (NetOffice.OWC10Api.Enums.ProviderType)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.AllGroupingDefs AllGroupingDefs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AllGroupingDefs", paramsArray);
				NetOffice.OWC10Api.AllGroupingDefs newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.AllGroupingDefs;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool DisplayAlerts
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayAlerts", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayAlerts", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.DataPages DataPages
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DataPages", paramsArray);
				NetOffice.OWC10Api.DataPages newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.DataPages;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public Int32 GridX
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GridX", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GridX", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public Int32 GridY
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "GridY", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "GridY", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public Int32 LoadError
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LoadError", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Enums.DefaultControlTypeEnum DefaultControlType
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultControlType", paramsArray);
				return (NetOffice.OWC10Api.Enums.DefaultControlTypeEnum)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultControlType", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool IsDirty
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "IsDirty", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "IsDirty", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool Busy
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Busy", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string Version
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Version", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public Int32 MajorVersion
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MajorVersion", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string MinorVersion
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MinorVersion", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string BuildNumber
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "BuildNumber", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string RevisionNumber
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "RevisionNumber", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool IsDataModelDirty
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "IsDataModelDirty", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "IsDataModelDirty", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Enums.DscOfflineTypeEnum OfflineType
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "OfflineType", paramsArray);
				return (NetOffice.OWC10Api.Enums.DscOfflineTypeEnum)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "OfflineType", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string OfflinePublication
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "OfflinePublication", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "OfflinePublication", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool Offline
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Offline", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string OfflineSource
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "OfflineSource", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "OfflineSource", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Enums.DscXMLLocationEnum XMLLocation
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "XMLLocation", paramsArray);
				return (NetOffice.OWC10Api.Enums.DscXMLLocationEnum)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "XMLLocation", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public bool UseXMLData
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UseXMLData", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UseXMLData", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string XMLDataTarget
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "XMLDataTarget", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "XMLDataTarget", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string ConnectionFile
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ConnectionFile", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ConnectionFile", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string DefaultRecordsetDefName
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultRecordsetDefName", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string ConnectionStringFullPath
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ConnectionStringFullPath", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.SchemaDiagrams SchemaDiagrams
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SchemaDiagrams", paramsArray);
				NetOffice.OWC10Api.SchemaDiagrams newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OWC10Api.SchemaDiagrams;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public string DBNSOwnerName
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DBNSOwnerName", paramsArray);
				return (string)returnItem;
			}
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="RecordsetName">string RecordsetName</param>
		/// <param name="ExecuteOption">NetOffice.ADODBApi.Enums.ExecuteOptionEnum ExecuteOption</param>
		/// <param name="FetchType">NetOffice.OWC10Api.Enums.DscFetchTypeEnum FetchType</param>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.ADODBApi.Recordset Execute(string recordsetName, NetOffice.ADODBApi.Enums.ExecuteOptionEnum executeOption, NetOffice.OWC10Api.Enums.DscFetchTypeEnum fetchType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(recordsetName, executeOption, fetchType);
			object returnItem = Invoker.MethodReturn(this, "Execute", paramsArray);
			NetOffice.ADODBApi.Recordset newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.ADODBApi.Recordset;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="DataAssistant">object DataAssistant</param>
		[SupportByLibrary("XWC1.0")]
		public void SetDataAssistant(object dataAssistant)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(dataAssistant);
			Invoker.Method(this, "SetDataAssistant", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Advise">object Advise</param>
		/// <param name="SinkName">string SinkName</param>
		[SupportByLibrary("XWC1.0")]
		public void DesignAdvise(object advise, string sinkName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(advise, sinkName);
			Invoker.Method(this, "DesignAdvise", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="SinkName">string SinkName</param>
		[SupportByLibrary("XWC1.0")]
		public void DesignUnAdvise(string sinkName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(sinkName);
			Invoker.Method(this, "DesignUnAdvise", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="pUnknownDropGoo">object pUnknownDropGoo</param>
		/// <param name="bstrRecordSetDefName">string bstrRecordSetDefName</param>
		/// <param name="dl">NetOffice.OWC10Api.Enums.DscDropLocationEnum dl</param>
		/// <param name="dt">NetOffice.OWC10Api.Enums.DscDropTypeEnum dt</param>
		/// <param name="PageRowsource">string PageRowsource</param>
		/// <param name="SchemaRelationship">string SchemaRelationship</param>
		[SupportByLibrary("XWC1.0")]
		public void ProcessDrop(object pUnknownDropGoo, string bstrRecordSetDefName, NetOffice.OWC10Api.Enums.DscDropLocationEnum dl, NetOffice.OWC10Api.Enums.DscDropTypeEnum dt, string pageRowsource, string schemaRelationship)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(pUnknownDropGoo, bstrRecordSetDefName, dl, dt, pageRowsource, schemaRelationship);
			Invoker.Method(this, "ProcessDrop", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Rowsources">object Rowsources</param>
		/// <param name="Relationships">object Relationships</param>
		/// <param name="Fields">object Fields</param>
		/// <param name="bstrRecordSetDefName">string bstrRecordSetDefName</param>
		/// <param name="dl">NetOffice.OWC10Api.Enums.DscDropLocationEnum dl</param>
		/// <param name="dt">NetOffice.OWC10Api.Enums.DscDropTypeEnum dt</param>
		/// <param name="PageRowsource">string PageRowsource</param>
		/// <param name="SchemaRelationship">string SchemaRelationship</param>
		[SupportByLibrary("XWC1.0")]
		public void ScriptDrop(object rowsources, object relationships, object fields, string bstrRecordSetDefName, NetOffice.OWC10Api.Enums.DscDropLocationEnum dl, NetOffice.OWC10Api.Enums.DscDropTypeEnum dt, string pageRowsource, string schemaRelationship)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(rowsources, relationships, fields, bstrRecordSetDefName, dl, dt, pageRowsource, schemaRelationship);
			Invoker.Method(this, "ScriptDrop", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Element">object Element</param>
		[SupportByLibrary("XWC1.0")]
		public NetOffice.OWC10Api.Section GetContainingSection(object element)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(element);
			object returnItem = Invoker.MethodReturn(this, "GetContainingSection", paramsArray);
			NetOffice.OWC10Api.Section newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.OWC10Api.Section;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Rowsources">object Rowsources</param>
		/// <param name="Relationships">object Relationships</param>
		/// <param name="Fields">object Fields</param>
		/// <param name="RecordsetDef">string RecordsetDef</param>
		/// <param name="dl">NetOffice.OWC10Api.Enums.DscDropLocationEnum dl</param>
		/// <param name="dt">NetOffice.OWC10Api.Enums.DscDropTypeEnum dt</param>
		/// <param name="DropRowsource">ref string DropRowsource</param>
		/// <param name="RowsourcesOut">ref object RowsourcesOut</param>
		/// <param name="RelationshipsOut">ref object RelationshipsOut</param>
		[SupportByLibrary("XWC1.0")]
		public void ScriptValidate(object rowsources, object relationships, object fields, string recordsetDef, NetOffice.OWC10Api.Enums.DscDropLocationEnum dl, NetOffice.OWC10Api.Enums.DscDropTypeEnum dt, ref string dropRowsource, ref object rowsourcesOut, ref object relationshipsOut)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,false,false,false,false,false,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(rowsources, relationships, fields, recordsetDef, dl, dt, dropRowsource, rowsourcesOut, relationshipsOut);
			Invoker.Method(this, "ScriptValidate", paramsArray, modifiers);
			dropRowsource = (string)paramsArray[6];
			rowsourcesOut = (object)paramsArray[7];
			relationshipsOut = (object)paramsArray[8];
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="UnknownDropGoo">object UnknownDropGoo</param>
		/// <param name="RecordSetDefName">string RecordSetDefName</param>
		/// <param name="Location">NetOffice.OWC10Api.Enums.DscDropLocationEnum Location</param>
		/// <param name="Type">NetOffice.OWC10Api.Enums.DscDropTypeEnum Type</param>
		/// <param name="DropRowsource">ref string DropRowsource</param>
		/// <param name="RowsourcesOut">ref object RowsourcesOut</param>
		/// <param name="RelationshipsOut">ref object RelationshipsOut</param>
		/// <param name="NumberOfDrops">ref Int32 NumberOfDrops</param>
		[SupportByLibrary("XWC1.0")]
		public void ValidateDrop(object unknownDropGoo, string recordSetDefName, NetOffice.OWC10Api.Enums.DscDropLocationEnum location, NetOffice.OWC10Api.Enums.DscDropTypeEnum type, ref string dropRowsource, ref object rowsourcesOut, ref object relationshipsOut, ref Int32 numberOfDrops)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,false,false,false,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(unknownDropGoo, recordSetDefName, location, type, dropRowsource, rowsourcesOut, relationshipsOut, numberOfDrops);
			Invoker.Method(this, "ValidateDrop", paramsArray, modifiers);
			dropRowsource = (string)paramsArray[4];
			rowsourcesOut = (object)paramsArray[5];
			relationshipsOut = (object)paramsArray[6];
			numberOfDrops = (Int32)paramsArray[7];
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Hyperlink">object Hyperlink</param>
		/// <param name="Part">NetOffice.OWC10Api.Enums.DscHyperlinkPartEnum Part</param>
		[SupportByLibrary("XWC1.0")]
		public string HyperlinkPart(object hyperlink, NetOffice.OWC10Api.Enums.DscHyperlinkPartEnum part)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(hyperlink, part);
			object returnItem = Invoker.MethodReturn(this, "HyperlinkPart", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public void SchemaRefresh()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SchemaRefresh", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="OldID">string OldID</param>
		/// <param name="NewID">string NewID</param>
		[SupportByLibrary("XWC1.0")]
		public void UpdateElementID(string oldID, string newID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(oldID, newID);
			Invoker.Method(this, "UpdateElementID", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public void Reset()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Reset", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="lIndex">Int32 lIndex</param>
		[SupportByLibrary("XWC1.0")]
		public string getDataMemberName(Int32 lIndex)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(lIndex);
			object returnItem = Invoker.MethodReturn(this, "getDataMemberName", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public Int32 getDataMemberCount()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "getDataMemberCount", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="SectionElement">object SectionElement</param>
		/// <param name="RecordSource">ref string RecordSource</param>
		/// <param name="SectionType">NetOffice.OWC10Api.Enums.SectTypeEnum SectionType</param>
		/// <param name="GroupLevel">ref NetOffice.OWC10Api.GroupLevel GroupLevel</param>
		[SupportByLibrary("XWC1.0")]
		public void GetSectionInfo(object sectionElement, ref string recordSource, NetOffice.OWC10Api.Enums.SectTypeEnum sectionType, ref NetOffice.OWC10Api.GroupLevel groupLevel)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true,false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(sectionElement, recordSource, sectionType, groupLevel);
			Invoker.Method(this, "GetSectionInfo", paramsArray, modifiers);
			recordSource = (string)paramsArray[1];
			groupLevel = (NetOffice.OWC10Api.GroupLevel)paramsArray[3];
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="RecordSource">string RecordSource</param>
		[SupportByLibrary("XWC1.0")]
		public void DeleteRecordSourceIfUnused(string recordSource)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(recordSource);
			Invoker.Method(this, "DeleteRecordSourceIfUnused", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="RecordSource">string RecordSource</param>
		/// <param name="PageField">string PageField</param>
		[SupportByLibrary("XWC1.0")]
		public void DeletePageFieldIfUnused(string recordSource, string pageField)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(recordSource, pageField);
			Invoker.Method(this, "DeletePageFieldIfUnused", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="bstrRecordset">string bstrRecordset</param>
		[SupportByLibrary("XWC1.0")]
		public void ResetRecordset(string bstrRecordset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(bstrRecordset);
			Invoker.Method(this, "ResetRecordset", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="ExportType">NetOffice.OWC10Api.Enums.ExportableConnectStringEnum ExportType</param>
		/// <param name="ConnectString">ref string ConnectString</param>
		[SupportByLibrary("XWC1.0")]
		public void GetExportableConnectString(NetOffice.OWC10Api.Enums.ExportableConnectStringEnum exportType, ref string connectString)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(exportType, connectString);
			Invoker.Method(this, "GetExportableConnectString", paramsArray, modifiers);
			connectString = (string)paramsArray[1];
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="eEncoding">NetOffice.OWC10Api.Enums.DscEncodingEnum eEncoding</param>
		[SupportByLibrary("XWC1.0")]
		public void ExportXML(NetOffice.OWC10Api.Enums.DscEncodingEnum eEncoding)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(eEncoding);
			Invoker.Method(this, "ExportXML", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="RecordsetName">string RecordsetName</param>
		/// <param name="Recordset">NetOffice.ADODBApi.Recordset Recordset</param>
		[SupportByLibrary("XWC1.0")]
		public void SetRootRecordset(string recordsetName, NetOffice.ADODBApi.Recordset recordset)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(recordsetName, recordset);
			Invoker.Method(this, "SetRootRecordset", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="OnlineServer">ref string OnlineServer</param>
		/// <param name="OnlineDatabase">ref string OnlineDatabase</param>
		/// <param name="OfflineServer">ref string OfflineServer</param>
		/// <param name="OfflineDatabase">ref string OfflineDatabase</param>
		[SupportByLibrary("XWC1.0")]
		public void GetOfflineDisplayInfo(ref string onlineServer, ref string onlineDatabase, ref string offlineServer, ref string offlineDatabase)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(onlineServer, onlineDatabase, offlineServer, offlineDatabase);
			Invoker.Method(this, "GetOfflineDisplayInfo", paramsArray, modifiers);
			onlineServer = (string)paramsArray[0];
			onlineDatabase = (string)paramsArray[1];
			offlineServer = (string)paramsArray[2];
			offlineDatabase = (string)paramsArray[3];
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="RefreshType">NetOffice.OWC10Api.Enums.RefreshType RefreshType</param>
		[SupportByLibrary("XWC1.0")]
		public void Refresh(NetOffice.OWC10Api.Enums.RefreshType refreshType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(refreshType);
			Invoker.Method(this, "Refresh", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="pGroupLevel">NetOffice.OWC10Api.GroupLevel pGroupLevel</param>
		/// <param name="fChild">Int32 fChild</param>
		/// <param name="ppGrouplevel">ref NetOffice.OWC10Api.GroupLevel ppGrouplevel</param>
		[SupportByLibrary("XWC1.0")]
		public void FindRelatedGroupLevel(NetOffice.OWC10Api.GroupLevel pGroupLevel, Int32 fChild, ref NetOffice.OWC10Api.GroupLevel ppGrouplevel)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(pGroupLevel, fChild, ppGrouplevel);
			Invoker.Method(this, "FindRelatedGroupLevel", paramsArray, modifiers);
			ppGrouplevel = (NetOffice.OWC10Api.GroupLevel)paramsArray[2];
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Notification">NetOffice.OWC10Api.Enums.NotificationType Notification</param>
		[SupportByLibrary("XWC1.0")]
		public void DllNotification(NetOffice.OWC10Api.Enums.NotificationType notification)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(notification);
			Invoker.Method(this, "DllNotification", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Suspend">bool Suspend</param>
		[SupportByLibrary("XWC1.0")]
		public void SuspendUndo(bool suspend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(suspend);
			Invoker.Method(this, "SuspendUndo", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public void UpdateFocus()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "UpdateFocus", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="ConnectionString">string ConnectionString</param>
		[SupportByLibrary("XWC1.0")]
		public bool IsValidDAPProvider(string connectionString)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(connectionString);
			object returnItem = Invoker.MethodReturn(this, "IsValidDAPProvider", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Number">Double Number</param>
		/// <param name="SourceCurrency">string SourceCurrency</param>
		/// <param name="TargetCurrency">string TargetCurrency</param>
		/// <param name="FullPrecision">optional object FullPrecision</param>
		/// <param name="TriangulationPrecision">optional object TriangulationPrecision</param>
		[SupportByLibrary("XWC1.0")]
		public Double EuroConvert(Double number, string sourceCurrency, string targetCurrency, object fullPrecision, object triangulationPrecision)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(number, sourceCurrency, targetCurrency, fullPrecision, triangulationPrecision);
			object returnItem = Invoker.MethodReturn(this, "EuroConvert", paramsArray);
			return (Double)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Number">Double Number</param>
		/// <param name="SourceCurrency">string SourceCurrency</param>
		/// <param name="TargetCurrency">string TargetCurrency</param>
		[SupportByLibrary("XWC1.0")]
		public Double EuroConvert(Double number, string sourceCurrency, string targetCurrency)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(number, sourceCurrency, targetCurrency);
			object returnItem = Invoker.MethodReturn(this, "EuroConvert", paramsArray);
			return (Double)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public String[] GetDAPProviders()
		{
			object[] paramsArray = null;
			object returnItem = (object)Invoker.MethodReturn(this, "GetDAPProviders", paramsArray);
			return (String[])returnItem;
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Synchronizing">bool Synchronizing</param>
		[SupportByLibrary("XWC1.0")]
		public void SetSynchronizing(bool synchronizing)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(synchronizing);
			Invoker.Method(this, "SetSynchronizing", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="DisplayError">bool DisplayError</param>
		[SupportByLibrary("XWC1.0")]
		public void SetDisplayError(bool displayError)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(displayError);
			Invoker.Method(this, "SetDisplayError", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Suspend">bool Suspend</param>
		[SupportByLibrary("XWC1.0")]
		public void SuspendXMLReExecute(bool suspend)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(suspend);
			Invoker.Method(this, "SuspendXMLReExecute", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="FirePropChange">bool FirePropChange</param>
		[SupportByLibrary("XWC1.0")]
		public void SetFirePropChange(bool firePropChange)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(firePropChange);
			Invoker.Method(this, "SetFirePropChange", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Value">object Value</param>
		/// <param name="ValueIfNull">optional object ValueIfNull</param>
		[SupportByLibrary("XWC1.0")]
		public object Nz(object value, object valueIfNull)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(value, valueIfNull);
			object returnItem = Invoker.MethodReturn(this, "Nz", paramsArray);
			Type returnItemType = returnItem.GetType();
			if(true == returnItemType.IsCOMObject)
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		/// <param name="Value">object Value</param>
		[SupportByLibrary("XWC1.0")]
		public object Nz(object value)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(value);
			object returnItem = Invoker.MethodReturn(this, "Nz", paramsArray);
			Type returnItemType = returnItem.GetType();
			if(true == returnItemType.IsCOMObject)
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public void RefreshJetCache()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "RefreshJetCache", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XWC1.0 
		/// </summary>
		[SupportByLibrary("XWC1.0")]
		public void AutoRefreshOfflineSource()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "AutoRefreshOfflineSource", paramsArray);
		}

		#endregion
		#pragma warning restore
	}
}