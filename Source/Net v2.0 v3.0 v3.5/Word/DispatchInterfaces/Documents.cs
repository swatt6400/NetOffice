//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using System.Collections;
using LateBindingApi.Core;
namespace NetOffice.WordApi
{
	///<summary>
	/// DispatchInterface Documents SupportByLibrary Word, 9,10,11,12,14
	///</summary>
	[SupportByLibrary("Word", 9,10,11,12,14)]
	[EntityTypeAttribute(EntityType.IsDispatchInterface)]
	public class Documents : COMObject ,IEnumerable
	{
		#pragma warning disable
		#region Type Information

        private static Type _type;

        public static Type LateBindingApiWrapperType
        {
            get
            {
                if (null == _type)
                    _type = typeof(Documents);
                    
                return _type;
            }
        }
        
        #endregion
        
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents() : base()
		{
		}
		
		/// <param name="progId">registered ProgID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents(string progId) : base(progId)
		{
		}
		
		#endregion
		
		#region Properties

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// Get Property
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Count
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Count", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// Get Property
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Application Application
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Application", paramsArray);
				NetOffice.WordApi.Application newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this,returnItem,NetOffice.WordApi.Application.LateBindingApiWrapperType) as NetOffice.WordApi.Application;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// Get Property
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Creator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Creator", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// Get Property
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public COMObject Parent
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Parent", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Index">object Index</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		[NetRuntimeSystem.Runtime.CompilerServices.IndexerName("Item")]
		public NetOffice.WordApi.Document this[object index]
		{
			get
			{
				object[] paramsArray = Invoker.ValidateParamsArray(index);
				object returnItem = Invoker.MethodReturn(this, "Item", paramsArray);
				NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="SaveChanges">optional object SaveChanges</param>
		/// <param name="OriginalFormat">optional object OriginalFormat</param>
		/// <param name="RouteDocument">optional object RouteDocument</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Close(object saveChanges, object originalFormat, object routeDocument)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(saveChanges, originalFormat, routeDocument);
			Invoker.Method(this, "Close", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Close()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Close", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Template">optional object Template</param>
		/// <param name="NewTemplate">optional object NewTemplate</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document AddOld(object template, object newTemplate)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(template, newTemplate);
			object returnItem = Invoker.MethodReturn(this, "AddOld", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document AddOld()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AddOld", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">optional object PasswordTemplate</param>
		/// <param name="Revert">optional object Revert</param>
		/// <param name="WritePasswordDocument">optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">optional object WritePasswordTemplate</param>
		/// <param name="Format">optional object Format</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document OpenOld(object fileName, object confirmConversions, object readOnly, object addToRecentFiles, object passwordDocument, object passwordTemplate, object revert, object writePasswordDocument, object writePasswordTemplate, object format)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format);
			object returnItem = Invoker.MethodReturn(this, "OpenOld", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document OpenOld(object fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "OpenOld", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="NoPrompt">optional object NoPrompt</param>
		/// <param name="OriginalFormat">optional object OriginalFormat</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Save(object noPrompt, object originalFormat)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(noPrompt, originalFormat);
			Invoker.Method(this, "Save", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Save()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Save", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="Template">optional object Template</param>
		/// <param name="NewTemplate">optional object NewTemplate</param>
		/// <param name="DocumentType">optional object DocumentType</param>
		/// <param name="Visible">optional object Visible</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document Add(object template, object newTemplate, object documentType, object visible)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(template, newTemplate, documentType, visible);
			object returnItem = Invoker.MethodReturn(this, "Add", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document Add()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Add", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9
		/// </summary>
		/// <param name="FileName">object FileName</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">optional object PasswordTemplate</param>
		/// <param name="Revert">optional object Revert</param>
		/// <param name="WritePasswordDocument">optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">optional object WritePasswordTemplate</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Encoding">optional object Encoding</param>
		/// <param name="Visible">optional object Visible</param>
		[SupportByLibrary("Word", 9)]
		public NetOffice.WordApi.Document Open(object fileName, object confirmConversions, object readOnly, object addToRecentFiles, object passwordDocument, object passwordTemplate, object revert, object writePasswordDocument, object writePasswordTemplate, object format, object encoding, object visible)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 10
		/// </summary>
		/// <param name="FileName">object FileName</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">optional object PasswordTemplate</param>
		/// <param name="Revert">optional object Revert</param>
		/// <param name="WritePasswordDocument">optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">optional object WritePasswordTemplate</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Encoding">optional object Encoding</param>
		/// <param name="Visible">optional object Visible</param>
		/// <param name="OpenAndRepair">optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">optional object NoEncodingDialog</param>
		[SupportByLibrary("Word", 10)]
		public NetOffice.WordApi.Document Open(object fileName, object confirmConversions, object readOnly, object addToRecentFiles, object passwordDocument, object passwordTemplate, object revert, object writePasswordDocument, object writePasswordTemplate, object format, object encoding, object visible, object openAndRepair, object documentDirection, object noEncodingDialog)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">optional object PasswordTemplate</param>
		/// <param name="Revert">optional object Revert</param>
		/// <param name="WritePasswordDocument">optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">optional object WritePasswordTemplate</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Encoding">optional object Encoding</param>
		/// <param name="Visible">optional object Visible</param>
		/// <param name="OpenAndRepair">optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">optional object NoEncodingDialog</param>
		/// <param name="XMLTransform">optional object XMLTransform</param>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.Document Open(object fileName, object confirmConversions, object readOnly, object addToRecentFiles, object passwordDocument, object passwordTemplate, object revert, object writePasswordDocument, object writePasswordTemplate, object format, object encoding, object visible, object openAndRepair, object documentDirection, object noEncodingDialog, object xMLTransform)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog, xMLTransform);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 9, 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document Open(object fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">optional object PasswordTemplate</param>
		/// <param name="Revert">optional object Revert</param>
		/// <param name="WritePasswordDocument">optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">optional object WritePasswordTemplate</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Encoding">optional object Encoding</param>
		/// <param name="Visible">optional object Visible</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.Document Open2000(object fileName, object confirmConversions, object readOnly, object addToRecentFiles, object passwordDocument, object passwordTemplate, object revert, object writePasswordDocument, object writePasswordTemplate, object format, object encoding, object visible)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible);
			object returnItem = Invoker.MethodReturn(this, "Open2000", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.Document Open2000(object fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "Open2000", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">string FileName</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void CheckOut(string fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			Invoker.Method(this, "CheckOut", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary Word 10, 11, 12, 14
		/// </summary>
		/// <param name="FileName">string FileName</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public bool CanCheckOut(string fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "CanCheckOut", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">optional object PasswordTemplate</param>
		/// <param name="Revert">optional object Revert</param>
		/// <param name="WritePasswordDocument">optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">optional object WritePasswordTemplate</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Encoding">optional object Encoding</param>
		/// <param name="Visible">optional object Visible</param>
		/// <param name="OpenAndRepair">optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">optional object NoEncodingDialog</param>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.Document Open2002(object fileName, object confirmConversions, object readOnly, object addToRecentFiles, object passwordDocument, object passwordTemplate, object revert, object writePasswordDocument, object writePasswordTemplate, object format, object encoding, object visible, object openAndRepair, object documentDirection, object noEncodingDialog)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog);
			object returnItem = Invoker.MethodReturn(this, "Open2002", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 11, 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.Document Open2002(object fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "Open2002", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		/// <param name="ConfirmConversions">optional object ConfirmConversions</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">optional object PasswordTemplate</param>
		/// <param name="Revert">optional object Revert</param>
		/// <param name="WritePasswordDocument">optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">optional object WritePasswordTemplate</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Encoding">optional object Encoding</param>
		/// <param name="Visible">optional object Visible</param>
		/// <param name="OpenAndRepair">optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">optional object NoEncodingDialog</param>
		/// <param name="XMLTransform">optional object XMLTransform</param>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.Document OpenNoRepairDialog(object fileName, object confirmConversions, object readOnly, object addToRecentFiles, object passwordDocument, object passwordTemplate, object revert, object writePasswordDocument, object writePasswordTemplate, object format, object encoding, object visible, object openAndRepair, object documentDirection, object noEncodingDialog, object xMLTransform)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog, xMLTransform);
			object returnItem = Invoker.MethodReturn(this, "OpenNoRepairDialog", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		/// <param name="FileName">object FileName</param>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.Document OpenNoRepairDialog(object fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "OpenNoRepairDialog", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary Word 12, 14
		/// </summary>
		/// <param name="ProviderID">string ProviderID</param>
		/// <param name="PostURL">string PostURL</param>
		/// <param name="BlogName">string BlogName</param>
		/// <param name="PostID">string PostID</param>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.Document AddBlogDocument(string providerID, string postURL, string blogName, string postID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(providerID, postURL, blogName, postID);
			object returnItem = Invoker.MethodReturn(this, "AddBlogDocument", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateKnownObjectFromComProxy(this, returnItem,NetOffice.WordApi.Document.LateBindingApiWrapperType) as NetOffice.WordApi.Document;
			return newObject;
		}

		#endregion
   
        #region IEnumerable Members
        
        [SupportByLibrary("Word", 9,10,11,12,14)]
		public IEnumerator GetEnumerator()
		{
			object enumProxy = Invoker.PropertyGet(this, "_NewEnum");
			COMObject enumerator = new COMObject(this, enumProxy);
			Invoker.Method(enumerator, "Reset", null);
			bool isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
            while (true == isMoveNextTrue)
            {
                object itemProxy = Invoker.PropertyGet(enumerator, "Current", null);
                COMObject returnClass = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, itemProxy);
                isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
				yield return returnClass;
            }
        }

        #endregion
		#pragma warning restore
	}
}