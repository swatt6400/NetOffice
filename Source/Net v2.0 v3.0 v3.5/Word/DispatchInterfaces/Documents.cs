//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using System.Collections;
using LateBindingApi.Core;
namespace LateBindingApi.WordApi
{
	///<summary>
	/// DispatchInterface Documents SupportByLibrary WD09 WD10 WD11 WD12 WD14 
	///</summary>
	[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
	public class Documents : COMObject ,IEnumerable
	{
		#pragma warning disable
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Documents()
		{
		}
		
		#endregion
		
		#region Properties

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public Int32 Count
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Count", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Application Application
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Application", paramsArray);
				LateBindingApi.WordApi.Application newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as LateBindingApi.WordApi.Application;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public Int32 Creator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Creator", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public COMObject Parent
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Parent", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="Index">ref object Index</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Item(ref object index)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(index);
			object returnItem = Invoker.MethodReturn(this, "Item", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			index = (object)paramsArray[0];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="SaveChanges">ref optional object SaveChanges</param>
		/// <param name="OriginalFormat">ref optional object OriginalFormat</param>
		/// <param name="RouteDocument">ref optional object RouteDocument</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public void Close(ref object saveChanges, ref object originalFormat, ref object routeDocument)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(saveChanges, originalFormat, routeDocument);
			Invoker.Method(this, "Close", paramsArray, modifiers);
			saveChanges = (object)paramsArray[0];
			originalFormat = (object)paramsArray[1];
			routeDocument = (object)paramsArray[2];
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public void Close()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Close", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="Template">ref optional object Template</param>
		/// <param name="NewTemplate">ref optional object NewTemplate</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document AddOld(ref object template, ref object newTemplate)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(template, newTemplate);
			object returnItem = Invoker.MethodReturn(this, "AddOld", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			template = (object)paramsArray[0];
			newTemplate = (object)paramsArray[1];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document AddOld()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "AddOld", paramsArray);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		/// <param name="ConfirmConversions">ref optional object ConfirmConversions</param>
		/// <param name="ReadOnly">ref optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">ref optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">ref optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">ref optional object PasswordTemplate</param>
		/// <param name="Revert">ref optional object Revert</param>
		/// <param name="WritePasswordDocument">ref optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">ref optional object WritePasswordTemplate</param>
		/// <param name="Format">ref optional object Format</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document OpenOld(ref object fileName, ref object confirmConversions, ref object readOnly, ref object addToRecentFiles, ref object passwordDocument, ref object passwordTemplate, ref object revert, ref object writePasswordDocument, ref object writePasswordTemplate, ref object format)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format);
			object returnItem = Invoker.MethodReturn(this, "OpenOld", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			confirmConversions = (object)paramsArray[1];
			readOnly = (object)paramsArray[2];
			addToRecentFiles = (object)paramsArray[3];
			passwordDocument = (object)paramsArray[4];
			passwordTemplate = (object)paramsArray[5];
			revert = (object)paramsArray[6];
			writePasswordDocument = (object)paramsArray[7];
			writePasswordTemplate = (object)paramsArray[8];
			format = (object)paramsArray[9];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document OpenOld(ref object fileName)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "OpenOld", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="NoPrompt">ref optional object NoPrompt</param>
		/// <param name="OriginalFormat">ref optional object OriginalFormat</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public void Save(ref object noPrompt, ref object originalFormat)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(noPrompt, originalFormat);
			Invoker.Method(this, "Save", paramsArray, modifiers);
			noPrompt = (object)paramsArray[0];
			originalFormat = (object)paramsArray[1];
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public void Save()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Save", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="Template">ref optional object Template</param>
		/// <param name="NewTemplate">ref optional object NewTemplate</param>
		/// <param name="DocumentType">ref optional object DocumentType</param>
		/// <param name="Visible">ref optional object Visible</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Add(ref object template, ref object newTemplate, ref object documentType, ref object visible)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(template, newTemplate, documentType, visible);
			object returnItem = Invoker.MethodReturn(this, "Add", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			template = (object)paramsArray[0];
			newTemplate = (object)paramsArray[1];
			documentType = (object)paramsArray[2];
			visible = (object)paramsArray[3];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Add()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Add", paramsArray);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		/// <param name="ConfirmConversions">ref optional object ConfirmConversions</param>
		/// <param name="ReadOnly">ref optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">ref optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">ref optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">ref optional object PasswordTemplate</param>
		/// <param name="Revert">ref optional object Revert</param>
		/// <param name="WritePasswordDocument">ref optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">ref optional object WritePasswordTemplate</param>
		/// <param name="Format">ref optional object Format</param>
		/// <param name="Encoding">ref optional object Encoding</param>
		/// <param name="Visible">ref optional object Visible</param>
		[SupportByLibrary("WD09")]
		public LateBindingApi.WordApi.Document Open(ref object fileName, ref object confirmConversions, ref object readOnly, ref object addToRecentFiles, ref object passwordDocument, ref object passwordTemplate, ref object revert, ref object writePasswordDocument, ref object writePasswordTemplate, ref object format, ref object encoding, ref object visible)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			confirmConversions = (object)paramsArray[1];
			readOnly = (object)paramsArray[2];
			addToRecentFiles = (object)paramsArray[3];
			passwordDocument = (object)paramsArray[4];
			passwordTemplate = (object)paramsArray[5];
			revert = (object)paramsArray[6];
			writePasswordDocument = (object)paramsArray[7];
			writePasswordTemplate = (object)paramsArray[8];
			format = (object)paramsArray[9];
			encoding = (object)paramsArray[10];
			visible = (object)paramsArray[11];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD10 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		/// <param name="ConfirmConversions">ref optional object ConfirmConversions</param>
		/// <param name="ReadOnly">ref optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">ref optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">ref optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">ref optional object PasswordTemplate</param>
		/// <param name="Revert">ref optional object Revert</param>
		/// <param name="WritePasswordDocument">ref optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">ref optional object WritePasswordTemplate</param>
		/// <param name="Format">ref optional object Format</param>
		/// <param name="Encoding">ref optional object Encoding</param>
		/// <param name="Visible">ref optional object Visible</param>
		/// <param name="OpenAndRepair">ref optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">ref optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">ref optional object NoEncodingDialog</param>
		[SupportByLibrary("WD10")]
		public LateBindingApi.WordApi.Document Open(ref object fileName, ref object confirmConversions, ref object readOnly, ref object addToRecentFiles, ref object passwordDocument, ref object passwordTemplate, ref object revert, ref object writePasswordDocument, ref object writePasswordTemplate, ref object format, ref object encoding, ref object visible, ref object openAndRepair, ref object documentDirection, ref object noEncodingDialog)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			confirmConversions = (object)paramsArray[1];
			readOnly = (object)paramsArray[2];
			addToRecentFiles = (object)paramsArray[3];
			passwordDocument = (object)paramsArray[4];
			passwordTemplate = (object)paramsArray[5];
			revert = (object)paramsArray[6];
			writePasswordDocument = (object)paramsArray[7];
			writePasswordTemplate = (object)paramsArray[8];
			format = (object)paramsArray[9];
			encoding = (object)paramsArray[10];
			visible = (object)paramsArray[11];
			openAndRepair = (object)paramsArray[12];
			documentDirection = (object)paramsArray[13];
			noEncodingDialog = (object)paramsArray[14];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		/// <param name="ConfirmConversions">ref optional object ConfirmConversions</param>
		/// <param name="ReadOnly">ref optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">ref optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">ref optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">ref optional object PasswordTemplate</param>
		/// <param name="Revert">ref optional object Revert</param>
		/// <param name="WritePasswordDocument">ref optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">ref optional object WritePasswordTemplate</param>
		/// <param name="Format">ref optional object Format</param>
		/// <param name="Encoding">ref optional object Encoding</param>
		/// <param name="Visible">ref optional object Visible</param>
		/// <param name="OpenAndRepair">ref optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">ref optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">ref optional object NoEncodingDialog</param>
		/// <param name="XMLTransform">ref optional object XMLTransform</param>
		[SupportByLibrary("WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Open(ref object fileName, ref object confirmConversions, ref object readOnly, ref object addToRecentFiles, ref object passwordDocument, ref object passwordTemplate, ref object revert, ref object writePasswordDocument, ref object writePasswordTemplate, ref object format, ref object encoding, ref object visible, ref object openAndRepair, ref object documentDirection, ref object noEncodingDialog, ref object xMLTransform)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog, xMLTransform);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			confirmConversions = (object)paramsArray[1];
			readOnly = (object)paramsArray[2];
			addToRecentFiles = (object)paramsArray[3];
			passwordDocument = (object)paramsArray[4];
			passwordTemplate = (object)paramsArray[5];
			revert = (object)paramsArray[6];
			writePasswordDocument = (object)paramsArray[7];
			writePasswordTemplate = (object)paramsArray[8];
			format = (object)paramsArray[9];
			encoding = (object)paramsArray[10];
			visible = (object)paramsArray[11];
			openAndRepair = (object)paramsArray[12];
			documentDirection = (object)paramsArray[13];
			noEncodingDialog = (object)paramsArray[14];
			xMLTransform = (object)paramsArray[15];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD09 WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		[SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Open(ref object fileName)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		/// <param name="ConfirmConversions">ref optional object ConfirmConversions</param>
		/// <param name="ReadOnly">ref optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">ref optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">ref optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">ref optional object PasswordTemplate</param>
		/// <param name="Revert">ref optional object Revert</param>
		/// <param name="WritePasswordDocument">ref optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">ref optional object WritePasswordTemplate</param>
		/// <param name="Format">ref optional object Format</param>
		/// <param name="Encoding">ref optional object Encoding</param>
		/// <param name="Visible">ref optional object Visible</param>
		[SupportByLibrary("WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Open2000(ref object fileName, ref object confirmConversions, ref object readOnly, ref object addToRecentFiles, ref object passwordDocument, ref object passwordTemplate, ref object revert, ref object writePasswordDocument, ref object writePasswordTemplate, ref object format, ref object encoding, ref object visible)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible);
			object returnItem = Invoker.MethodReturn(this, "Open2000", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			confirmConversions = (object)paramsArray[1];
			readOnly = (object)paramsArray[2];
			addToRecentFiles = (object)paramsArray[3];
			passwordDocument = (object)paramsArray[4];
			passwordTemplate = (object)paramsArray[5];
			revert = (object)paramsArray[6];
			writePasswordDocument = (object)paramsArray[7];
			writePasswordTemplate = (object)paramsArray[8];
			format = (object)paramsArray[9];
			encoding = (object)paramsArray[10];
			visible = (object)paramsArray[11];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		[SupportByLibrary("WD10","WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Open2000(ref object fileName)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "Open2000", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">string FileName</param>
		[SupportByLibrary("WD10","WD11","WD12","WD14")]
		public void CheckOut(string fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			Invoker.Method(this, "CheckOut", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary WD10 WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">string FileName</param>
		[SupportByLibrary("WD10","WD11","WD12","WD14")]
		public bool CanCheckOut(string fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "CanCheckOut", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		/// <param name="ConfirmConversions">ref optional object ConfirmConversions</param>
		/// <param name="ReadOnly">ref optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">ref optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">ref optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">ref optional object PasswordTemplate</param>
		/// <param name="Revert">ref optional object Revert</param>
		/// <param name="WritePasswordDocument">ref optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">ref optional object WritePasswordTemplate</param>
		/// <param name="Format">ref optional object Format</param>
		/// <param name="Encoding">ref optional object Encoding</param>
		/// <param name="Visible">ref optional object Visible</param>
		/// <param name="OpenAndRepair">ref optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">ref optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">ref optional object NoEncodingDialog</param>
		[SupportByLibrary("WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Open2002(ref object fileName, ref object confirmConversions, ref object readOnly, ref object addToRecentFiles, ref object passwordDocument, ref object passwordTemplate, ref object revert, ref object writePasswordDocument, ref object writePasswordTemplate, ref object format, ref object encoding, ref object visible, ref object openAndRepair, ref object documentDirection, ref object noEncodingDialog)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog);
			object returnItem = Invoker.MethodReturn(this, "Open2002", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			confirmConversions = (object)paramsArray[1];
			readOnly = (object)paramsArray[2];
			addToRecentFiles = (object)paramsArray[3];
			passwordDocument = (object)paramsArray[4];
			passwordTemplate = (object)paramsArray[5];
			revert = (object)paramsArray[6];
			writePasswordDocument = (object)paramsArray[7];
			writePasswordTemplate = (object)paramsArray[8];
			format = (object)paramsArray[9];
			encoding = (object)paramsArray[10];
			visible = (object)paramsArray[11];
			openAndRepair = (object)paramsArray[12];
			documentDirection = (object)paramsArray[13];
			noEncodingDialog = (object)paramsArray[14];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD11 WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		[SupportByLibrary("WD11","WD12","WD14")]
		public LateBindingApi.WordApi.Document Open2002(ref object fileName)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "Open2002", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		/// <param name="ConfirmConversions">ref optional object ConfirmConversions</param>
		/// <param name="ReadOnly">ref optional object ReadOnly</param>
		/// <param name="AddToRecentFiles">ref optional object AddToRecentFiles</param>
		/// <param name="PasswordDocument">ref optional object PasswordDocument</param>
		/// <param name="PasswordTemplate">ref optional object PasswordTemplate</param>
		/// <param name="Revert">ref optional object Revert</param>
		/// <param name="WritePasswordDocument">ref optional object WritePasswordDocument</param>
		/// <param name="WritePasswordTemplate">ref optional object WritePasswordTemplate</param>
		/// <param name="Format">ref optional object Format</param>
		/// <param name="Encoding">ref optional object Encoding</param>
		/// <param name="Visible">ref optional object Visible</param>
		/// <param name="OpenAndRepair">ref optional object OpenAndRepair</param>
		/// <param name="DocumentDirection">ref optional object DocumentDirection</param>
		/// <param name="NoEncodingDialog">ref optional object NoEncodingDialog</param>
		/// <param name="XMLTransform">ref optional object XMLTransform</param>
		[SupportByLibrary("WD12","WD14")]
		public LateBindingApi.WordApi.Document OpenNoRepairDialog(ref object fileName, ref object confirmConversions, ref object readOnly, ref object addToRecentFiles, ref object passwordDocument, ref object passwordTemplate, ref object revert, ref object writePasswordDocument, ref object writePasswordTemplate, ref object format, ref object encoding, ref object visible, ref object openAndRepair, ref object documentDirection, ref object noEncodingDialog, ref object xMLTransform)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName, confirmConversions, readOnly, addToRecentFiles, passwordDocument, passwordTemplate, revert, writePasswordDocument, writePasswordTemplate, format, encoding, visible, openAndRepair, documentDirection, noEncodingDialog, xMLTransform);
			object returnItem = Invoker.MethodReturn(this, "OpenNoRepairDialog", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			confirmConversions = (object)paramsArray[1];
			readOnly = (object)paramsArray[2];
			addToRecentFiles = (object)paramsArray[3];
			passwordDocument = (object)paramsArray[4];
			passwordTemplate = (object)paramsArray[5];
			revert = (object)paramsArray[6];
			writePasswordDocument = (object)paramsArray[7];
			writePasswordTemplate = (object)paramsArray[8];
			format = (object)paramsArray[9];
			encoding = (object)paramsArray[10];
			visible = (object)paramsArray[11];
			openAndRepair = (object)paramsArray[12];
			documentDirection = (object)paramsArray[13];
			noEncodingDialog = (object)paramsArray[14];
			xMLTransform = (object)paramsArray[15];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD12 WD14 
		/// </summary>
		/// <param name="FileName">ref object FileName</param>
		[SupportByLibrary("WD12","WD14")]
		public LateBindingApi.WordApi.Document OpenNoRepairDialog(ref object fileName)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			object returnItem = Invoker.MethodReturn(this, "OpenNoRepairDialog", paramsArray, modifiers);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			fileName = (object)paramsArray[0];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary WD12 WD14 
		/// </summary>
		/// <param name="ProviderID">string ProviderID</param>
		/// <param name="PostURL">string PostURL</param>
		/// <param name="BlogName">string BlogName</param>
		/// <param name="PostID">string PostID</param>
		[SupportByLibrary("WD12","WD14")]
		public LateBindingApi.WordApi.Document AddBlogDocument(string providerID, string postURL, string blogName, string postID)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(providerID, postURL, blogName, postID);
			object returnItem = Invoker.MethodReturn(this, "AddBlogDocument", paramsArray);
			LateBindingApi.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.WordApi.Document;
			return newObject;
		}

		#endregion
   
        #region IEnumerable Members
        
        [SupportByLibrary("WD09","WD10","WD11","WD12","WD14")]
		public IEnumerator GetEnumerator()
		{
			object enumProxy = Invoker.PropertyGet(this, "_NewEnum");
			COMObject enumerator = new COMObject(this, enumProxy);
			Invoker.Method(enumerator, "Reset", null);
			bool isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
            while (true == isMoveNextTrue)
            {
                object itemProxy = Invoker.PropertyGet(enumerator, "Current", null);
                COMObject returnClass = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, itemProxy);
                isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
				yield return returnClass;
            }
        }

        #endregion
		#pragma warning restore
	}
}