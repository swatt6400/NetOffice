//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using LateBindingApi.Core;
namespace NetOffice.WordApi
{
	///<summary>
	/// DispatchInterface _Application SupportByLibrary "Word", 9,10,11,12,14
	///</summary>
	[SupportByLibrary("Word", 9,10,11,12,14)]
	[EntityTypeAttribute(EntityType.IsDispatchInterface)]
	public class _Application : COMObject
	{
		#pragma warning disable
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Application(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Application(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Application(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public _Application()
		{
		}
		
		#endregion
		
		#region Properties

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Application Application
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Application", paramsArray);
				NetOffice.WordApi.Application newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Application;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Creator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Creator", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public COMObject Parent
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Parent", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string Name
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Name", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Documents Documents
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Documents", paramsArray);
				NetOffice.WordApi.Documents newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Documents;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Windows Windows
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Windows", paramsArray);
				NetOffice.WordApi.Windows newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Windows;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Document ActiveDocument
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveDocument", paramsArray);
				NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Document;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Window ActiveWindow
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveWindow", paramsArray);
				NetOffice.WordApi.Window newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Window;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Selection Selection
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Selection", paramsArray);
				NetOffice.WordApi.Selection newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Selection;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public COMObject WordBasic
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "WordBasic", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.RecentFiles RecentFiles
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "RecentFiles", paramsArray);
				NetOffice.WordApi.RecentFiles newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.RecentFiles;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Template NormalTemplate
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "NormalTemplate", paramsArray);
				NetOffice.WordApi.Template newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Template;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.System System
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "System", paramsArray);
				NetOffice.WordApi.System newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.System;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.AutoCorrect AutoCorrect
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AutoCorrect", paramsArray);
				NetOffice.WordApi.AutoCorrect newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.AutoCorrect;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.FontNames FontNames
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FontNames", paramsArray);
				NetOffice.WordApi.FontNames newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.FontNames;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.FontNames LandscapeFontNames
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LandscapeFontNames", paramsArray);
				NetOffice.WordApi.FontNames newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.FontNames;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.FontNames PortraitFontNames
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PortraitFontNames", paramsArray);
				NetOffice.WordApi.FontNames newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.FontNames;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Languages Languages
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Languages", paramsArray);
				NetOffice.WordApi.Languages newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Languages;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.Assistant Assistant
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Assistant", paramsArray);
				NetOffice.OfficeApi.Assistant newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.Assistant;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Browser Browser
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Browser", paramsArray);
				NetOffice.WordApi.Browser newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Browser;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.FileConverters FileConverters
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FileConverters", paramsArray);
				NetOffice.WordApi.FileConverters newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.FileConverters;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.MailingLabel MailingLabel
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MailingLabel", paramsArray);
				NetOffice.WordApi.MailingLabel newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.MailingLabel;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Dialogs Dialogs
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Dialogs", paramsArray);
				NetOffice.WordApi.Dialogs newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Dialogs;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.CaptionLabels CaptionLabels
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CaptionLabels", paramsArray);
				NetOffice.WordApi.CaptionLabels newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.CaptionLabels;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.AutoCaptions AutoCaptions
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AutoCaptions", paramsArray);
				NetOffice.WordApi.AutoCaptions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.AutoCaptions;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.AddIns AddIns
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AddIns", paramsArray);
				NetOffice.WordApi.AddIns newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.AddIns;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool Visible
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Visible", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Visible", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string Version
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Version", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool ScreenUpdating
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ScreenUpdating", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ScreenUpdating", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool PrintPreview
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PrintPreview", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "PrintPreview", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Tasks Tasks
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Tasks", paramsArray);
				NetOffice.WordApi.Tasks newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Tasks;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool DisplayStatusBar
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayStatusBar", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayStatusBar", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool SpecialMode
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SpecialMode", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 UsableWidth
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UsableWidth", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 UsableHeight
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UsableHeight", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool MathCoprocessorAvailable
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MathCoprocessorAvailable", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool MouseAvailable
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MouseAvailable", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Index">NetOffice.WordApi.Enums.WdInternationalIndex Index</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public object get_International(NetOffice.WordApi.Enums.WdInternationalIndex index)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(index);
			object returnItem = Invoker.PropertyGet(this, "International", paramsArray);
			Type returnItemType = Invoker.GetObjectType(returnItem);
			if ((null != returnItemType) && (true == returnItemType.IsCOMObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string Build
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Build", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool CapsLock
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CapsLock", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool NumLock
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "NumLock", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string UserName
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UserName", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UserName", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string UserInitials
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UserInitials", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UserInitials", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string UserAddress
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UserAddress", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "UserAddress", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public COMObject MacroContainer
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MacroContainer", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool DisplayRecentFiles
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayRecentFiles", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayRecentFiles", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.CommandBars CommandBars
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CommandBars", paramsArray);
				NetOffice.OfficeApi.CommandBars newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.CommandBars;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Word">string Word</param>
		/// <param name="LanguageID">ref optional object LanguageID</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.SynonymInfo get_SynonymInfo(string word, ref object languageID)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(word, languageID);
			object returnItem = Invoker.PropertyGet(this, "SynonymInfo", paramsArray, modifiers);
			NetOffice.WordApi.SynonymInfo newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.SynonymInfo;
			languageID = (object)paramsArray[1];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Word">string Word</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.SynonymInfo get_SynonymInfo(string word)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(word);
			object returnItem = Invoker.PropertyGet(this, "SynonymInfo", paramsArray);
			NetOffice.WordApi.SynonymInfo newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.SynonymInfo;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.VBIDEApi.VBE VBE
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "VBE", paramsArray);
				NetOffice.VBIDEApi.VBE newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.VBIDEApi.VBE;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string DefaultSaveFormat
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultSaveFormat", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultSaveFormat", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.ListGalleries ListGalleries
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ListGalleries", paramsArray);
				NetOffice.WordApi.ListGalleries newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ListGalleries;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string ActivePrinter
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActivePrinter", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ActivePrinter", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Templates Templates
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Templates", paramsArray);
				NetOffice.WordApi.Templates newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Templates;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public COMObject CustomizationContext
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CustomizationContext", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "CustomizationContext", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.KeyBindings KeyBindings
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "KeyBindings", paramsArray);
				NetOffice.WordApi.KeyBindings newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.KeyBindings;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="KeyCategory">NetOffice.WordApi.Enums.WdKeyCategory KeyCategory</param>
		/// <param name="Command">string Command</param>
		/// <param name="CommandParameter">ref optional object CommandParameter</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.KeysBoundTo get_KeysBoundTo(NetOffice.WordApi.Enums.WdKeyCategory keyCategory, string command, ref object commandParameter)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(keyCategory, command, commandParameter);
			object returnItem = Invoker.PropertyGet(this, "KeysBoundTo", paramsArray, modifiers);
			NetOffice.WordApi.KeysBoundTo newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.KeysBoundTo;
			commandParameter = (object)paramsArray[2];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="KeyCategory">NetOffice.WordApi.Enums.WdKeyCategory KeyCategory</param>
		/// <param name="Command">string Command</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.KeysBoundTo get_KeysBoundTo(NetOffice.WordApi.Enums.WdKeyCategory keyCategory, string command)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(keyCategory, command);
			object returnItem = Invoker.PropertyGet(this, "KeysBoundTo", paramsArray);
			NetOffice.WordApi.KeysBoundTo newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.KeysBoundTo;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="KeyCode">Int32 KeyCode</param>
		/// <param name="KeyCode2">ref optional object KeyCode2</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.KeyBinding get_FindKey(Int32 keyCode, ref object keyCode2)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(keyCode, keyCode2);
			object returnItem = Invoker.PropertyGet(this, "FindKey", paramsArray, modifiers);
			NetOffice.WordApi.KeyBinding newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.KeyBinding;
			keyCode2 = (object)paramsArray[1];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="KeyCode">Int32 KeyCode</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.KeyBinding get_FindKey(Int32 keyCode)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(keyCode);
			object returnItem = Invoker.PropertyGet(this, "FindKey", paramsArray);
			NetOffice.WordApi.KeyBinding newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.KeyBinding;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string Caption
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Caption", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Caption", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string Path
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Path", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool DisplayScrollBars
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayScrollBars", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayScrollBars", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string StartupPath
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "StartupPath", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "StartupPath", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 BackgroundSavingStatus
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "BackgroundSavingStatus", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 BackgroundPrintingStatus
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "BackgroundPrintingStatus", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Left
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Left", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Left", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Top
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Top", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Top", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Width
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Width", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Width", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Height
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Height", paramsArray);
				return (Int32)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "Height", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdWindowState WindowState
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "WindowState", paramsArray);
				return (NetOffice.WordApi.Enums.WdWindowState)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "WindowState", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool DisplayAutoCompleteTips
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayAutoCompleteTips", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayAutoCompleteTips", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Options Options
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Options", paramsArray);
				NetOffice.WordApi.Options newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Options;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdAlertLevel DisplayAlerts
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayAlerts", paramsArray);
				return (NetOffice.WordApi.Enums.WdAlertLevel)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayAlerts", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Dictionaries CustomDictionaries
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CustomDictionaries", paramsArray);
				NetOffice.WordApi.Dictionaries newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Dictionaries;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string PathSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PathSeparator", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string StatusBar
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "StatusBar", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "StatusBar", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool MAPIAvailable
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MAPIAvailable", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool DisplayScreenTips
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayScreenTips", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayScreenTips", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdEnableCancelKey EnableCancelKey
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EnableCancelKey", paramsArray);
				return (NetOffice.WordApi.Enums.WdEnableCancelKey)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "EnableCancelKey", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool UserControl
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UserControl", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.FileSearch FileSearch
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FileSearch", paramsArray);
				NetOffice.OfficeApi.FileSearch newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.FileSearch;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Enums.WdMailSystem MailSystem
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MailSystem", paramsArray);
				return (NetOffice.WordApi.Enums.WdMailSystem)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string DefaultTableSeparator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultTableSeparator", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultTableSeparator", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool ShowVisualBasicEditor
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowVisualBasicEditor", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowVisualBasicEditor", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string BrowseExtraFileTypes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "BrowseExtraFileTypes", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "BrowseExtraFileTypes", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Object">object Object</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool get_IsObjectValid(object _object)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(_object);
			object returnItem = Invoker.PropertyGet(this, "IsObjectValid", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.HangulHanjaConversionDictionaries HangulHanjaDictionaries
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "HangulHanjaDictionaries", paramsArray);
				NetOffice.WordApi.HangulHanjaConversionDictionaries newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.HangulHanjaConversionDictionaries;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.MailMessage MailMessage
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "MailMessage", paramsArray);
				NetOffice.WordApi.MailMessage newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.MailMessage;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool FocusInMailHeader
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FocusInMailHeader", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.EmailOptions EmailOptions
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EmailOptions", paramsArray);
				NetOffice.WordApi.EmailOptions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.EmailOptions;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.Enums.MsoLanguageID Language
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Language", paramsArray);
				return (NetOffice.OfficeApi.Enums.MsoLanguageID)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.COMAddIns COMAddIns
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "COMAddIns", paramsArray);
				NetOffice.OfficeApi.COMAddIns newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.COMAddIns;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool CheckLanguage
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "CheckLanguage", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "CheckLanguage", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.LanguageSettings LanguageSettings
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "LanguageSettings", paramsArray);
				NetOffice.OfficeApi.LanguageSettings newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.LanguageSettings;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool Dummy1
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Dummy1", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.AnswerWizard AnswerWizard
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AnswerWizard", paramsArray);
				NetOffice.OfficeApi.AnswerWizard newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.AnswerWizard;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.OfficeApi.Enums.MsoFeatureInstall FeatureInstall
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FeatureInstall", paramsArray);
				return (NetOffice.OfficeApi.Enums.MsoFeatureInstall)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "FeatureInstall", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.OfficeApi.Enums.MsoAutomationSecurity AutomationSecurity
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AutomationSecurity", paramsArray);
				return (NetOffice.OfficeApi.Enums.MsoAutomationSecurity)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "AutomationSecurity", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		/// <param name="FileDialogType">NetOffice.OfficeApi.Enums.MsoFileDialogType FileDialogType</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.OfficeApi.FileDialog get_FileDialog(NetOffice.OfficeApi.Enums.MsoFileDialogType fileDialogType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileDialogType);
			object returnItem = Invoker.PropertyGet(this, "FileDialog", paramsArray);
			NetOffice.OfficeApi.FileDialog newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.FileDialog;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public string EmailTemplate
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "EmailTemplate", paramsArray);
				return (string)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "EmailTemplate", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public bool ShowWindowsInTaskbar
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowWindowsInTaskbar", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowWindowsInTaskbar", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.OfficeApi.NewFile NewDocument
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "NewDocument", paramsArray);
				NetOffice.OfficeApi.NewFile newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.NewFile;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public bool ShowStartupDialog
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowStartupDialog", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowStartupDialog", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.AutoCorrect AutoCorrectEmail
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "AutoCorrectEmail", paramsArray);
				NetOffice.WordApi.AutoCorrect newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.AutoCorrect;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public NetOffice.WordApi.TaskPanes TaskPanes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "TaskPanes", paramsArray);
				NetOffice.WordApi.TaskPanes newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.TaskPanes;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public bool DefaultLegalBlackline
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DefaultLegalBlackline", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DefaultLegalBlackline", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.SmartTagRecognizers SmartTagRecognizers
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SmartTagRecognizers", paramsArray);
				NetOffice.WordApi.SmartTagRecognizers newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.SmartTagRecognizers;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.SmartTagTypes SmartTagTypes
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SmartTagTypes", paramsArray);
				NetOffice.WordApi.SmartTagTypes newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.SmartTagTypes;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public NetOffice.WordApi.XMLNamespaces XMLNamespaces
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "XMLNamespaces", paramsArray);
				NetOffice.WordApi.XMLNamespaces newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.XMLNamespaces;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public bool ArbitraryXMLSupportAvailable
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ArbitraryXMLSupportAvailable", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public string BuildFull
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "BuildFull", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public string BuildFeatureCrew
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "BuildFeatureCrew", paramsArray);
				return (string)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.Bibliography Bibliography
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Bibliography", paramsArray);
				NetOffice.WordApi.Bibliography newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.Bibliography;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public bool ShowStylePreviews
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ShowStylePreviews", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "ShowStylePreviews", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public bool RestrictLinkedStyles
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "RestrictLinkedStyles", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "RestrictLinkedStyles", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.OMathAutoCorrect OMathAutoCorrect
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "OMathAutoCorrect", paramsArray);
				NetOffice.WordApi.OMathAutoCorrect newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.OMathAutoCorrect;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public bool DisplayDocumentInformationPanel
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DisplayDocumentInformationPanel", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DisplayDocumentInformationPanel", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.OfficeApi.IAssistance Assistance
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Assistance", paramsArray);
				NetOffice.OfficeApi.IAssistance newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.IAssistance;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public bool OpenAttachmentsInFullScreen
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "OpenAttachmentsInFullScreen", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "OpenAttachmentsInFullScreen", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public Int32 ActiveEncryptionSession
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveEncryptionSession", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		[SupportByLibrary("Word", 12,14)]
		public bool DontResetInsertionPointProperties
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "DontResetInsertionPointProperties", paramsArray);
				return (bool)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "DontResetInsertionPointProperties", paramsArray);
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.OfficeApi.SmartArtLayouts SmartArtLayouts
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SmartArtLayouts", paramsArray);
				NetOffice.OfficeApi.SmartArtLayouts newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.SmartArtLayouts;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.OfficeApi.SmartArtQuickStyles SmartArtQuickStyles
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SmartArtQuickStyles", paramsArray);
				NetOffice.OfficeApi.SmartArtQuickStyles newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.SmartArtQuickStyles;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.OfficeApi.SmartArtColors SmartArtColors
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "SmartArtColors", paramsArray);
				NetOffice.OfficeApi.SmartArtColors newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.SmartArtColors;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.WordApi.UndoRecord UndoRecord
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "UndoRecord", paramsArray);
				NetOffice.WordApi.UndoRecord newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.UndoRecord;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.OfficeApi.PickerDialog PickerDialog
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "PickerDialog", paramsArray);
				NetOffice.OfficeApi.PickerDialog newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.OfficeApi.PickerDialog;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.WordApi.ProtectedViewWindows ProtectedViewWindows
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ProtectedViewWindows", paramsArray);
				NetOffice.WordApi.ProtectedViewWindows newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ProtectedViewWindows;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.WordApi.ProtectedViewWindow ActiveProtectedViewWindow
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "ActiveProtectedViewWindow", paramsArray);
				NetOffice.WordApi.ProtectedViewWindow newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as NetOffice.WordApi.ProtectedViewWindow;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public bool IsSandboxed
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "IsSandboxed", paramsArray);
				return (bool)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public NetOffice.OfficeApi.Enums.MsoFileValidationMode FileValidation
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "FileValidation", paramsArray);
				return (NetOffice.OfficeApi.Enums.MsoFileValidationMode)returnItem;
			}
			set
			{
				object[] paramsArray = Invoker.ValidateParamsArray(value);
				Invoker.PropertySet(this, "FileValidation", paramsArray);
			}
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="SaveChanges">ref optional object SaveChanges</param>
		/// <param name="OriginalFormat">ref optional object OriginalFormat</param>
		/// <param name="RouteDocument">ref optional object RouteDocument</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Quit(ref object saveChanges, ref object originalFormat, ref object routeDocument)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(saveChanges, originalFormat, routeDocument);
			Invoker.Method(this, "Quit", paramsArray, modifiers);
			saveChanges = (object)paramsArray[0];
			originalFormat = (object)paramsArray[1];
			routeDocument = (object)paramsArray[2];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Quit()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Quit", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ScreenRefresh()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ScreenRefresh", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Background">ref optional object Background</param>
		/// <param name="Append">ref optional object Append</param>
		/// <param name="Range">ref optional object Range</param>
		/// <param name="OutputFileName">ref optional object OutputFileName</param>
		/// <param name="From">ref optional object From</param>
		/// <param name="To">ref optional object To</param>
		/// <param name="Item">ref optional object Item</param>
		/// <param name="Copies">ref optional object Copies</param>
		/// <param name="Pages">ref optional object Pages</param>
		/// <param name="PageType">ref optional object PageType</param>
		/// <param name="PrintToFile">ref optional object PrintToFile</param>
		/// <param name="Collate">ref optional object Collate</param>
		/// <param name="FileName">ref optional object FileName</param>
		/// <param name="ActivePrinterMacGX">ref optional object ActivePrinterMacGX</param>
		/// <param name="ManualDuplexPrint">ref optional object ManualDuplexPrint</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PrintOutOld(ref object background, ref object append, ref object range, ref object outputFileName, ref object from, ref object to, ref object item, ref object copies, ref object pages, ref object pageType, ref object printToFile, ref object collate, ref object fileName, ref object activePrinterMacGX, ref object manualDuplexPrint)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(background, append, range, outputFileName, from, to, item, copies, pages, pageType, printToFile, collate, fileName, activePrinterMacGX, manualDuplexPrint);
			Invoker.Method(this, "PrintOutOld", paramsArray, modifiers);
			background = (object)paramsArray[0];
			append = (object)paramsArray[1];
			range = (object)paramsArray[2];
			outputFileName = (object)paramsArray[3];
			from = (object)paramsArray[4];
			to = (object)paramsArray[5];
			item = (object)paramsArray[6];
			copies = (object)paramsArray[7];
			pages = (object)paramsArray[8];
			pageType = (object)paramsArray[9];
			printToFile = (object)paramsArray[10];
			collate = (object)paramsArray[11];
			fileName = (object)paramsArray[12];
			activePrinterMacGX = (object)paramsArray[13];
			manualDuplexPrint = (object)paramsArray[14];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PrintOutOld()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PrintOutOld", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void LookupNameProperties(string name)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name);
			Invoker.Method(this, "LookupNameProperties", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="UnavailableFont">string UnavailableFont</param>
		/// <param name="SubstituteFont">string SubstituteFont</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SubstituteFont(string unavailableFont, string substituteFont)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(unavailableFont, substituteFont);
			Invoker.Method(this, "SubstituteFont", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Times">ref optional object Times</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool Repeat(ref object times)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(times);
			object returnItem = Invoker.MethodReturn(this, "Repeat", paramsArray);
			times = (object)paramsArray[0];
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool Repeat()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Repeat", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Channel">Int32 Channel</param>
		/// <param name="Command">string Command</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void DDEExecute(Int32 channel, string command)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(channel, command);
			Invoker.Method(this, "DDEExecute", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="App">string App</param>
		/// <param name="Topic">string Topic</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 DDEInitiate(string app, string topic)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(app, topic);
			object returnItem = Invoker.MethodReturn(this, "DDEInitiate", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Channel">Int32 Channel</param>
		/// <param name="Item">string Item</param>
		/// <param name="Data">string Data</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void DDEPoke(Int32 channel, string item, string data)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(channel, item, data);
			Invoker.Method(this, "DDEPoke", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Channel">Int32 Channel</param>
		/// <param name="Item">string Item</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string DDERequest(Int32 channel, string item)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(channel, item);
			object returnItem = Invoker.MethodReturn(this, "DDERequest", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Channel">Int32 Channel</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void DDETerminate(Int32 channel)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(channel);
			Invoker.Method(this, "DDETerminate", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void DDETerminateAll()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "DDETerminateAll", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Arg1">NetOffice.WordApi.Enums.WdKey Arg1</param>
		/// <param name="Arg2">ref optional object Arg2</param>
		/// <param name="Arg3">ref optional object Arg3</param>
		/// <param name="Arg4">ref optional object Arg4</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 BuildKeyCode(NetOffice.WordApi.Enums.WdKey arg1, ref object arg2, ref object arg3, ref object arg4)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(arg1, arg2, arg3, arg4);
			object returnItem = Invoker.MethodReturn(this, "BuildKeyCode", paramsArray);
			arg2 = (object)paramsArray[1];
			arg3 = (object)paramsArray[2];
			arg4 = (object)paramsArray[3];
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Arg1">NetOffice.WordApi.Enums.WdKey Arg1</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 BuildKeyCode(NetOffice.WordApi.Enums.WdKey arg1)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(arg1);
			object returnItem = Invoker.MethodReturn(this, "BuildKeyCode", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="KeyCode">Int32 KeyCode</param>
		/// <param name="KeyCode2">ref optional object KeyCode2</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string KeyString(Int32 keyCode, ref object keyCode2)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(keyCode, keyCode2);
			object returnItem = Invoker.MethodReturn(this, "KeyString", paramsArray);
			keyCode2 = (object)paramsArray[1];
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="KeyCode">Int32 KeyCode</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string KeyString(Int32 keyCode)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(keyCode);
			object returnItem = Invoker.MethodReturn(this, "KeyString", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Source">string Source</param>
		/// <param name="Destination">string Destination</param>
		/// <param name="Name">string Name</param>
		/// <param name="Object">NetOffice.WordApi.Enums.WdOrganizerObject Object</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void OrganizerCopy(string source, string destination, string name, NetOffice.WordApi.Enums.WdOrganizerObject _object)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(source, destination, name, _object);
			Invoker.Method(this, "OrganizerCopy", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Source">string Source</param>
		/// <param name="Name">string Name</param>
		/// <param name="Object">NetOffice.WordApi.Enums.WdOrganizerObject Object</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void OrganizerDelete(string source, string name, NetOffice.WordApi.Enums.WdOrganizerObject _object)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(source, name, _object);
			Invoker.Method(this, "OrganizerDelete", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Source">string Source</param>
		/// <param name="Name">string Name</param>
		/// <param name="NewName">string NewName</param>
		/// <param name="Object">NetOffice.WordApi.Enums.WdOrganizerObject Object</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void OrganizerRename(string source, string name, string newName, NetOffice.WordApi.Enums.WdOrganizerObject _object)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(source, name, newName, _object);
			Invoker.Method(this, "OrganizerRename", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="TagID">ref String[] TagID</param>
		/// <param name="Value">ref String[] Value</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void AddAddress(ref String[] tagID, ref String[] value)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true);
			object[] paramsArray = Invoker.ValidateParamsArray((object)tagID, (object)value);
			Invoker.Method(this, "AddAddress", paramsArray, modifiers);
			tagID = (String[])paramsArray[0];
			value = (String[])paramsArray[1];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Name">ref optional object Name</param>
		/// <param name="AddressProperties">ref optional object AddressProperties</param>
		/// <param name="UseAutoText">ref optional object UseAutoText</param>
		/// <param name="DisplaySelectDialog">ref optional object DisplaySelectDialog</param>
		/// <param name="SelectDialog">ref optional object SelectDialog</param>
		/// <param name="CheckNamesDialog">ref optional object CheckNamesDialog</param>
		/// <param name="RecentAddressesChoice">ref optional object RecentAddressesChoice</param>
		/// <param name="UpdateRecentAddresses">ref optional object UpdateRecentAddresses</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string GetAddress(ref object name, ref object addressProperties, ref object useAutoText, ref object displaySelectDialog, ref object selectDialog, ref object checkNamesDialog, ref object recentAddressesChoice, ref object updateRecentAddresses)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(name, addressProperties, useAutoText, displaySelectDialog, selectDialog, checkNamesDialog, recentAddressesChoice, updateRecentAddresses);
			object returnItem = Invoker.MethodReturn(this, "GetAddress", paramsArray);
			name = (object)paramsArray[0];
			addressProperties = (object)paramsArray[1];
			useAutoText = (object)paramsArray[2];
			displaySelectDialog = (object)paramsArray[3];
			selectDialog = (object)paramsArray[4];
			checkNamesDialog = (object)paramsArray[5];
			recentAddressesChoice = (object)paramsArray[6];
			updateRecentAddresses = (object)paramsArray[7];
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string GetAddress()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "GetAddress", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="String">string String</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool CheckGrammar(string _string)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(_string);
			object returnItem = Invoker.MethodReturn(this, "CheckGrammar", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Word">string Word</param>
		/// <param name="CustomDictionary">ref optional object CustomDictionary</param>
		/// <param name="IgnoreUppercase">ref optional object IgnoreUppercase</param>
		/// <param name="MainDictionary">ref optional object MainDictionary</param>
		/// <param name="CustomDictionary2">ref optional object CustomDictionary2</param>
		/// <param name="CustomDictionary3">ref optional object CustomDictionary3</param>
		/// <param name="CustomDictionary4">ref optional object CustomDictionary4</param>
		/// <param name="CustomDictionary5">ref optional object CustomDictionary5</param>
		/// <param name="CustomDictionary6">ref optional object CustomDictionary6</param>
		/// <param name="CustomDictionary7">ref optional object CustomDictionary7</param>
		/// <param name="CustomDictionary8">ref optional object CustomDictionary8</param>
		/// <param name="CustomDictionary9">ref optional object CustomDictionary9</param>
		/// <param name="CustomDictionary10">ref optional object CustomDictionary10</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool CheckSpelling(string word, ref object customDictionary, ref object ignoreUppercase, ref object mainDictionary, ref object customDictionary2, ref object customDictionary3, ref object customDictionary4, ref object customDictionary5, ref object customDictionary6, ref object customDictionary7, ref object customDictionary8, ref object customDictionary9, ref object customDictionary10)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(word, customDictionary, ignoreUppercase, mainDictionary, customDictionary2, customDictionary3, customDictionary4, customDictionary5, customDictionary6, customDictionary7, customDictionary8, customDictionary9, customDictionary10);
			object returnItem = Invoker.MethodReturn(this, "CheckSpelling", paramsArray);
			customDictionary = (object)paramsArray[1];
			ignoreUppercase = (object)paramsArray[2];
			mainDictionary = (object)paramsArray[3];
			customDictionary2 = (object)paramsArray[4];
			customDictionary3 = (object)paramsArray[5];
			customDictionary4 = (object)paramsArray[6];
			customDictionary5 = (object)paramsArray[7];
			customDictionary6 = (object)paramsArray[8];
			customDictionary7 = (object)paramsArray[9];
			customDictionary8 = (object)paramsArray[10];
			customDictionary9 = (object)paramsArray[11];
			customDictionary10 = (object)paramsArray[12];
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Word">string Word</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public bool CheckSpelling(string word)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(word);
			object returnItem = Invoker.MethodReturn(this, "CheckSpelling", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ResetIgnoreAll()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ResetIgnoreAll", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Word">string Word</param>
		/// <param name="CustomDictionary">ref optional object CustomDictionary</param>
		/// <param name="IgnoreUppercase">ref optional object IgnoreUppercase</param>
		/// <param name="MainDictionary">ref optional object MainDictionary</param>
		/// <param name="SuggestionMode">ref optional object SuggestionMode</param>
		/// <param name="CustomDictionary2">ref optional object CustomDictionary2</param>
		/// <param name="CustomDictionary3">ref optional object CustomDictionary3</param>
		/// <param name="CustomDictionary4">ref optional object CustomDictionary4</param>
		/// <param name="CustomDictionary5">ref optional object CustomDictionary5</param>
		/// <param name="CustomDictionary6">ref optional object CustomDictionary6</param>
		/// <param name="CustomDictionary7">ref optional object CustomDictionary7</param>
		/// <param name="CustomDictionary8">ref optional object CustomDictionary8</param>
		/// <param name="CustomDictionary9">ref optional object CustomDictionary9</param>
		/// <param name="CustomDictionary10">ref optional object CustomDictionary10</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.SpellingSuggestions GetSpellingSuggestions(string word, ref object customDictionary, ref object ignoreUppercase, ref object mainDictionary, ref object suggestionMode, ref object customDictionary2, ref object customDictionary3, ref object customDictionary4, ref object customDictionary5, ref object customDictionary6, ref object customDictionary7, ref object customDictionary8, ref object customDictionary9, ref object customDictionary10)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(word, customDictionary, ignoreUppercase, mainDictionary, suggestionMode, customDictionary2, customDictionary3, customDictionary4, customDictionary5, customDictionary6, customDictionary7, customDictionary8, customDictionary9, customDictionary10);
			object returnItem = Invoker.MethodReturn(this, "GetSpellingSuggestions", paramsArray, modifiers);
			NetOffice.WordApi.SpellingSuggestions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.SpellingSuggestions;
			customDictionary = (object)paramsArray[1];
			ignoreUppercase = (object)paramsArray[2];
			mainDictionary = (object)paramsArray[3];
			suggestionMode = (object)paramsArray[4];
			customDictionary2 = (object)paramsArray[5];
			customDictionary3 = (object)paramsArray[6];
			customDictionary4 = (object)paramsArray[7];
			customDictionary5 = (object)paramsArray[8];
			customDictionary6 = (object)paramsArray[9];
			customDictionary7 = (object)paramsArray[10];
			customDictionary8 = (object)paramsArray[11];
			customDictionary9 = (object)paramsArray[12];
			customDictionary10 = (object)paramsArray[13];
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Word">string Word</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.SpellingSuggestions GetSpellingSuggestions(string word)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(word);
			object returnItem = Invoker.MethodReturn(this, "GetSpellingSuggestions", paramsArray);
			NetOffice.WordApi.SpellingSuggestions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.SpellingSuggestions;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void GoBack()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "GoBack", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="HelpType">ref object HelpType</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Help(ref object helpType)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true);
			object[] paramsArray = Invoker.ValidateParamsArray(helpType);
			Invoker.Method(this, "Help", paramsArray, modifiers);
			helpType = (object)paramsArray[0];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void AutomaticChange()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "AutomaticChange", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ShowMe()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ShowMe", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void HelpTool()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "HelpTool", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.Window NewWindow()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "NewWindow", paramsArray);
			NetOffice.WordApi.Window newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Window;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="ListAllCommands">bool ListAllCommands</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ListCommands(bool listAllCommands)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(listAllCommands);
			Invoker.Method(this, "ListCommands", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ShowClipboard()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ShowClipboard", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="When">ref object When</param>
		/// <param name="Name">string Name</param>
		/// <param name="Tolerance">ref optional object Tolerance</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void OnTime(ref object when, string name, ref object tolerance)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(when, name, tolerance);
			Invoker.Method(this, "OnTime", paramsArray, modifiers);
			when = (object)paramsArray[0];
			tolerance = (object)paramsArray[2];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="When">ref object When</param>
		/// <param name="Name">string Name</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void OnTime(ref object when, string name)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,false);
			object[] paramsArray = Invoker.ValidateParamsArray(when, name);
			Invoker.Method(this, "OnTime", paramsArray, modifiers);
			when = (object)paramsArray[0];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void NextLetter()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "NextLetter", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Zone">string Zone</param>
		/// <param name="Server">string Server</param>
		/// <param name="Volume">string Volume</param>
		/// <param name="User">ref optional object User</param>
		/// <param name="UserPassword">ref optional object UserPassword</param>
		/// <param name="VolumePassword">ref optional object VolumePassword</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int16 MountVolume(string zone, string server, string volume, ref object user, ref object userPassword, ref object volumePassword)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,false,false,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(zone, server, volume, user, userPassword, volumePassword);
			object returnItem = Invoker.MethodReturn(this, "MountVolume", paramsArray);
			user = (object)paramsArray[3];
			userPassword = (object)paramsArray[4];
			volumePassword = (object)paramsArray[5];
			return (Int16)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Zone">string Zone</param>
		/// <param name="Server">string Server</param>
		/// <param name="Volume">string Volume</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int16 MountVolume(string zone, string server, string volume)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(zone, server, volume);
			object returnItem = Invoker.MethodReturn(this, "MountVolume", paramsArray);
			return (Int16)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="String">string String</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string CleanString(string _string)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(_string);
			object returnItem = Invoker.MethodReturn(this, "CleanString", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SendFax()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "SendFax", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Path">string Path</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ChangeFileOpenDirectory(string path)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(path);
			Invoker.Method(this, "ChangeFileOpenDirectory", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="MacroName">string MacroName</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void RunOld(string macroName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(macroName);
			Invoker.Method(this, "RunOld", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void GoForward()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "GoForward", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Left">Int32 Left</param>
		/// <param name="Top">Int32 Top</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Move(Int32 left, Int32 top)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(left, top);
			Invoker.Method(this, "Move", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Width">Int32 Width</param>
		/// <param name="Height">Int32 Height</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Resize(Int32 width, Int32 height)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(width, height);
			Invoker.Method(this, "Resize", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Inches">Single Inches</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single InchesToPoints(Single inches)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(inches);
			object returnItem = Invoker.MethodReturn(this, "InchesToPoints", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Centimeters">Single Centimeters</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single CentimetersToPoints(Single centimeters)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(centimeters);
			object returnItem = Invoker.MethodReturn(this, "CentimetersToPoints", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Millimeters">Single Millimeters</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single MillimetersToPoints(Single millimeters)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(millimeters);
			object returnItem = Invoker.MethodReturn(this, "MillimetersToPoints", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Picas">Single Picas</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PicasToPoints(Single picas)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(picas);
			object returnItem = Invoker.MethodReturn(this, "PicasToPoints", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Lines">Single Lines</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single LinesToPoints(Single lines)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(lines);
			object returnItem = Invoker.MethodReturn(this, "LinesToPoints", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Points">Single Points</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PointsToInches(Single points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(points);
			object returnItem = Invoker.MethodReturn(this, "PointsToInches", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Points">Single Points</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PointsToCentimeters(Single points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(points);
			object returnItem = Invoker.MethodReturn(this, "PointsToCentimeters", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Points">Single Points</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PointsToMillimeters(Single points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(points);
			object returnItem = Invoker.MethodReturn(this, "PointsToMillimeters", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Points">Single Points</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PointsToPicas(Single points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(points);
			object returnItem = Invoker.MethodReturn(this, "PointsToPicas", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Points">Single Points</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PointsToLines(Single points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(points);
			object returnItem = Invoker.MethodReturn(this, "PointsToLines", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void Activate()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Activate", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Points">Single Points</param>
		/// <param name="fVertical">ref optional object fVertical</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PointsToPixels(Single points, ref object fVertical)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(points, fVertical);
			object returnItem = Invoker.MethodReturn(this, "PointsToPixels", paramsArray);
			fVertical = (object)paramsArray[1];
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Points">Single Points</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PointsToPixels(Single points)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(points);
			object returnItem = Invoker.MethodReturn(this, "PointsToPixels", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Pixels">Single Pixels</param>
		/// <param name="fVertical">ref optional object fVertical</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PixelsToPoints(Single pixels, ref object fVertical)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true);
			object[] paramsArray = Invoker.ValidateParamsArray(pixels, fVertical);
			object returnItem = Invoker.MethodReturn(this, "PixelsToPoints", paramsArray);
			fVertical = (object)paramsArray[1];
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Pixels">Single Pixels</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Single PixelsToPoints(Single pixels)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(pixels);
			object returnItem = Invoker.MethodReturn(this, "PixelsToPoints", paramsArray);
			return (Single)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void KeyboardLatin()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "KeyboardLatin", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void KeyboardBidi()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "KeyboardBidi", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void ToggleKeyboard()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "ToggleKeyboard", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="LangId">Int32 LangId</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public Int32 Keyboard(Int32 langId)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(langId);
			object returnItem = Invoker.MethodReturn(this, "Keyboard", paramsArray);
			return (Int32)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string ProductCode()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "ProductCode", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public NetOffice.WordApi.DefaultWebOptions DefaultWebOptions()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "DefaultWebOptions", paramsArray);
			NetOffice.WordApi.DefaultWebOptions newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.DefaultWebOptions;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Range">ref object Range</param>
		/// <param name="cid">ref object cid</param>
		/// <param name="piCSE">ref object piCSE</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void DiscussionSupport(ref object range, ref object cid, ref object piCSE)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(range, cid, piCSE);
			Invoker.Method(this, "DiscussionSupport", paramsArray, modifiers);
			range = (object)paramsArray[0];
			cid = (object)paramsArray[1];
			piCSE = (object)paramsArray[2];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Name">string Name</param>
		/// <param name="DocumentType">NetOffice.WordApi.Enums.WdDocumentMedium DocumentType</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void SetDefaultTheme(string name, NetOffice.WordApi.Enums.WdDocumentMedium documentType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(name, documentType);
			Invoker.Method(this, "SetDefaultTheme", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="DocumentType">NetOffice.WordApi.Enums.WdDocumentMedium DocumentType</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public string GetDefaultTheme(NetOffice.WordApi.Enums.WdDocumentMedium documentType)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(documentType);
			object returnItem = Invoker.MethodReturn(this, "GetDefaultTheme", paramsArray);
			return (string)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="Background">ref optional object Background</param>
		/// <param name="Append">ref optional object Append</param>
		/// <param name="Range">ref optional object Range</param>
		/// <param name="OutputFileName">ref optional object OutputFileName</param>
		/// <param name="From">ref optional object From</param>
		/// <param name="To">ref optional object To</param>
		/// <param name="Item">ref optional object Item</param>
		/// <param name="Copies">ref optional object Copies</param>
		/// <param name="Pages">ref optional object Pages</param>
		/// <param name="PageType">ref optional object PageType</param>
		/// <param name="PrintToFile">ref optional object PrintToFile</param>
		/// <param name="Collate">ref optional object Collate</param>
		/// <param name="FileName">ref optional object FileName</param>
		/// <param name="ActivePrinterMacGX">ref optional object ActivePrinterMacGX</param>
		/// <param name="ManualDuplexPrint">ref optional object ManualDuplexPrint</param>
		/// <param name="PrintZoomColumn">ref optional object PrintZoomColumn</param>
		/// <param name="PrintZoomRow">ref optional object PrintZoomRow</param>
		/// <param name="PrintZoomPaperWidth">ref optional object PrintZoomPaperWidth</param>
		/// <param name="PrintZoomPaperHeight">ref optional object PrintZoomPaperHeight</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PrintOut(ref object background, ref object append, ref object range, ref object outputFileName, ref object from, ref object to, ref object item, ref object copies, ref object pages, ref object pageType, ref object printToFile, ref object collate, ref object fileName, ref object activePrinterMacGX, ref object manualDuplexPrint, ref object printZoomColumn, ref object printZoomRow, ref object printZoomPaperWidth, ref object printZoomPaperHeight)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(background, append, range, outputFileName, from, to, item, copies, pages, pageType, printToFile, collate, fileName, activePrinterMacGX, manualDuplexPrint, printZoomColumn, printZoomRow, printZoomPaperWidth, printZoomPaperHeight);
			Invoker.Method(this, "PrintOut", paramsArray, modifiers);
			background = (object)paramsArray[0];
			append = (object)paramsArray[1];
			range = (object)paramsArray[2];
			outputFileName = (object)paramsArray[3];
			from = (object)paramsArray[4];
			to = (object)paramsArray[5];
			item = (object)paramsArray[6];
			copies = (object)paramsArray[7];
			pages = (object)paramsArray[8];
			pageType = (object)paramsArray[9];
			printToFile = (object)paramsArray[10];
			collate = (object)paramsArray[11];
			fileName = (object)paramsArray[12];
			activePrinterMacGX = (object)paramsArray[13];
			manualDuplexPrint = (object)paramsArray[14];
			printZoomColumn = (object)paramsArray[15];
			printZoomRow = (object)paramsArray[16];
			printZoomPaperWidth = (object)paramsArray[17];
			printZoomPaperHeight = (object)paramsArray[18];
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public void PrintOut()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PrintOut", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="MacroName">string MacroName</param>
		/// <param name="varg1">ref optional object varg1</param>
		/// <param name="varg2">ref optional object varg2</param>
		/// <param name="varg3">ref optional object varg3</param>
		/// <param name="varg4">ref optional object varg4</param>
		/// <param name="varg5">ref optional object varg5</param>
		/// <param name="varg6">ref optional object varg6</param>
		/// <param name="varg7">ref optional object varg7</param>
		/// <param name="varg8">ref optional object varg8</param>
		/// <param name="varg9">ref optional object varg9</param>
		/// <param name="varg10">ref optional object varg10</param>
		/// <param name="varg11">ref optional object varg11</param>
		/// <param name="varg12">ref optional object varg12</param>
		/// <param name="varg13">ref optional object varg13</param>
		/// <param name="varg14">ref optional object varg14</param>
		/// <param name="varg15">ref optional object varg15</param>
		/// <param name="varg16">ref optional object varg16</param>
		/// <param name="varg17">ref optional object varg17</param>
		/// <param name="varg18">ref optional object varg18</param>
		/// <param name="varg19">ref optional object varg19</param>
		/// <param name="varg20">ref optional object varg20</param>
		/// <param name="varg21">ref optional object varg21</param>
		/// <param name="varg22">ref optional object varg22</param>
		/// <param name="varg23">ref optional object varg23</param>
		/// <param name="varg24">ref optional object varg24</param>
		/// <param name="varg25">ref optional object varg25</param>
		/// <param name="varg26">ref optional object varg26</param>
		/// <param name="varg27">ref optional object varg27</param>
		/// <param name="varg28">ref optional object varg28</param>
		/// <param name="varg29">ref optional object varg29</param>
		/// <param name="varg30">ref optional object varg30</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public object Run(string macroName, ref object varg1, ref object varg2, ref object varg3, ref object varg4, ref object varg5, ref object varg6, ref object varg7, ref object varg8, ref object varg9, ref object varg10, ref object varg11, ref object varg12, ref object varg13, ref object varg14, ref object varg15, ref object varg16, ref object varg17, ref object varg18, ref object varg19, ref object varg20, ref object varg21, ref object varg22, ref object varg23, ref object varg24, ref object varg25, ref object varg26, ref object varg27, ref object varg28, ref object varg29, ref object varg30)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(macroName, varg1, varg2, varg3, varg4, varg5, varg6, varg7, varg8, varg9, varg10, varg11, varg12, varg13, varg14, varg15, varg16, varg17, varg18, varg19, varg20, varg21, varg22, varg23, varg24, varg25, varg26, varg27, varg28, varg29, varg30);
			object returnItem = Invoker.MethodReturn(this, "Run", paramsArray, modifiers);
			Type returnItemType = Invoker.GetObjectType(returnItem);
			if ((null != returnItem) && (true == returnItemType.IsCOMObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
				varg1 = (object)paramsArray[1];
			varg2 = (object)paramsArray[2];
			varg3 = (object)paramsArray[3];
			varg4 = (object)paramsArray[4];
			varg5 = (object)paramsArray[5];
			varg6 = (object)paramsArray[6];
			varg7 = (object)paramsArray[7];
			varg8 = (object)paramsArray[8];
			varg9 = (object)paramsArray[9];
			varg10 = (object)paramsArray[10];
			varg11 = (object)paramsArray[11];
			varg12 = (object)paramsArray[12];
			varg13 = (object)paramsArray[13];
			varg14 = (object)paramsArray[14];
			varg15 = (object)paramsArray[15];
			varg16 = (object)paramsArray[16];
			varg17 = (object)paramsArray[17];
			varg18 = (object)paramsArray[18];
			varg19 = (object)paramsArray[19];
			varg20 = (object)paramsArray[20];
			varg21 = (object)paramsArray[21];
			varg22 = (object)paramsArray[22];
			varg23 = (object)paramsArray[23];
			varg24 = (object)paramsArray[24];
			varg25 = (object)paramsArray[25];
			varg26 = (object)paramsArray[26];
			varg27 = (object)paramsArray[27];
			varg28 = (object)paramsArray[28];
			varg29 = (object)paramsArray[29];
			varg30 = (object)paramsArray[30];
			return newObject;
			}
			else
			{
				varg1 = (object)paramsArray[1];
			varg2 = (object)paramsArray[2];
			varg3 = (object)paramsArray[3];
			varg4 = (object)paramsArray[4];
			varg5 = (object)paramsArray[5];
			varg6 = (object)paramsArray[6];
			varg7 = (object)paramsArray[7];
			varg8 = (object)paramsArray[8];
			varg9 = (object)paramsArray[9];
			varg10 = (object)paramsArray[10];
			varg11 = (object)paramsArray[11];
			varg12 = (object)paramsArray[12];
			varg13 = (object)paramsArray[13];
			varg14 = (object)paramsArray[14];
			varg15 = (object)paramsArray[15];
			varg16 = (object)paramsArray[16];
			varg17 = (object)paramsArray[17];
			varg18 = (object)paramsArray[18];
			varg19 = (object)paramsArray[19];
			varg20 = (object)paramsArray[20];
			varg21 = (object)paramsArray[21];
			varg22 = (object)paramsArray[22];
			varg23 = (object)paramsArray[23];
			varg24 = (object)paramsArray[24];
			varg25 = (object)paramsArray[25];
			varg26 = (object)paramsArray[26];
			varg27 = (object)paramsArray[27];
			varg28 = (object)paramsArray[28];
			varg29 = (object)paramsArray[29];
			varg30 = (object)paramsArray[30];
			return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 9 10 11 12 14 
		/// </summary>
		/// <param name="MacroName">string MacroName</param>
		[SupportByLibrary("Word", 9,10,11,12,14)]
		public object Run(string macroName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(macroName);
			object returnItem = Invoker.MethodReturn(this, "Run", paramsArray);
			Type returnItemType = Invoker.GetObjectType(returnItem);
			if ((null != returnItem) && (true == returnItemType.IsCOMObject))
			{
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem, returnItemType);
				return newObject;
			}
			else
			{
				return  returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		/// <param name="Background">ref optional object Background</param>
		/// <param name="Append">ref optional object Append</param>
		/// <param name="Range">ref optional object Range</param>
		/// <param name="OutputFileName">ref optional object OutputFileName</param>
		/// <param name="From">ref optional object From</param>
		/// <param name="To">ref optional object To</param>
		/// <param name="Item">ref optional object Item</param>
		/// <param name="Copies">ref optional object Copies</param>
		/// <param name="Pages">ref optional object Pages</param>
		/// <param name="PageType">ref optional object PageType</param>
		/// <param name="PrintToFile">ref optional object PrintToFile</param>
		/// <param name="Collate">ref optional object Collate</param>
		/// <param name="FileName">ref optional object FileName</param>
		/// <param name="ActivePrinterMacGX">ref optional object ActivePrinterMacGX</param>
		/// <param name="ManualDuplexPrint">ref optional object ManualDuplexPrint</param>
		/// <param name="PrintZoomColumn">ref optional object PrintZoomColumn</param>
		/// <param name="PrintZoomRow">ref optional object PrintZoomRow</param>
		/// <param name="PrintZoomPaperWidth">ref optional object PrintZoomPaperWidth</param>
		/// <param name="PrintZoomPaperHeight">ref optional object PrintZoomPaperHeight</param>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void PrintOut2000(ref object background, ref object append, ref object range, ref object outputFileName, ref object from, ref object to, ref object item, ref object copies, ref object pages, ref object pageType, ref object printToFile, ref object collate, ref object fileName, ref object activePrinterMacGX, ref object manualDuplexPrint, ref object printZoomColumn, ref object printZoomRow, ref object printZoomPaperWidth, ref object printZoomPaperHeight)
		{
			ParameterModifier[] modifiers = Invoker.CreateParamModifiers(true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true);
			object[] paramsArray = Invoker.ValidateParamsArray(background, append, range, outputFileName, from, to, item, copies, pages, pageType, printToFile, collate, fileName, activePrinterMacGX, manualDuplexPrint, printZoomColumn, printZoomRow, printZoomPaperWidth, printZoomPaperHeight);
			Invoker.Method(this, "PrintOut2000", paramsArray, modifiers);
			background = (object)paramsArray[0];
			append = (object)paramsArray[1];
			range = (object)paramsArray[2];
			outputFileName = (object)paramsArray[3];
			from = (object)paramsArray[4];
			to = (object)paramsArray[5];
			item = (object)paramsArray[6];
			copies = (object)paramsArray[7];
			pages = (object)paramsArray[8];
			pageType = (object)paramsArray[9];
			printToFile = (object)paramsArray[10];
			collate = (object)paramsArray[11];
			fileName = (object)paramsArray[12];
			activePrinterMacGX = (object)paramsArray[13];
			manualDuplexPrint = (object)paramsArray[14];
			printZoomColumn = (object)paramsArray[15];
			printZoomRow = (object)paramsArray[16];
			printZoomPaperWidth = (object)paramsArray[17];
			printZoomPaperHeight = (object)paramsArray[18];
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public void PrintOut2000()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PrintOut2000", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 10 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 10,11,12,14)]
		public bool Dummy2()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Dummy2", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary 11 12 14 
		/// </summary>
		[SupportByLibrary("Word", 11,12,14)]
		public void PutFocusInMailHeader()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "PutFocusInMailHeader", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		/// <param name="FileName">string FileName</param>
		[SupportByLibrary("Word", 12,14)]
		public void LoadMasterList(string fileName)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(fileName);
			Invoker.Method(this, "LoadMasterList", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		/// <param name="OriginalDocument">NetOffice.WordApi.Document OriginalDocument</param>
		/// <param name="RevisedDocument">NetOffice.WordApi.Document RevisedDocument</param>
		/// <param name="Destination">NetOffice.WordApi.Enums.WdCompareDestination Destination</param>
		/// <param name="Granularity">NetOffice.WordApi.Enums.WdGranularity Granularity</param>
		/// <param name="CompareFormatting">bool CompareFormatting</param>
		/// <param name="CompareCaseChanges">bool CompareCaseChanges</param>
		/// <param name="CompareWhitespace">bool CompareWhitespace</param>
		/// <param name="CompareTables">bool CompareTables</param>
		/// <param name="CompareHeaders">bool CompareHeaders</param>
		/// <param name="CompareFootnotes">bool CompareFootnotes</param>
		/// <param name="CompareTextboxes">bool CompareTextboxes</param>
		/// <param name="CompareFields">bool CompareFields</param>
		/// <param name="CompareComments">bool CompareComments</param>
		/// <param name="CompareMoves">bool CompareMoves</param>
		/// <param name="RevisedAuthor">string RevisedAuthor</param>
		/// <param name="IgnoreAllComparisonWarnings">bool IgnoreAllComparisonWarnings</param>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.Document CompareDocuments(NetOffice.WordApi.Document originalDocument, NetOffice.WordApi.Document revisedDocument, NetOffice.WordApi.Enums.WdCompareDestination destination, NetOffice.WordApi.Enums.WdGranularity granularity, bool compareFormatting, bool compareCaseChanges, bool compareWhitespace, bool compareTables, bool compareHeaders, bool compareFootnotes, bool compareTextboxes, bool compareFields, bool compareComments, bool compareMoves, string revisedAuthor, bool ignoreAllComparisonWarnings)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(originalDocument, revisedDocument, destination, granularity, compareFormatting, compareCaseChanges, compareWhitespace, compareTables, compareHeaders, compareFootnotes, compareTextboxes, compareFields, compareComments, compareMoves, revisedAuthor, ignoreAllComparisonWarnings);
			object returnItem = Invoker.MethodReturn(this, "CompareDocuments", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 12 14 
		/// </summary>
		/// <param name="OriginalDocument">NetOffice.WordApi.Document OriginalDocument</param>
		/// <param name="RevisedDocument">NetOffice.WordApi.Document RevisedDocument</param>
		/// <param name="Destination">NetOffice.WordApi.Enums.WdCompareDestination Destination</param>
		/// <param name="Granularity">NetOffice.WordApi.Enums.WdGranularity Granularity</param>
		/// <param name="CompareFormatting">bool CompareFormatting</param>
		/// <param name="CompareCaseChanges">bool CompareCaseChanges</param>
		/// <param name="CompareWhitespace">bool CompareWhitespace</param>
		/// <param name="CompareTables">bool CompareTables</param>
		/// <param name="CompareHeaders">bool CompareHeaders</param>
		/// <param name="CompareFootnotes">bool CompareFootnotes</param>
		/// <param name="CompareTextboxes">bool CompareTextboxes</param>
		/// <param name="CompareFields">bool CompareFields</param>
		/// <param name="CompareComments">bool CompareComments</param>
		/// <param name="CompareMoves">bool CompareMoves</param>
		/// <param name="OriginalAuthor">string OriginalAuthor</param>
		/// <param name="RevisedAuthor">string RevisedAuthor</param>
		/// <param name="FormatFrom">NetOffice.WordApi.Enums.WdMergeFormatFrom FormatFrom</param>
		[SupportByLibrary("Word", 12,14)]
		public NetOffice.WordApi.Document MergeDocuments(NetOffice.WordApi.Document originalDocument, NetOffice.WordApi.Document revisedDocument, NetOffice.WordApi.Enums.WdCompareDestination destination, NetOffice.WordApi.Enums.WdGranularity granularity, bool compareFormatting, bool compareCaseChanges, bool compareWhitespace, bool compareTables, bool compareHeaders, bool compareFootnotes, bool compareTextboxes, bool compareFields, bool compareComments, bool compareMoves, string originalAuthor, string revisedAuthor, NetOffice.WordApi.Enums.WdMergeFormatFrom formatFrom)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(originalDocument, revisedDocument, destination, granularity, compareFormatting, compareCaseChanges, compareWhitespace, compareTables, compareHeaders, compareFootnotes, compareTextboxes, compareFields, compareComments, compareMoves, originalAuthor, revisedAuthor, formatFrom);
			object returnItem = Invoker.MethodReturn(this, "MergeDocuments", paramsArray);
			NetOffice.WordApi.Document newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as NetOffice.WordApi.Document;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		/// <param name="LocalDocument">NetOffice.WordApi.Document LocalDocument</param>
		/// <param name="ServerDocument">NetOffice.WordApi.Document ServerDocument</param>
		/// <param name="BaseDocument">NetOffice.WordApi.Document BaseDocument</param>
		/// <param name="FavorSource">bool FavorSource</param>
		[SupportByLibrary("Word", 14)]
		public void ThreeWayMerge(NetOffice.WordApi.Document localDocument, NetOffice.WordApi.Document serverDocument, NetOffice.WordApi.Document baseDocument, bool favorSource)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(localDocument, serverDocument, baseDocument, favorSource);
			Invoker.Method(this, "ThreeWayMerge", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary 14 
		/// </summary>
		[SupportByLibrary("Word", 14)]
		public void Dummy4()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Dummy4", paramsArray);
		}

		#endregion
		#pragma warning restore
	}
}