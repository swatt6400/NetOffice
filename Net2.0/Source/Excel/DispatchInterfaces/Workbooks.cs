//Generated by LateBindingApi.CodeGenerator
using System;
using NetRuntimeSystem = System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.ComponentModel;
using System.Reflection;
using System.Collections;
using LateBindingApi.Core;
namespace LateBindingApi.ExcelApi
{
	///<summary>
	/// DispatchInterface Workbooks SupportByLibrary XL09 XL10 XL11 XL12 XL14 
	///</summary>
	[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
	public class Workbooks : COMObject ,IEnumerable
	{
		#pragma warning disable
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Workbooks(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Workbooks(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Workbooks(COMObject replacedObject) : base(replacedObject)
		{
		}
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public Workbooks()
		{
		}
		
		#endregion
		
		#region Properties

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Application Application
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Application", paramsArray);
				LateBindingApi.ExcelApi.Application newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as LateBindingApi.ExcelApi.Application;
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Enums.XlCreator Creator
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Creator", paramsArray);
				return (LateBindingApi.ExcelApi.Enums.XlCreator)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Parent", paramsArray);
				COMObject newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem);
				return newObject;
			}
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public Int32 Count
		{
			get
			{
				object[] paramsArray = null;
				object returnItem = Invoker.PropertyGet(this, "Count", paramsArray);
				return (Int32)returnItem;
			}
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Index">object Index</param>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook get_Item(object index)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(index);
			object returnItem = Invoker.PropertyGet(this, "Item", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Index">object Index</param>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		[NetRuntimeSystem.Runtime.CompilerServices.IndexerName("IndexerItem")]
		public LateBindingApi.ExcelApi.Workbook this[object index]
		{
			get
{			
			object[] paramsArray = Invoker.ValidateParamsArray(index);
			object returnItem = Invoker.PropertyGet(this, "_Default", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this,returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
			}
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Template">optional object Template</param>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook Add(object template)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(template);
			object returnItem = Invoker.MethodReturn(this, "Add", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook Add()
		{
			object[] paramsArray = null;
			object returnItem = Invoker.MethodReturn(this, "Add", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public void Close()
		{
			object[] paramsArray = null;
			Invoker.Method(this, "Close", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL09 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="UpdateLinks">optional object UpdateLinks</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Password">optional object Password</param>
		/// <param name="WriteResPassword">optional object WriteResPassword</param>
		/// <param name="IgnoreReadOnlyRecommended">optional object IgnoreReadOnlyRecommended</param>
		/// <param name="Origin">optional object Origin</param>
		/// <param name="Delimiter">optional object Delimiter</param>
		/// <param name="Editable">optional object Editable</param>
		/// <param name="Notify">optional object Notify</param>
		/// <param name="Converter">optional object Converter</param>
		/// <param name="AddToMru">optional object AddToMru</param>
		[SupportByLibrary("XL09")]
		public LateBindingApi.ExcelApi.Workbook Open(string filename, object updateLinks, object readOnly, object format, object password, object writeResPassword, object ignoreReadOnlyRecommended, object origin, object delimiter, object editable, object notify, object converter, object addToMru)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, updateLinks, readOnly, format, password, writeResPassword, ignoreReadOnlyRecommended, origin, delimiter, editable, notify, converter, addToMru);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="UpdateLinks">optional object UpdateLinks</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Password">optional object Password</param>
		/// <param name="WriteResPassword">optional object WriteResPassword</param>
		/// <param name="IgnoreReadOnlyRecommended">optional object IgnoreReadOnlyRecommended</param>
		/// <param name="Origin">optional object Origin</param>
		/// <param name="Delimiter">optional object Delimiter</param>
		/// <param name="Editable">optional object Editable</param>
		/// <param name="Notify">optional object Notify</param>
		/// <param name="Converter">optional object Converter</param>
		/// <param name="AddToMru">optional object AddToMru</param>
		/// <param name="Local">optional object Local</param>
		/// <param name="CorruptLoad">optional object CorruptLoad</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook Open(string filename, object updateLinks, object readOnly, object format, object password, object writeResPassword, object ignoreReadOnlyRecommended, object origin, object delimiter, object editable, object notify, object converter, object addToMru, object local, object corruptLoad)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, updateLinks, readOnly, format, password, writeResPassword, ignoreReadOnlyRecommended, origin, delimiter, editable, notify, converter, addToMru, local, corruptLoad);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook Open(string filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			object returnItem = Invoker.MethodReturn(this, "Open", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL09 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		/// <param name="ConsecutiveDelimiter">optional object ConsecutiveDelimiter</param>
		/// <param name="Tab">optional object Tab</param>
		/// <param name="Semicolon">optional object Semicolon</param>
		/// <param name="Comma">optional object Comma</param>
		/// <param name="Space">optional object Space</param>
		/// <param name="Other">optional object Other</param>
		/// <param name="OtherChar">optional object OtherChar</param>
		/// <param name="FieldInfo">optional object FieldInfo</param>
		/// <param name="TextVisualLayout">optional object TextVisualLayout</param>
		[SupportByLibrary("XL09")]
		public void _OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier, object consecutiveDelimiter, object tab, object semicolon, object comma, object space, object other, object otherChar, object fieldInfo, object textVisualLayout)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier, consecutiveDelimiter, tab, semicolon, comma, space, other, otherChar, fieldInfo, textVisualLayout);
			Invoker.Method(this, "_OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		/// <param name="ConsecutiveDelimiter">optional object ConsecutiveDelimiter</param>
		/// <param name="Tab">optional object Tab</param>
		/// <param name="Semicolon">optional object Semicolon</param>
		/// <param name="Comma">optional object Comma</param>
		/// <param name="Space">optional object Space</param>
		/// <param name="Other">optional object Other</param>
		/// <param name="OtherChar">optional object OtherChar</param>
		/// <param name="FieldInfo">optional object FieldInfo</param>
		/// <param name="TextVisualLayout">optional object TextVisualLayout</param>
		/// <param name="DecimalSeparator">optional object DecimalSeparator</param>
		/// <param name="ThousandsSeparator">optional object ThousandsSeparator</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier, object consecutiveDelimiter, object tab, object semicolon, object comma, object space, object other, object otherChar, object fieldInfo, object textVisualLayout, object decimalSeparator, object thousandsSeparator)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier, consecutiveDelimiter, tab, semicolon, comma, space, other, otherChar, fieldInfo, textVisualLayout, decimalSeparator, thousandsSeparator);
			Invoker.Method(this, "_OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public void _OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier);
			Invoker.Method(this, "_OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL09 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		/// <param name="ConsecutiveDelimiter">optional object ConsecutiveDelimiter</param>
		/// <param name="Tab">optional object Tab</param>
		/// <param name="Semicolon">optional object Semicolon</param>
		/// <param name="Comma">optional object Comma</param>
		/// <param name="Space">optional object Space</param>
		/// <param name="Other">optional object Other</param>
		/// <param name="OtherChar">optional object OtherChar</param>
		/// <param name="FieldInfo">optional object FieldInfo</param>
		/// <param name="TextVisualLayout">optional object TextVisualLayout</param>
		/// <param name="DecimalSeparator">optional object DecimalSeparator</param>
		/// <param name="ThousandsSeparator">optional object ThousandsSeparator</param>
		[SupportByLibrary("XL09")]
		public void OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier, object consecutiveDelimiter, object tab, object semicolon, object comma, object space, object other, object otherChar, object fieldInfo, object textVisualLayout, object decimalSeparator, object thousandsSeparator)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier, consecutiveDelimiter, tab, semicolon, comma, space, other, otherChar, fieldInfo, textVisualLayout, decimalSeparator, thousandsSeparator);
			Invoker.Method(this, "OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		/// <param name="ConsecutiveDelimiter">optional object ConsecutiveDelimiter</param>
		/// <param name="Tab">optional object Tab</param>
		/// <param name="Semicolon">optional object Semicolon</param>
		/// <param name="Comma">optional object Comma</param>
		/// <param name="Space">optional object Space</param>
		/// <param name="Other">optional object Other</param>
		/// <param name="OtherChar">optional object OtherChar</param>
		/// <param name="FieldInfo">optional object FieldInfo</param>
		/// <param name="TextVisualLayout">optional object TextVisualLayout</param>
		/// <param name="DecimalSeparator">optional object DecimalSeparator</param>
		/// <param name="ThousandsSeparator">optional object ThousandsSeparator</param>
		/// <param name="TrailingMinusNumbers">optional object TrailingMinusNumbers</param>
		/// <param name="Local">optional object Local</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier, object consecutiveDelimiter, object tab, object semicolon, object comma, object space, object other, object otherChar, object fieldInfo, object textVisualLayout, object decimalSeparator, object thousandsSeparator, object trailingMinusNumbers, object local)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier, consecutiveDelimiter, tab, semicolon, comma, space, other, otherChar, fieldInfo, textVisualLayout, decimalSeparator, thousandsSeparator, trailingMinusNumbers, local);
			Invoker.Method(this, "OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL09 XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		[SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public void OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier);
			Invoker.Method(this, "OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="UpdateLinks">optional object UpdateLinks</param>
		/// <param name="ReadOnly">optional object ReadOnly</param>
		/// <param name="Format">optional object Format</param>
		/// <param name="Password">optional object Password</param>
		/// <param name="WriteResPassword">optional object WriteResPassword</param>
		/// <param name="IgnoreReadOnlyRecommended">optional object IgnoreReadOnlyRecommended</param>
		/// <param name="Origin">optional object Origin</param>
		/// <param name="Delimiter">optional object Delimiter</param>
		/// <param name="Editable">optional object Editable</param>
		/// <param name="Notify">optional object Notify</param>
		/// <param name="Converter">optional object Converter</param>
		/// <param name="AddToMru">optional object AddToMru</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook _Open(string filename, object updateLinks, object readOnly, object format, object password, object writeResPassword, object ignoreReadOnlyRecommended, object origin, object delimiter, object editable, object notify, object converter, object addToMru)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, updateLinks, readOnly, format, password, writeResPassword, ignoreReadOnlyRecommended, origin, delimiter, editable, notify, converter, addToMru);
			object returnItem = Invoker.MethodReturn(this, "_Open", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook _Open(string filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			object returnItem = Invoker.MethodReturn(this, "_Open", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		/// <param name="ConsecutiveDelimiter">optional object ConsecutiveDelimiter</param>
		/// <param name="Tab">optional object Tab</param>
		/// <param name="Semicolon">optional object Semicolon</param>
		/// <param name="Comma">optional object Comma</param>
		/// <param name="Space">optional object Space</param>
		/// <param name="Other">optional object Other</param>
		/// <param name="OtherChar">optional object OtherChar</param>
		/// <param name="FieldInfo">optional object FieldInfo</param>
		/// <param name="TextVisualLayout">optional object TextVisualLayout</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void __OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier, object consecutiveDelimiter, object tab, object semicolon, object comma, object space, object other, object otherChar, object fieldInfo, object textVisualLayout)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier, consecutiveDelimiter, tab, semicolon, comma, space, other, otherChar, fieldInfo, textVisualLayout);
			Invoker.Method(this, "__OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Origin">object Origin</param>
		/// <param name="StartRow">object StartRow</param>
		/// <param name="DataType">object DataType</param>
		/// <param name="TextQualifier">LateBindingApi.ExcelApi.Enums.XlTextQualifier TextQualifier</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void __OpenText(string filename, object origin, object startRow, object dataType, LateBindingApi.ExcelApi.Enums.XlTextQualifier textQualifier)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, origin, startRow, dataType, textQualifier);
			Invoker.Method(this, "__OpenText", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="CommandText">optional object CommandText</param>
		/// <param name="CommandType">optional object CommandType</param>
		/// <param name="BackgroundQuery">optional object BackgroundQuery</param>
		/// <param name="ImportDataAs">optional object ImportDataAs</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook OpenDatabase(string filename, object commandText, object commandType, object backgroundQuery, object importDataAs)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, commandText, commandType, backgroundQuery, importDataAs);
			object returnItem = Invoker.MethodReturn(this, "OpenDatabase", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook OpenDatabase(string filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			object returnItem = Invoker.MethodReturn(this, "OpenDatabase", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CheckOut(string filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			Invoker.Method(this, "CheckOut", paramsArray);
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool CanCheckOut(string filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			object returnItem = Invoker.MethodReturn(this, "CanCheckOut", paramsArray);
			return (bool)returnItem;
		}

		/// <summary>
		/// SupportByLibrary XL10 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Stylesheets">optional object Stylesheets</param>
		[SupportByLibrary("XL10")]
		public LateBindingApi.ExcelApi.Workbook OpenXML(string filename, object stylesheets)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, stylesheets);
			object returnItem = Invoker.MethodReturn(this, "OpenXML", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Stylesheets">optional object Stylesheets</param>
		/// <param name="LoadOption">optional object LoadOption</param>
		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook OpenXML(string filename, object stylesheets, object loadOption)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, stylesheets, loadOption);
			object returnItem = Invoker.MethodReturn(this, "OpenXML", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL10 XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook OpenXML(string filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			object returnItem = Invoker.MethodReturn(this, "OpenXML", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		/// <param name="Stylesheets">optional object Stylesheets</param>
		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook _OpenXML(string filename, object stylesheets)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename, stylesheets);
			object returnItem = Invoker.MethodReturn(this, "_OpenXML", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		/// <summary>
		/// SupportByLibrary XL11 XL12 XL14 
		/// </summary>
		/// <param name="Filename">string Filename</param>
		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.ExcelApi.Workbook _OpenXML(string filename)
		{
			object[] paramsArray = Invoker.ValidateParamsArray(filename);
			object returnItem = Invoker.MethodReturn(this, "_OpenXML", paramsArray);
			LateBindingApi.ExcelApi.Workbook newObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnItem) as LateBindingApi.ExcelApi.Workbook;
			return newObject;
		}

		#endregion
   
        #region IEnumerable Members
        
        [SupportByLibrary("XL09","XL10","XL11","XL12","XL14")]
		public IEnumerator GetEnumerator()
		{
			object enumProxy = Invoker.PropertyGet(this, "_NewEnum");
			COMObject enumerator = new COMObject(this, enumProxy);
			Invoker.Method(enumerator, "Reset", null);
			bool isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
            while (true == isMoveNextTrue)
            {
                object itemProxy = Invoker.PropertyGet(enumerator, "Current", null);
                COMObject returnClass = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, itemProxy);
                isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
				yield return returnClass;
            }
        }

        #endregion
		#pragma warning restore
	}
}